      SUBROUTINE SET4(NSTATE,JSTATE,ATAU,EFACT,IUNIT,IPRINT)
C  Copyright (C) 2019 J. M. Hutson & C. R. Le Sueur
C  Distributed under the GNU General Public License, version 3
      USE basis_data
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C  THIS ROUTINE SETS UP BASIS FOR ITYPE=4.
C  LINEAR RIGID ROTOR + ASYMMETRIC RIGID ROTOR SCATTERING.
C  INITIAL ROUTINE WRITTEN BY T.R. PHILLIPS, GISS, AUGUST 1990
C    DERIVED FROM ROUTINES SET6 AND SET3.
C  EXTENSIVELY REVISED FOR MOLSCAT VERSION 12 BY TRP (JUL 93)
C  CURRENT CODE ENTIRELY REWRITTEN (VERSION 14) BY S GREEN (5 AUG 94)
C
C  IMPLEMENTS THREE METHODS TO INPUT BASIS:
C  1) A,B,C .GT. 0 SPECIFIED; GENERATE ASYM TOP FNS VIA SET6C ROUTINE
C  2) NLEVEL.GT.0 SPECIFIED; READ ASYM TOP FNS FROM IUNIT=IASYMU
C  -- FOR BOTH 1 & 2, EXPAND WITH J2=J2MIN,J2MAX,J2STEP; LINEAR
C     ROTOR ENERGIES MUST BE CALCULABLE FROM BE(2); SCREEN ON EMAX
C  3) NLEVEL.LT.0 SPECIFIED; READ ASYM TOP FNS FROM IUNIT=IASYMU
C     FILTERING ON JLEVEL(3*I-1),JLEVEL(3*I)=J1,ITAU; J2=JLEVEL(3*I);
C     LEVEL ENERGIES MAY BE SPECIFIED IN ELEVEL, OTHERWISE CALC'D
C
      DIMENSION JSTATE(2),ATAU(2)
C  N.B. JSTATE AND ATAU OCCUPY SAME STORAGE PASSED FROM DRIVER/BASIN
C  ON ENTRY X(IXNEXT) SHOULD BE SAME AS ATAU(1)==JSTATE(1)
C  NOTE: NIPR NOT USED FOR JSTATE STORAGE; THIS IS CONSERVATIVE
C  IXNEXT MUST BE INCREMENTED TO REFLECT *ATAU* STORAGE USED.
C
      LOGICAL EIN
C
C  DYNAMIC STORAGE COMMON BLOCK ...
      COMMON /MEMORY/ MX,IXNEXT,NIPR,IDUMMY,X(1)
C
C  DEFAULT UNIT IS STANDARD INPUT
      DATA IDU /5/
C
      IF (A(1).GT.0.D0 .AND. B(1).GT.0.D0 .AND. C(1).GT.0.D0)
     1  GOTO 3000
C
C  ASYMMETRIC TOP FUNCTIONS WILL BE INPUT FROM IUNIT; CHECK IT
      IF (IPRINT.GE.1) WRITE(6,602) IUNIT
  602 FORMAT(/'  ASYMMETRIC TOP BASIS WILL BE INPUT FROM UNIT IASYMU =',
     1       I4//'  QUANTITIES IN IASYMU MUST BE IN UNITS',
     2       ' SPECIFIED BY EUNITS'/)
      IF (NLEVEL.GT.0) THEN
        NREAD=NLEVEL
        IF (IPRINT.GE.1) WRITE(6,603) NLEVEL
  603   FORMAT('  NUMBER OF INPUT LEVELS SPECIFIED BY NLEVEL IS',I6)
      ELSE
        IF (IUNIT.EQ.IDU) THEN
          WRITE(6,*) ' *** SET4. CANNOT READ FROM STD INPUT FOR',
     1               ' NLEVEL.LE.0'
          STOP
        ENDIF
        NREAD=1000000
        IF (IPRINT.GE.1)
     1    WRITE(6,*) ' WILL INPUT LEVELS UNTIL END-OF-FILE'
      ENDIF
C
      IF (NLEVEL.LT.0) GOTO 7000
C
C  BELOW IS 'CASE 2' -- RESULT SHOULD BE SAME AS FOR 'CASE 1'
C
C  READ IN ASYMMETRIC RIGID ROTOR WAVEFUNCTIONS AND ENERGIES ---
C  CODE BELOW FOLLOWS SET6 CODE
      NSTATE=0
      IOFF=0
      NKVAL=0
      DO 2000 III=1,NREAD
        READ(IUNIT,*,END=9000) JI,ITAU,EINP
C       READ(IUNIT,500,END=9000) JI,ITAU,EINP
  500   FORMAT(2I5,G18.10)
        NSTATE=NSTATE+1
        JI=ABS(JI)
        NK=2*JI+1
        ELEVEL(NSTATE)=EINP*EFACT
C  SEE IF WE SHOULD SKIP ON JMIN,JMAX,JSTEP OR EMAX
        IF (JMAX.LE.0) GOTO 2080

        JDIF=JI-JMIN
        JDIF=JDIF-JSTEP*(JDIF/JSTEP)
        IF (JDIF.EQ.0 .AND. JI.GE.JMIN .AND. JI.LE.JMAX) GOTO 2080

        IF (IPRINT.GE.1)
     1    WRITE(6,611) JI,ITAU,ELEVEL(NSTATE),JMIN,JSTEP,JMAX
  611     FORMAT(/'  INPUT LEVEL J, TAU, E =',2I5,F13.3,' SKIPPED. ',
     1           'J NOT IN RANGE',I4,' (',I4,')',I4)
        GOTO 2070

 2080   IF (EMAX.LE.0.D0) GOTO 2090
        IF (ELEVEL(NSTATE).LE.EMAX) GOTO 2090

        IF (IPRINT.GE.1) WRITE(6,612) JI,ITAU,ELEVEL(NSTATE),EMAX
  612   FORMAT(/'  INPUT LEVEL J, TAU, E =',2I5,F13.3,' SKIPPED ',
     1         'DUE TO EMAX =',F11.3)
C  REACH BELOW IF WE ARE SKIPPING THIS SET
 2070   NSTATE=NSTATE-1
        READ(IUNIT,501,END=9100) (ATAUX,I=1,NK)
        GOTO 2000

C  REACH BELOW IF WE ARE INCLUDING THIS SET
 2090   CONTINUE
C  SHIFT ATAU BY 6 WORDS TO MAKE ROOM FOR NEW JSTATE; NB. NIPR NOT USED
        IOFF=IOFF+6
        DO 2020 I=1,NKVAL
 2020     ATAU(IOFF+NKVAL+1-I)=ATAU(IOFF+NKVAL-5-I)
        INST=IOFF+NKVAL
        READ(IUNIT,501,END=9100) (ATAU(INST+I),I=1,NK)
  501   FORMAT(6F12.8)
C  OUTPUT INFORMATION READ.
        IF (IPRINT.GE.1) WRITE(6,614) NSTATE,JI,ITAU,EINP,ELEVEL(NSTATE)
  614   FORMAT(/'  INPUT LEVEL',I4,'  J, TAU =',2I4,'  ENERGY =',F15.5,
     1         '  =  ',F15.5,' CM-1')
        MJI=-JI
        IF (IPRINT.GE.1) WRITE(6,615) (ATAU(INST+1+JI+I),I, I=MJI,JI)
  615   FORMAT(10X,'INPUT COEFFICIENTS ARE'/(10X,6(F12.6,'(',I3,')')))
C
C  GET PARITY CODE FROM ATAU SYMMETRIES. . .
        IPAR=IPASYM(JI,NK,ATAU(INST+1))
C  IPAR=-1 IS ERROR RETURN FROM IPASYM.
        IF (IPAR.NE.-1) GOTO 2001

        WRITE(6,*) ' *** SET4. TERMINAL ERROR.'
        STOP
C  REORDER JSTATE TO RECEIVE NEW ROW.
 2001   NRM1=NSTATE-1
        IF (NRM1.LE.0) GOTO 2100

        IOLD=6*NRM1
        IX=6*NSTATE
        DO 2110 II=1,6
          IX=IX-1
          DO 2120  I=1,NRM1
            JSTATE(IX)=JSTATE(IOLD)
            IX=IX-1
 2120       IOLD=IOLD-1
 2110   CONTINUE
C
 2100   JSTATE(  NSTATE)=JI
        JSTATE(2*NSTATE)=ITAU
        JSTATE(3*NSTATE)=IPAR
        JSTATE(4*NSTATE)=NKVAL
        JSTATE(5*NSTATE)=NK
        JSTATE(6*NSTATE)=NSTATE
        NKVAL=NKVAL+NK
        GOTO 2000
C
C  * * * END OF FILE CONDITIONS * * *
 9000   IF (NLEVEL.GT.0) GOTO 2200

        WRITE(6,606) IUNIT,NSTATE
  606   FORMAT(/'  END OF FILE ENCOUNTERED ON UNIT',I4,'   AFTER',I5,
     &         '  FUNCTIONS.')
        GOTO 2400

 2200   WRITE(6,607) IUNIT,NSTATE
  607   FORMAT(/'  PREMATURE E.O.F. ON UNIT',I4,'.  NLEVEL REDUCED TO',
     1         I6)
        GOTO 2400

 9100   WRITE(6,608) IUNIT,NSTATE
  608   FORMAT(/' * * * ERROR.   E.O.F. ON UNIT',I4,
     1         '  BEFORE ATAU CARDS FOR NSTATE =',I5)
        WRITE(6,699)
  699   FORMAT(/' * * * TERMINAL ERROR.')
        STOP
 2000 CONTINUE
C  THIS COMPLETES READ(IASYMU) LOOP
C
C  SET JLEVEL() (ITYPE=6 FORMAT); N.B. ELEVEL() ALREADY SET
 2400 DO 2401 I=1,NSTATE
        JLEVEL(2*I-1)=JSTATE(I)
 2401   JLEVEL(2*I)  =JSTATE(I+NSTATE)
C  CORRECT JSTATE(LEV,4) FOR SPACE TAKEN BY JSTATE. . .
      IF (IOFF.NE.6*NSTATE) THEN
        WRITE(6,698) IOFF, NSTATE
  698   FORMAT(' *** SET4. INDEXING ERROR.  IOFF,NSTATE =',2I6)
        STOP
      ENDIF
      IX=3*NSTATE+1
      IXTOP=4*NSTATE
      DO 2410 I=IX,IXTOP
 2410   JSTATE(I)=JSTATE(I)+IOFF
C  INCREMENT IXNEXT FOR STORAGE TAKEN BY ATAU
      IXNEXT=IXNEXT+NKVAL
C  CHECK THAT FUNCTIONS ARE ORTHOGONAL
      CALL CHECK6(NSTATE,JSTATE,ATAU)
      GOTO 4000
C
C  BELOW IS 'CASE 1', I.E. GENERATE BASIS VIA SET6C
 3000 CALL SET6C(JSTATE,ATAU,NSTATE,.FALSE.,IPRINT)
C  N.B. SET6C INCREMENTS IXNEXT FOR ATAU STORAGE
C    IF VALID IASYMU IS GIVEN, OUTPUT ROTOR WFNS
      IF (IUNIT.LE.0 .OR. IUNIT.GE.100 .OR. IUNIT.EQ.IDU) GOTO 4000

      WRITE(6,1098) IUNIT
 1098 FORMAT(/' *** SET4 WILL OUTPUT ROTOR WAVEFUNCTIONS TO UNIT',
     1       I4/' FOR FUTURE INPUT'//
     2       ' ENERGIES ARE GIVEN IN UNITS SPECIFIED BY EUNITS')
      DO 1011 I=1,NSTATE
        JI  =JSTATE(         I)
        ITAU=JSTATE(  NSTATE+I)
        ISTA=JSTATE(3*NSTATE+I)
        NK  =JSTATE(4*NSTATE+I)
        INDX=JSTATE(5*NSTATE+I)
C       WRITE(IUNIT,*,ERR=1099) JI,ITAU,ELEVEL(INDX)/EFACT
        WRITE(IUNIT,500,ERR=1099) JI,ITAU,ELEVEL(INDX)/EFACT
 1011   WRITE(IUNIT,501,ERR=1099) (ATAU(ISTA+II),II=1,NK)
      RETURN
 1099 WRITE(6,*) ' *** SET4. ERROR WRITING TO IASYMU; WFNS NOT SAVED'
      RETURN
C
C  CALL J6TO4 TO EXPAND 'ITYPE=6' TO 'ITYPE=4' FORMAT
C  SET UP WORKING STORAGE. IXNEXT ALREADY REFLECTS ATAU STORAGE
C  N.B. JSTATE STORAGE DOES *NOT* REFLECT NIPR; SHOULD BE CONSERVATIVE
 4000 IOFF=6*NSTATE
      IXEL=IXNEXT+IOFF
      IXJL=IXEL+MXELVL
      IXJNW=IXJL+MXJLVL
      NAVAIL=MX-IXJNW
      IF (NAVAIL.LT.8*NSTATE) THEN
        WRITE(6,*) ' *** SET4.  INSUFFICIENT WORKING SPACE FOR J6TO4'
        WRITE(6,*) ' IXNEXT,MX,NAVAIL =',IXNEXT,MX,NAVAIL
        STOP
      ENDIF
C  J6TO4 EXPANDS ITYPE=6 DATA FORMAT WITH POSSIBLE J2 VALUES
C    TO PRODUCE ITYPE=4 DATA FORMAT
      CALL J6TO4(NSTATE,JSTATE,ATAU,X(IXJNW),NAVAIL,X(IXEL),X(IXJL))
      RETURN
C
C  CODE BELOW IS 'CASE 3' NLEVEL.LT.0; FILTER IASYMU INPUT ON JLEVEL
 7000 NLEVEL=ABS(NLEVEL)
      IF (NLEVEL.GT.MXELVL) THEN
        WRITE(6,*) ' *** SET4. REQUESTED NLEVEL.GT.MXELVL'
        STOP
      ENDIF
      IF (IPRINT.GE.1) THEN
        WRITE(6,*) '  BASIS FUNCTIONS DETERMINED BY &BASIS JLEVEL()'
        WRITE(6,*) '    NUMBER OF LEVELS (NLEVEL) =',NLEVEL
      ENDIF
      EIN=.FALSE.
      DO 7001 I=1,NLEVEL
 7001   EIN=EIN .AND. ELEVEL(I).GT.0.D0
      IF (EIN) THEN
        IF (IPRINT.GE.1) WRITE(6,*)
     1        '  ENERGIES FOR BASIS FNS TAKEN FROM &BASIN ELEVEL VALUES'
      ELSE
        IF (BE(2).LE.0.D0) THEN
          WRITE(6,*) ' *** SET4. CANNOT OBTAIN LINEAR ROTOR',
     1               ' ENERGY FROM BE(2)'
          STOP
        ENDIF
        IF (IPRINT.GE.1) THEN
          WRITE(6,*) '  ASYMMETRIC TOP ENERGIES TAKEN FROM IASYMU'
          WRITE(6,644) BE(2)
  644     FORMAT(/'  LINEAR ROTOR LEVELS OBTAINED FROM B(E) =',
     1           F12.8)
          IF (ALPHAE(2).NE.0.D0) WRITE(6,645) ALPHAE(2)
  645     FORMAT(27X,'CORRECTED FOR ALPHA(E) = ',F12.8)
          IF (DE(2).NE.0.D0) WRITE(6,646) DE(2)
  646     FORMAT(27X,'CORRECTED FOR D(E) = ',F12.8)
        ENDIF
      ENDIF
C  BEGIN READ(IASYMU) LOOP
      NSTATE=0
      IOFF=0
      NKVAL=0
      DO 7100 III=1,NREAD
        READ(IUNIT,*,END=9200) JI,ITAU,EINP
C       READ(IUNIT,500,END=9200) JI,ITAU,EINP
        NK=2*JI+1
        EINX=EINP*EFACT
        NMATCH=0
        DO 7200 IND=1,NLEVEL
          IF (JLEVEL(3*IND-2).NE.JI .OR. JLEVEL(3*IND-1).NE.ITAU)
     1      GOTO 7200

C  WE'VE FOUND A MATCH ON JI, ITAU,
          NMATCH=NMATCH+1
          J2=JLEVEL(3*IND)
          FJ=DBLE(J2)
          FJ=FJ*(FJ+1.D0)
          E2=(BE(2)-ALPHAE(2)*0.5D0)*FJ - DE(2)*FJ*FJ
          IF (.NOT.EIN) ELEVEL(IND)=EINX+E2
C  EXPAND JI WITH J2 TO J12 IN GENERATING NSTATE,JSTATE FROM THIS SET
          J12MIN=ABS(JI-J2)
          J12MAX=JI+J2
          DO 7400 J12=J12MIN,J12MAX
            NSTATE=NSTATE+1
C  SHIFT ATAU BY 8 WORDS TO MAKE ROOM FOR INCOMING JSTATE
            IOFF=IOFF+8
            DO 7220 I=1,NKVAL
 7220         ATAU(IOFF+NKVAL+1-I)=ATAU(IOFF+NKVAL-7-I)
C  READ ATAU, BUT ONLY THE FIRST TIME WE USE THIS WAVEFUNCTION
            IF (NMATCH.EQ.1) THEN
              INST=IOFF+NKVAL
              READ(IUNIT,501,END=9300) (ATAU(INST+I),I=1,NK)
C  OUTPUT INFORMATION READ.
              IF (IPRINT.GE.1) WRITE(6,651) JI,ITAU,EINP,EINX
  651         FORMAT(/' INPUT LEVEL,  J, TAU =',2I4,'  ENERGY =',F12.4,
     1               '  =  ',F12.4,' CM-1')
              MJI=-JI
              IF (IPRINT.GE.1)
     1          WRITE(6,652) (ATAU(INST+1+JI+I),I,I=MJI,JI)
  652           FORMAT(10X,'INPUT COEFFICIENTS ARE'/
     1                 (10X,6(F12.6,'(',I3,')')))
C  GET PARITY CODE FROM ATAU SYMMETRIES. . .
              IPAR=IPASYM(JI,NK,ATAU(INST+1))
C  IPAR=-1 IS ERROR RETURN FROM IPASYM.
              IF (IPAR.EQ.-1) THEN
                WRITE(6,*) ' *** SET4. ILLEGAL SYMMETRY FOR INPUT WFN.'
                STOP
              ENDIF
              ISTA=NKVAL
              NKVAL=NKVAL+NK
            ENDIF
C  REORDER JSTATE TO RECEIVE NEW ROW; ADAPTED FROM SET6 CODE.
            NRM1=NSTATE-1
            IF (NRM1.LE.0) GOTO 7300

            IOLD=8*NRM1
            IX=8*NSTATE
            DO 7310 II=1,8
              IX=IX-1
              DO 7320 I=1,NRM1
                JSTATE(IX)=JSTATE(IOLD)
                IX=IX-1
 7320           IOLD=IOLD-1
 7310       CONTINUE
 7300       JSTATE(  NSTATE)=J12
            JSTATE(2*NSTATE)=J2
            JSTATE(3*NSTATE)=JI
            JSTATE(4*NSTATE)=ITAU
            JSTATE(5*NSTATE)=IPAR
            JSTATE(6*NSTATE)=ISTA
            JSTATE(7*NSTATE)=NK
            JSTATE(8*NSTATE)=IND
 7400     CONTINUE
C  THIS ENDS J12 LOOP
 7200   CONTINUE
C  THIS ENDS LOOP OVER NLEVEL, JLEVEL() SETS.
C  IF WE DID NOT USE THIS FUNCTION (NMATCH.EQ.0) SKIP ATAU CARDS
        IF (NMATCH.LE.0) READ(IUNIT,501,END=9300) (ATAUX,I=1,NK)
        GOTO 7100
C
C  END OF FILE CONDITIONS
 9300   WRITE(6,*) ' *** SET4. EOF ON IASYMU WHILE READING ATAU DATA'
        STOP
 9200   IF (IPRINT.GE.1)
     1    WRITE(6,*) ' *** SET4. NORMAL EOF ENCOUNTERED ON IASYMU'
        GOTO 7500
C
 7100 CONTINUE
C  THIS ENDS LOOP OVER READ IASYMU
C
C  CORRECT ISTA=JSTATE(LEV,6) FOR SPACE TAKEN BY JSTATE. . .
 7500 IF (IOFF.NE.8*NSTATE) THEN
        WRITE(6,698) IOFF, NSTATE
        STOP
      ENDIF
      IX=5*NSTATE+1
      IXTOP=6*NSTATE
      DO 7505 I=IX,IXTOP
 7505   JSTATE(I)=JSTATE(I)+IOFF
C
C  NEED TO SET JMIN,JMAX FOR USE IN SELECTING ORBITAL L IN BASE
      JMIN=JSTATE(1)
      JMAX=JMIN
      DO 7510 I=1,NSTATE
        JMIN=MIN(JMIN,JSTATE(I))
 7510   JMAX=MAX(JMAX,JSTATE(I))
C
C  MAKE SURE THAT WE HAVE FOUND AN ASYMMETRIC ROTOR WFN FOR
C  ALL NLEVEL JLEVEL() SETS.  UNLIKE ITYPE=6, WE DO NOT REORDER
      DO 7600 I=1,NLEVEL
        DO 7601 IX=1,NSTATE
          IF (JSTATE(7*NSTATE+IX).EQ.IX) GOTO 7600
 7601   CONTINUE
        WRITE(6,660) I,JLEVEL(3*I-2),JLEVEL(3*I-1)
  660   FORMAT(/' *** SET4. DID NOT FIND BASIS FUNCTIONS FOR LEVEL',I4/
     1         '           JI,ITAU =',2I6)
        STOP
 7600 CONTINUE

C  INCREMENT IXNEXT TO REFLECT ATAU STORAGE
      IXNEXT=IXNEXT+NKVAL
      RETURN
C
      END
