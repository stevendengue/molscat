      SUBROUTINE CPL21(N,MXLAM,LAM,NSTATE,JSTATE,JSINDX,MVALUE,
     1                 VL,IPRINT,LFIRST)
C  Copyright (C) 2019 J. M. Hutson & C. R. Le Sueur
C  Distributed under the GNU General Public License, version 3
C
C  THIS SUBROUTINE CALCULATES THE COUPLING MATRIX FOR COUPLED STATES
C  LINEAR ROTOR-ATOM (ITYPE=21).
C  SEE (FOR EXAMPLE) EQN 30 OF MCGUIRE AND KOURI JCP (1974) 60 2488
C
C  30 DEC 93. INCORPORATES JM Hutson (V12) USE OF J3J000
C  ALL MV = 0,MAX(MVALUE) ARE CALCULATED EVEN IF LOWER ONES ARE
C  NOT NEEDED, E.G., BECAUSE OF MSET,MHI.
C  SAVES COUPLING COEFFICIENTS USING NEW DYNAMIC STORAGE
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE NOMEM,NL12,IXMX,ISTART,IFIRST
C  SPECIFICATIONS FOR ARGUMENTS
      DIMENSION LAM(MXLAM),JSTATE(NSTATE),JSINDX(N),VL(1)
      INTEGER IPRINT
      LOGICAL LFIRST
C
      LOGICAL LODD,NOMEM
      DATA Z0/0.D0/
C
C  DYNAMIC STORAGE COMMON BLOCK ...
      COMMON /MEMORY/ MX,IXNEXT,NIPR,IDUMMY,X(1)
C
C  STATEMENT FUNCTION DEFINITIONS
      Z(I)=DBLE(I+I+1)
      LODD(I)=I-2*(I/2).NE.0
C
C  IF LFIRST IS TRUE (FIRST CALL), DO SOME INITIALIZATION
      IF (LFIRST) THEN
        IFIRST=-1
        LFIRST=.FALSE.
        NOMEM=.FALSE.
      ENDIF
C
      XM=MVALUE
      PM=1.D0
      IF (LODD(MVALUE)) PM=-1.D0
C
      IF (IFIRST.GT.-1) GOTO 3500
C  FIRST TIME THROUGH SET UP SOME STORAGE POINTERS
      NL12=NSTATE*(NSTATE+1)/2
      IXMX=NL12*MXLAM
      ISTART=MX+1
C
 3500 MVABS=ABS(MVALUE)
C  SEE IF VALUES ARE STORED FOR THIS HIGH AN MVALUE
C  IF NOT, TRY TO STORE THEM IN XCPL().
      IF (MVABS.LE.IFIRST .OR. NOMEM) GOTO 3900

      MV=IFIRST+1
C  FIRST CHECK THAT WE STILL HAVE A CONTINUOUS BLOCK OF HI MEMORY.
 3600 IF (MX.EQ.ISTART-(IFIRST+1)*IXMX-1) GOTO 3610

      IF (IPRINT.GE.1) WRITE(6,602) MV,ISTART-1,MX,IXMX*(IFIRST+1)
  602 FORMAT(/'  CPL21 (FEB 93).  HIGH MEMORY FRAGMENTED.  CANNOT',
     1       ' STORE COUPLING COEFFS FOR MVAL =',I3/ 19X,
     2       'ORIGINAL MINUS CURRENT MEMORY LIMITS .NE. NO. USED =',
     3       3I12)
      NOMEM=.TRUE.
      GOTO 3900

C  TEST FOR AVAILABLE STORAGE; NEED IXMX FOR THIS MVAL
 3610 NAVAIL=MX-IXNEXT+1
      IF (IXMX.LE.NAVAIL) GOTO 3601

      IF (IPRINT.GE.3) WRITE(6,692) MV,IXMX,NAVAIL
  692 FORMAT(/'  CPL21 (FEB 93).   UNABLE TO STORE 3-J VALUES FOR ',
     1        'MVAL =',I3/
     2        '                    REQUIRED AND AVAILABLE STORAGE =',
     3        2I9)
C  SET NOMEM TO REFLECT INABILITY TO ADD MORE M-VALUES
      NOMEM=.TRUE.
      GOTO 3900
C
C  REDUCE 'TOP OF MEMORY' AND STORE COUPLING VALUES FOR THIS MVAL
C  START INDEX AFTER M-BLOCKS ALREADY STORED (STARTING W/ MV=0)
 3601 MX=MX-IXMX
      IX=MV*IXMX
C
C  THIS SECTION OF CODE CALCULATES THE COUPLING MATRIX ELEMENTS USING
C  THE SUBROUTINE J3J000 WHICH CALCULATES A WHOLE SET OF 3J
C  COEFFICIENTS (J1 J2 J3).  THE MATRIX ELEMENTS ARE STORED IN X
C               ( 0  0  0)
C
      PMV=1.D0
      IF (LODD(MV)) PMV=-1.D0
      DO 3200 IL=1,MXLAM
        LM=LAM(IL)
        JSAV=-1
        ITJ=IXNEXT
        IXNEXT=ITJ+LM+LM+1
        NUSED=0
        CALL CHKSTR(NUSED)
        DO 3201 I1=1,NSTATE
          J1=JSTATE(I1)
          IF (J1.NE.JSAV) THEN
            CALL J3J000(DBLE(J1),DBLE(LM),IVALJ,X(ITJ),XJMIN)
            JMIN=ABS(J1-LM)
            JMAX=J1+LM
            JSAV=J1
          ENDIF
        DO 3201 I2=1,I1
          J2=JSTATE(I2)
          IX=IX+1
          IF (J2.LT.JMIN .OR. J2.GT.JMAX .OR. J1.LT.MV .OR.
     1        J2.LT.MV   .OR. LODD(J2+JMAX)) THEN
            X(ISTART-IX)=0.D0
          ELSE
            INDJ=ITJ+(J2-JMIN)/2
            IF (MV.EQ.0) THEN
              X(ISTART-IX)=PMV*SQRT(Z(J1)*Z(J2))*X(INDJ)**2
            ELSE
              X(ISTART-IX)=PMV*SQRT(Z(J1)*Z(J2))*X(INDJ)*
     1          THRJ(DBLE(J1),DBLE(LM),DBLE(J2),-DBLE(MV),0.D0,DBLE(MV))
            ENDIF
          ENDIF
 3201   CONTINUE
 3200   IXNEXT=ITJ
C
      IF (IPRINT.GE.4) WRITE(6,693) MV,IXMX,NAVAIL
  693 FORMAT(/'  CPL21 (FEB 93).   3-J VALUES STORED FOR MVAL =',I3
     1       /'                    REQUIRED AND AVAILABLE STORAGE =',
     2       2I9)
C
C  RESET IFIRST TO REFLECT HIGHEST M-VALUE STORED.
      IFIRST=MV
C
C  SEE IF CURRENT MVALUE REQUIRES MORE STORED M-VALUES.
      MV=MV+1
      IF (MV.LE.MVABS) GOTO 3600
C
C  THIS SECTION OF CODE TRANSFERS THE COUPLING MATRIX ELEMENTS FROM THE
C  ARRAY X WHERE THEY WERE PREVIOUSLY STORED INTO THE VL ARRAY, CHANGING
C  SIGNS AS NECESSARY.
C
 3900 IF (MVABS.GT.IFIRST) GOTO 3800
      IXM=MVABS*IXMX

      NZERO=0
      DO 3513 LL=1,MXLAM
        NNZ=0
        I=LL
        LM=LAM(LL)
        DO 3503 ICOL=1,N
          I1=JSINDX(ICOL)
          J1=JSTATE(I1)
        DO 3503 IROW=1,ICOL
          I2=JSINDX(IROW)
          J2=JSTATE(I2)
          IF (I1.GT.I2) THEN
            IX12=I1*(I1-1)/2+I2
          ELSE
            IX12=I2*(I2-1)/2+I1
          ENDIF
          IX=IXM+(LL-1)*NL12+IX12
          VL(I)=X(ISTART-IX)
C  WE HAVE STORED COUPLING FOR POSITIVE MVALUES; CORRECT IF NECESSARY
          IF (MVALUE.LT.0 .AND. LODD(J1+J2+LM)) VL(I)=-VL(I)
          IF (VL(I).NE.0.D0) NNZ=NNZ+1
 3503     I=I+MXLAM
        IF (NNZ.LE.0) THEN
          NZERO=NZERO+1
          IF (IPRINT.GE.14) WRITE(6,612) MVALUE,LL
        ENDIF
  612   FORMAT('  * * * NOTE.  FOR MVALUE =',I4,',  ALL COUPLING '
     1         'COEFFICIENTS ARE 0.0 FOR EXPANSION TERM',I4)
 3513 CONTINUE

      IF (NZERO.GT.0 .AND. IPRINT.GE.10 .AND. IPRINT.LT.14)
     1  WRITE(6,620) MVALUE,NZERO
  620 FORMAT('  * * * NOTE.  FOR MVALUE =',I4,',  ALL COUPLING ',
     1       'COEFFICIENTS ARE 0.0 FOR',I5,' POTENTIAL EXPANSION TERMS')

      RETURN
C
C  THIS SECTION OF CODE CALCULATES COUPLING MATRIX ELEMENTS USING
C  FUNCTION THREEJ WHICH PRODUCES A SINGLE 3J COEFFICIENT (J1 J2 J3)
C                                                         ( 0  0  0).
C  MV.GT.IFIRST ==> VALUES NOT STORED.  CALCULATE THEM
 3800 NZERO=0
      DO 1511 LL=1,MXLAM
        LM=LAM(LL)
        XLM=LM
        NNZ=0
        I=LL
        DO 1501 ICOL=1,N
          JCOL=JSTATE(JSINDX(ICOL))
          XJCOL=JCOL
        DO 1501 IROW=1,ICOL
          JROW=JSTATE(JSINDX(IROW))
          XJROW=JROW
          VL(I)=PM*SQRT(Z(JROW)*Z(JCOL))*THREEJ(JROW,LM,JCOL)*
     &                                   THRJ(XJROW,XLM,XJCOL,-XM,Z0,XM)
          IF (VL(I).NE.0.D0) NNZ=NNZ+1
 1501     I=I+MXLAM
        IF (NNZ.LE.0) THEN
          NZERO=NZERO+1
          IF (IPRINT.GE.14) WRITE(6,612) MVALUE,LL
        ENDIF
 1511 CONTINUE

      IF (NZERO.GT.0 .AND. IPRINT.GE.10 .AND. IPRINT.LT.14)
     1  WRITE(6,620) MVALUE,NZERO

      RETURN
      END
