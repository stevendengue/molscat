      SUBROUTINE CPL25(N,MXLAM,LAM,NSTATE,JSTATE,JSINDX,MVALUE,
     1                 VL,IPRINT,LFIRST)
C  Copyright (C) 2019 J. M. Hutson & C. R. Le Sueur
C  Distributed under the GNU General Public License, version 3
C
C  CS COUPLING MATRIX FOR SYMMETRIC TOP ROTOR-ATOM (ITYPE=25)
C  SEE (FOR EXAMPLE) EQN 32 OF GREEN JCP (1976) 64 3463
C
C  SAVES COUPLING COEFFICIENTS USING NEW DYNAMIC STORAGE
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE NOMEM,NL12,IXMX,ISTART,IFIRST
C
C  SPECIFICATIONS FOR ARGUMENTS
      DIMENSION LAM(MXLAM),JSTATE(NSTATE,3),JSINDX(N),VL(1)
      INTEGER IPRINT
      LOGICAL LFIRST
C
      LOGICAL LODD,NOMEM
C
C  DYNAMIC STORAGE COMMON BLOCK ...
      COMMON /MEMORY/ MX,IXNEXT,NIPR,IDUMMY,X(1)
C
      DATA Z0 /0.D0/, HALF /0.5D0/, ONE /1.D0/
C
C  STATEMENT FUNCTION DEFINITIONS
      LODD(I)=I-2*(I/2).NE.0
C
C  IF LFIRST IS TRUE (FIRST CALL), DO SOME INITIALIZATION
      IF (LFIRST) THEN
        IFIRST=-1
        LFIRST=.FALSE.
        NOMEM=.FALSE.
      ENDIF
C
      SQRTHF=SQRT(HALF)
      XM=MVALUE
C
      IF (IFIRST.GT.-1) GOTO 3500

C  FIRST TIME THROUGH SET UP SOME STORAGE POINTERS
      NL12=NSTATE*(NSTATE+1)/2
      IXMX=NL12*MXLAM
      ISTART=MX+1
C
 3500 MVABS=ABS(MVALUE)
C  SEE IF VALUES ARE STORED FOR THIS HIGH AN MVALUE
C  IF NOT, TRY TO STORE THEM IN XCPL().
      IF (MVABS.LE.IFIRST .OR. NOMEM) GOTO 3900

      MV=IFIRST+1

C  FIRST CHECK THAT WE STILL HAVE A CONTINUOUS BLOCK OF HI MEMORY.
 3600 IF (MX.EQ.ISTART-(IFIRST+1)*IXMX-1) GOTO 3610
      IF (IPRINT.GE.1) WRITE(6,602) MV,ISTART-1,MX,IXMX*(IFIRST+1)
  602 FORMAT(/'  CPL25 (FEB 93).  HIGH MEMORY FRAGMENTED.  CANNOT',
     1       ' STORE COUPLING COEFFS FOR MVAL=',I3/19X,
     2       'ORIGINAL MINUS CURRENT MEMORY LIMITS .NE. NO. USED =',
     3       3I12)
      NOMEM=.TRUE.
      GOTO 3900

C  TEST FOR AVAILABLE STORAGE; NEED IXMX FOR THIS MVAL
 3610 NAVAIL=MX-IXNEXT+1
      IF (IXMX.LE.NAVAIL) GOTO 3601
      IF (IPRINT.GE.3) WRITE(6,692) MV,IXMX,NAVAIL
  692 FORMAT(/'  CPL25 (FEB 93).   UNABLE TO STORE 3-J VALUES FOR ',
     1        'MVAL =',I3/
     2        '                    REQUIRED AND AVAILABLE STORAGE =',
     3        2I9)
C  SET NOMEM TO REFLECT INABILITY TO ADD MORE M-VALUES
      NOMEM=.TRUE.
      GOTO 3900
C
C  REDUCE 'TOP OF MEMORY' AND STORE COUPLING VALUES FOR THIS MVAL
 3601 MX=MX-IXMX
C  START INDEX AFTER M-BLOCKS ALREADY STORED (STARTING WITH MV=0)
      IX=MV*IXMX
      DO 3200 IL=1,MXLAM
        LM=LAM(2*IL-1)
        MU=LAM(2*IL)
        DO 3201 I1=1,NSTATE
          J1 =JSTATE(I1,1)
          K1 =JSTATE(I1,2)
          IS1=JSTATE(I1,3)
        DO 3201 I2=1,I1
          J2 =JSTATE(I2,1)
          K2 =JSTATE(I2,2)
          IS2=JSTATE(I2,3)
          IX=IX+1
          XCPL=Z0
          IF (J1.LT.MV .OR. J2.LT.MV) GOTO 3201
          PARFCT=(ONE+PARSGN(J1+J2+IS1+IS2+LM+MU))*HALF
          IF (PARFCT.LE.1.D-5) GOTO 3201
          IF (K1.EQ.0) PARFCT=PARFCT*SQRTHF
          IF (K2.EQ.0) PARFCT=PARFCT*SQRTHF
          KDIF=K2-K1
          IF (ABS(KDIF).NE.MU) GOTO 3205
          WPAR=ONE
          IF (KDIF.LT.0 .AND. LODD(MU)) WPAR=-WPAR
C  CONTRIBUTION FROM (J1, K1, MVALUE / Y(LM,MU) / J2, K2, MVALUE)
          XCPL=PARFCT*WPAR*GSYMTP(J1,K1,J2,K2,MV,LM,KDIF)
 3205     KSUM=K2+K1
          IF (ABS(KSUM).NE.MU) GOTO 3201
C  CONTRIBUTION FROM (J1,-K1, MVALUE / Y(LM,MU) / J2, K2, MVALUE)
          XCPL=XCPL+PARFCT*PARSGN(IS1)*
     &              GSYMTP(J1,-K1,J2,K2,MV,LM,KSUM)
 3201     X(ISTART-IX)=XCPL
 3200 CONTINUE

      IF (IPRINT.GE.4) WRITE(6,693) MV,IXMX,NAVAIL
  693 FORMAT(/'  CPL25 (FEB 93).   3-J VALUES STORED FOR MVAL =',I3
     1       /'                    REQUIRED AND AVAILABLE STORAGE =',
     2       2I9)
C  RESET IFIRST TO REFLECT HIGHEST M-VALUE STORED.
      IFIRST=MV
C  SEE IF CURRENT MVALUE REQUIRES MORE STORED M-VALUES.
      MV=MV+1
      IF (MV.LE.MVABS) GOTO 3600
C
 3900 IF (MVABS.GT.IFIRST) GOTO 3800
C  MVABS.LE.IFIRST.  COEFFS STORED.  FILL VL() FROM XCPL
      IXM=MVABS*IXMX
      NZERO=0
      DO 3513 LL=1,MXLAM
        NNZ=0
        I=LL
        LM=LAM(LL)
        DO 3503 ICOL=1,N
          I1=JSINDX(ICOL)
          J1=JSTATE(I1,1)
        DO 3503 IROW=1,ICOL
          I2=JSINDX(IROW)
          J2=JSTATE(I2,1)
          IF (I1.GT.I2) THEN
            IX12=I1*(I1-1)/2+I2
          ELSE
            IX12=I2*(I2-1)/2+I1
          ENDIF
          IX=IXM+(LL-1)*NL12+IX12
          VL(I)=X(ISTART-IX)
C  WE HAVE STORED COUPLING FOR POSITIVE MVALUES; CORRECT IF NECESSARY
C  FOR PARITY OF THRJ(J1,LM,J2,-MVAL,0,MVAL)
          IF (MVALUE.LT.0 .AND. LODD(J1+J2+LM)) VL(I)=-VL(I)
          IF (VL(I).NE.Z0) NNZ=NNZ+1
 3503     I=I+MXLAM
        IF (NNZ.LE.0) THEN
          NZERO=NZERO+1
          IF (IPRINT.GE.14) WRITE(6,612) MVALUE,LL
        ENDIF
  612   FORMAT('  * * * NOTE.  FOR MVALUE =',I4,',  ALL COUPLING '
     1         'COEFFICIENTS ARE 0.0 FOR EXPANSION TERM',I4)
 3513 CONTINUE

      IF (NZERO.GT.0 .AND. IPRINT.GE.10 .AND. IPRINT.LT.14)
     1  WRITE(6,620) MVALUE,NZERO
  620 FORMAT('  * * * NOTE.  FOR MVALUE =',I4,',  ALL COUPLING ',
     1       'COEFFICIENTS ARE 0.0 FOR',I5,' POTENTIAL EXPANSION TERMS')

      RETURN
C
C  MV.GT.IFIRST ==> VALUES NOT STORED.  CALCULATE THEM
 3800 NZERO=0
      DO 5555 LL=1,MXLAM
        NNZ=0
        I=LL
        LM=LAM(2*LL-1)
        MU=LAM(2*LL)
        DO 5565 ICOL=1,N
          J1 =JSTATE(JSINDX(ICOL),1)
          K1 =JSTATE(JSINDX(ICOL),2)
          IS1=JSTATE(JSINDX(ICOL),3)
        DO 5565 IROW=1,ICOL
          J2 =JSTATE(JSINDX(IROW),1)
          K2 =JSTATE(JSINDX(IROW),2)
          IS2=JSTATE(JSINDX(IROW),3)
          VL(I)=Z0
          PARFCT=(ONE+PARSGN(J1+J2+IS1+IS2+LM+MU))*HALF
          IF (PARFCT.LE.1.D-5) GOTO 5565
          IF (K1.EQ.0) PARFCT=PARFCT*SQRTHF
          IF (K2.EQ.0) PARFCT=PARFCT*SQRTHF
          KDIF=K2-K1
          IF (ABS(KDIF).NE.MU) GOTO 5575
          WPAR=ONE
          IF (KDIF.LT.0 .AND. LODD(MU)) WPAR=-WPAR
C  CONTRIBUTION FROM (J1, K1, MVALUE / Y(LM,MU) / J2, K2, MVALUE)
          VL(I)=VL(I) + PARFCT*WPAR*GSYMTP(J1,K1,J2,K2,MVALUE,LM,KDIF)
 5575     KSUM=K2+K1
          IF (ABS(KSUM).NE.MU) GOTO 5585
C  CONTRIBUTION FROM (J1,-K1, MVALUE / Y(LM,MU) / J2, K2, MVALUE)
          VL(I)=VL(I)+PARFCT*PARSGN(IS1)*
     &                GSYMTP(J1,-K1,J2,K2,MVALUE,LM,KSUM)
 5585     IF (ABS(VL(I)).GE.1.D-5) NNZ=NNZ+1
 5565     I=I+MXLAM
        IF (NNZ.LE.0) THEN
          NZERO=NZERO+1
          IF (IPRINT.GE.14) WRITE(6,612) MVALUE,LL
        ENDIF
 5555 CONTINUE

      IF (NZERO.GT.0 .AND. IPRINT.GE.10 .AND. IPRINT.LT.14)
     1  WRITE(6,620) MVALUE,NZERO

      RETURN
      END
