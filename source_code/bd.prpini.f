      SUBROUTINE PRPINI(RMIN,RMAX,DR,RVFAC,IRMSET,IRXSET,
     1                  EPS,EPL,DRSEG,EPSEG,IPRSEG,STPSEG,TOLSEG,
     2                  POWSEG,DIRNAM,POWRX,TOLHI)
C  Copyright (C) 2019 J. M. Hutson & C. R. Le Sueur
C  Distributed under the GNU General Public License, version 3

C  CR Le Sueur Dec 2018
      IMPLICIT NONE

C  THIS ROUTINE SETS UP THE NUMBER OF SEGMENTS FOR A BOUND OR FIELD
C  CALCULATION AND PUTS INITIAL (OR INDICATIVE) VALUES INTO IPROPS, IPROPL,
C  DRS, DRL, STEPS, STEPL, TOLHIS, TOLHIL, AS WELL AS RMIN, RMAX, RMID,
C  RMATCH

      INTEGER, PARAMETER              :: MXSEG=3

      DOUBLE PRECISION, INTENT(IN)    :: RMIN,RMAX,DR,RVFAC,EPS,EPL,
     1                                   POWRX,TOLHI
      INTEGER,          INTENT(IN)    :: IRMSET,IRXSET
      DOUBLE PRECISION, INTENT(OUT)   :: DRSEG(MXSEG),EPSEG(MXSEG),
     1                                   STPSEG(MXSEG),TOLSEG(MXSEG),
     2                                   POWSEG(MXSEG)
      INTEGER,          INTENT(OUT)   :: IPRSEG(MXSEG)
      CHARACTER(3),     INTENT(OUT)   :: DIRNAM(MXSEG)
C
C  COMMON BLOCK FOR CONTROL OF PROPAGATION SEGMENTS
      COMMON /RADIAL/ RMNINT,RMXINT,RMID,RMATCH,DRS,DRL,STEPS,STEPL,
     1                POWRS,POWRL,TOLHIS,TOLHIL,CAYS,CAYL,UNSET,
     2                IPROPS,IPROPL,NSEG
      DOUBLE PRECISION RMNINT,RMXINT,RMID,RMATCH,
     1                 STEPS,STEPL,TOLHIS,TOLHIL,DRS,DRL,CAYS,CAYL,
     1                 POWRS,POWRL,UNSET
      INTEGER          IPROPS,IPROPL,NSEG

C  SET UP NUMBER OF SEGMENTS
      NSEG=2
      IF (RMATCH.EQ.UNSET .AND. RMID.EQ.UNSET) THEN
        STOP
      ELSEIF (RMATCH.EQ.UNSET) THEN
        RMATCH=RMID
      ELSEIF (RMID.EQ.UNSET .OR. ABS(RMID/RMATCH-1.D0).LT.1.D-8) THEN
        RMID=RMATCH
      ELSE
        NSEG=3
      ENDIF

C  CHECK THAT PROPAGATOR FLAGS HAVE BEEN SET AS REQUIRED
      IF (IPROPS.EQ.0) IPROPS=6

      IF (IPROPL.EQ.0) IPROPL=IPROPS

      IF (IPROPS.LT.5 .OR. IPROPS.GT.9) THEN
        WRITE(6,101) IPROPS
  101   FORMAT(/'  *** ERROR: IPROPS = ',I2,' IS NOT A KNOWN VALUE')
        STOP
      ENDIF
      IF (IPROPL.LT.5 .OR. IPROPL.GT.9) THEN
        WRITE(6,102) IPROPL
  102   FORMAT(/'  *** WARNING: IPROPL = ',I2,' IS NOT A KNOWN VALUE'/
     1          '               SETTING IPROPL = IPROPS')
        IPROPL=IPROPS
      ENDIF

C  SET UP TOLHI
      IF (TOLHIS.EQ.UNSET) TOLHIS=TOLHI
      IF (TOLHIL.EQ.UNSET) TOLHIL=TOLHIS

C  ONLY VIVS AND AIRY CAN MAKE USE OF TOLHI AT THE MOMENT
C  (AND WKB USES IT FOR A DIFFERENT PURPOSE)
      IF (IPROPS.EQ.9) THEN
        IF (TOLHIS.LT.0.D0 .OR. TOLHIS.GE.1.D0) THEN
          WRITE(6,*) ' *** THIS VALUE FOR TOLHIS IS INVALID: ',TOLHIS
          STOP
        ENDIF
      ENDIF
      IF (IPROPS.NE.4 .AND. IPROPS.NE.9 .AND. IPROPS.NE.-1) TOLHIS=0.D0

      IF (IPROPL.EQ.9) THEN
        IF (TOLHIL.LT.0.D0 .OR. TOLHIL.GE.1.D0) THEN
          WRITE(6,*) ' *** THIS VALUE FOR TOLHIL IS INVALID: ',TOLHIL
          STOP
        ENDIF
      ENDIF
      IF (IPROPL.NE.4 .AND. IPROPL.NE.9) TOLHIL=0.D0

C  SET UP POWR
      IF (IPROPL.EQ.9) THEN
        IF (TOLHIL.EQ.0.D0) THEN
          IF (POWRL.EQ.UNSET) POWRL=4.D0/3.D0
        ELSE
          IF (POWRL.EQ.UNSET) POWRL=POWRX
        ENDIF
      ELSE
        POWRL=0.D0
      ENDIF

      IF (IPROPS.EQ.9 .AND. TOLHIS.EQ.0.D0) THEN
        IF (POWRS.EQ.UNSET) POWRS=0.D0
      ELSE
        POWRS=0.D0
      ENDIF

C  SET UP STEP/DR
      IF (STEPS.LE.0.D0 .AND. DRS.EQ.UNSET) THEN
        DRS=DR
        STEPS=-10.D0
      ELSEIF (STEPS.LE.0.D0) THEN
        STEPS=-10.D0
      ELSEIF (STEPS.GT.0.D0 .AND. DRS.NE.UNSET) THEN
        STEPS=-10.D0
      ENDIF

      IF (STEPL.EQ.UNSET .AND. DRL.EQ.UNSET) THEN
        STEPL=STEPS
C  LEAVE DRL UNSET SO THAT IT INHERITS SHORT-RANGE VALUE
      ELSEIF (STEPL.NE.UNSET .AND. DRL.NE.UNSET) THEN
        STEPL=-10.D0
      ENDIF

C  SET UP VALUES FOR PRINTING
      DIRNAM(1)='OUT'
      IPRSEG(1)=IPROPS
      DRSEG(1)=DRS
      EPSEG(1)=EPS
      POWSEG(1)=POWRS
      STPSEG(1)=STEPS
      TOLSEG(1)=TOLHIS

      DIRNAM(2)='IN'
      IPRSEG(2)=IPROPL
      DRSEG(2)=DRL
      EPSEG(2)=EPL
      POWSEG(2)=POWRL
      STPSEG(2)=STEPL
      TOLSEG(2)=TOLHIL

      IF (NSEG.EQ.3) THEN
        IF (RMID.LT.RMATCH) THEN
          DIRNAM(2)='OUT'
          IPRSEG(2)=IPROPS
          DRSEG(2)=UNSET
          EPSEG(2)=EPS
          POWSEG(2)=POWRS
          STPSEG(2)=STEPS
          TOLSEG(2)=TOLHIS

          DIRNAM(3)='IN'
          IPRSEG(3)=IPROPL
          DRSEG(3)=DRL
          EPSEG(3)=EPL
          POWSEG(3)=POWRL
          STPSEG(3)=STEPL
          TOLSEG(3)=TOLHIL
        ELSE
C         DIRNAM(2)='IN'
C         IPRSEG(2)=IPROPL
C         DRSEG(2)=DRL
C         EPSEG(2)=EPL
C         POWSEG(2)=POWRL
C         STPSEG(2)=STEPL
C         TOLSEG(2)=TOLHIL

          DIRNAM(3)='IN'
          IPRSEG(3)=IPROPS
          DRSEG(3)=UNSET
          EPSEG(3)=EPS
          POWSEG(3)=POWRS
          STPSEG(3)=STEPS
          TOLSEG(3)=TOLHIS
        ENDIF
      ENDIF

      RETURN
      END
