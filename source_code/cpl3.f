      SUBROUTINE CPL3(N,MXLAM,LAM,NSTATE,JSTATE,JSINDX,L,JTOT,IEX,
     1                VL,IPRINT,LFIRST)
C  Copyright (C) 2019 J. M. Hutson & C. R. Le Sueur
C  Distributed under the GNU General Public License, version 3
C
C  COUPLING MATRIX ELEMENTS FOR LINEAR ROTOR-LINEAR ROTOR (ITYPE=3)
C  SEE (FOR EXAMPLE) EQN 12 OF HEIL, GREEN AND KOURI JCP (1978) 68 2562
C
C  JAN 93 CODE TO SAVE JTOT-INDEPENDENT PARTS IN DEDICATED STORAGE
C         WORKS W/ NEW DYNAMIC STORAGE CAPABILITIES.
C
C  LOWER DIAGONAL OF XCPL IS STORED FOR MAIN COUPLING ELEMENTS
C  BUT EXCHANGE PART REQUIRES FULL MATRIX (NSTATE,NSTATE) STORAGE.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE IXEX,ISTART,IFIRST
      LOGICAL LODD,LFIRST
      INTEGER IPRINT
      DIMENSION LAM(1),JSTATE(NSTATE,3),JSINDX(1),L(1)
      DIMENSION VL(1)
C
C  DYNAMIC STORAGE COMMON BLOCK ...
      COMMON /MEMORY/ MX,IXNEXT,NIPR,IDUMMY,X(1)
C
C  CONST IS FACTOR (4.*PI)**(-3/2)
      DATA CONST/2.24483902656458321D-2/, SQRTHF/.70710678118654753D0/
C  STATEMENT FUNCTIONS
      LODD(I)=I-2*(I/2).NE.0
      Z(I)=DBLE(I+I+1)
C
C  INITIALIZE IFIRST IF LFIRST IS SET TRUE
      IF (LFIRST) THEN
        IFIRST=0
        LFIRST=.FALSE.
      ENDIF
C
      NLSQ=NSTATE*NSTATE
      NL12=NSTATE*(NSTATE+1)/2
      IF (IFIRST.GT.0) GOTO 8030
C
C  FIRST TIME THROUGH EVALUATE JTOT-INDEPENDENT PARTS OF VL()
      IXMX=NL12*MXLAM
      IXEX=IXMX
      IF (IEX.GT.0) IXMX=IXEX+NLSQ*MXLAM
      NAVAIL=MX-IXNEXT+1
      IF (IXMX.LE.NAVAIL) GOTO 3010

      WRITE(6,699) NSTATE,MXLAM,IEX,IXMX,NAVAIL
  699 FORMAT(/'  ***** CPL3 (JAN 93) NSTATE,MXLAM,IEX =',3I4
     1       /'        REQUIRED STORAGE MORE THAN AVAILABLE',2I9)
      STOP

C  UPDATE STORAGE POINTERS.  NB WE STORE XPCL BACKWARDS AT TOP OF X()
 3010 ISTART=MX+1
      MX=MX-IXMX
      NZERO=0
      DO 3100 LL=1,MXLAM
        LM1=LAM(3*LL-2)
        LM2=LAM(3*LL-1)
        LM=LAM(3*LL)
        IL12=0
      DO 3100 I1=1,NSTATE
        J1 =JSTATE(I1,1)
        J2 =JSTATE(I1,2)
        J12=JSTATE(I1,3)
      DO 3100 I2=1,I1
        IL12=IL12+1
        J1P =JSTATE(I2,1)
        J2P =JSTATE(I2,2)
        J12P=JSTATE(I2,3)
C  INDEX FOR XCPL(IL12,LL,1), I.E., SYMMETRIZED
        IX=(LL-1)*NL12+IL12
        FACTOR=CONST*Z(LM)*SQRT((Z(LM1)*Z(LM2))*(Z(J1)*Z(J2)*Z(J12))*
     1                          (Z(J1P)*Z(J2P)*Z(J12P)))
        JSUM=J1+J2+J12P
        IF (LODD(JSUM)) FACTOR=-FACTOR
        X(ISTART-IX)=THREEJ(LM1,J1P,J1)*THREEJ(LM2,J2P,J2)*
     1               XNINEJ(J12P,J2P,J1P,J12,J2,J1,LM,LM2,LM1)*FACTOR
        IF (IEX.EQ.0) GOTO 3100
C  INDEX FOR XCPL(I2,I1,LL,2), I.E., UNSYMMETRIZED
        IE=(LL-1)*NLSQ+(I1-1)*NSTATE+I2
        IF (J1.EQ.J2) THEN
          X(ISTART-IXEX-IE)=X(ISTART-IX)
        ELSE
          X(ISTART-IXEX-IE)=THREEJ(LM1,J1P,J2)*THREEJ(LM2,J2P,J1)*
     1                 XNINEJ(J12P,J2P,J1P,J12,J1,J2,LM,LM2,LM1)*FACTOR
        ENDIF
        IF (I1.EQ.I2) GOTO 3100
C  ELSE WE NEED TO STORE I1<->I2 VALUES
        IE=(LL-1)*NLSQ+(I2-1)*NSTATE+I1
        IF (J1P.EQ.J2P) THEN
          X(ISTART-IXEX-IE)=X(ISTART-IX)
        ELSE
          X(ISTART-IXEX-IE)=THREEJ(LM1,J2P,J1)*THREEJ(LM2,J1P,J2)*
     1                 XNINEJ(J12P,J1P,J2P,J12,J2,J1,LM,LM2,LM1)*FACTOR
        ENDIF
 3100 CONTINUE

      IF (IPRINT.GE.4) WRITE(6,697) NSTATE,MXLAM,IEX,IXMX,NAVAIL
  697 FORMAT(/'  CPL3 (JAN 93).  ',
     1        'JTOT-INDEPENDENT PARTS OF COUPLING MATRIX STORED.  ',
     2        'NSTATE, MXLAM, IEX =',3I4/
     3        17X,'REQUIRED AND AVAILABLE STORAGE =',2I9)
C  RESET IFIRST
      IFIRST=1
C
C  EVALUATE VL() USING STORED JTOT-INDEPENDENT PARTS
 8030 NZERO=0
      DO 1513 LL=1,MXLAM
        NNZ=0
        I=LL
        LM=LAM(3*LL)
        DO 1503 ICOL=1,N
          LV=L(ICOL)
          I1=JSINDX(ICOL)
          J1 =JSTATE(I1,1)
          J2 =JSTATE(I1,2)
          J12=JSTATE(I1,3)
        DO 1503 IROW=1,ICOL
          LVP=L(IROW)
          I2=JSINDX(IROW)
          J1P =JSTATE(I2,1)
          J2P =JSTATE(I2,2)
          J12P=JSTATE(I2,3)
C  GET JTOT-DEPENDENT PARTS
          XFACT=SQRT(Z(LV)*Z(LVP))*THREEJ(LM,LVP,LV)
     1                *SIXJ(LVP,LV,J12P,J12,LM,JTOT)
          IF (LODD(JTOT)) XFACT=-XFACT
C  GET JTOT-INDEPENDENT PARTS FROM XCPL.
C  BELOW IS FOR SYMMETRIZED MAIN PART
          IF (I1.GE.I2) THEN
            IL12=I1*(I1-1)/2+I2
          ELSE
            IL12=I2*(I2-1)/2+I1
          ENDIF
          IX=(LL-1)*NL12+IL12
          VL(I)=XFACT*X(ISTART-IX)
          IF (IEX.EQ.0) GOTO 1593

C ***
C *** N.B. CODE BELOW ASSUMES THAT SYMMETRICALLY RELATED POTENTIAL TERMS
C ***   I.E. A(LM1,LM2,LM) AND A(LM2,LM1,LM) ARE BOTH PRESENT IN POTL.
C ***
C  BELOW IS FOR XCPL(I2,I1,LL,IEX) STORAGE ORDER
          IE=(LL-1)*NLSQ+(I1-1)*NSTATE+I2
          IF (J1.NE.J2) GOTO 1594

          T=VL(I)
          GOTO 1595

 1594     T=XFACT*X(ISTART-IXEX-IE)
 1595     JSUM=IEX+J1+J2-J12+LV
          IF (LODD(JSUM)) T=-T
          VL(I)=VL(I)+T
          IF (J1.EQ.J2)   VL(I)=VL(I)*SQRTHF
          IF (J1P.EQ.J2P) VL(I)=VL(I)*SQRTHF
 1593     IF (VL(I).NE.0.D0) NNZ=NNZ+1
 1503     I=I+MXLAM
        IF (NNZ.LE.0) THEN
          NZERO=NZERO+1
          IF (IPRINT.GE.14) WRITE(6,612) JTOT, LL
        ENDIF
  612   FORMAT('  * * * NOTE.  FOR JTOT =',I4,',  ALL COUPLING ',
     1         'COEFFICIENTS ARE 0.0 FOR SYMMETRY',I4)
 1513 CONTINUE

      IF (NZERO.GT.0 .AND. IPRINT.GE.10 .AND. IPRINT.LT.14)
     1  WRITE(6,620) JTOT,NZERO
  620 FORMAT('  * * * NOTE.  FOR JTOT =',I4,',  ALL COUPLING ',
     1       'COEFFICIENTS ARE 0.0 FOR',I5,' POTENTIAL EXPANSION TERMS')

      RETURN
      END
