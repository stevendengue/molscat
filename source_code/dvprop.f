      SUBROUTINE DVPROP(N,NSQ,MXLAM,NPOTL,
     1                  SR,A,VL,IV,EINT,CENT,L,NB,P,
     2                  Y,YP,F,DIAG,
     3                  RSTART,RSTOP,NSTEP,HH,NSTAB,
     4                  ERED,RMLMDA,IPRINT)
C  Copyright (C) 2019 J. M. Hutson & C. R. Le Sueur
C  Distributed under the GNU General Public License, version 3
C
C  DE VOGELAERE PROPAGATION (DOUBLE PRECISION)
C  THIS IS A CUT-DOWN VERSION OF PAUL MCGUIRE'S PROGRAM
C  INCLUDING STABILIZATION TO SUPPRESS CLOSED-CHANNEL GROWTH
C  THIS VERSION (JMH DEC 2018)
C  ACCEPTS AND RETURNS A LOG-DERIVATIVE MATRIX IN SR
C  BUT DOES NOT DO ITS OWN MATCHING TO SCATTERING BOUNDARY CONDITIONS
C
C  NSTAB  IS NUMBER OF STEPS TAKEN BEFORE STABILIZATION.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER L(N),NB(N),IV(1)
      INTEGER IPRINT
      DIMENSION Y(NSQ,4),YP(NSQ,2),F(NSQ,4),A(NSQ),
     1          DIAG(N),P(MXLAM),SR(NSQ),VL(2),EINT(N),CENT(N),
     2          R(4)
C
C  INDICES ON Y, YP, F ARE (ITH SOLN. COMP, NTH SOLN, KTH R VALUE)
C
C  COMMON BLOCK FOR CONTROL OF USE OF PROPAGATION SCRATCH FILE
      LOGICAL IREAD,IWRITE
      COMMON /PRPSCR/ ESHIFT,ISCRU,IREAD,IWRITE
      IF (IREAD .AND. IPRINT.GE.5) WRITE(6,668)
  668 FORMAT(/'  DE VOGELAERE PROPAGATION WITH STORED POTENTIAL',
     1        ' MATRICES')
C
C  ZERO STORAGE . . .
C
      NP1=N+1
      DO 700 I=1,4
      DO 700 IJ=1,NSQ
        Y(IJ,I)=0.D0
  700   F(IJ,I)=0.D0
C
C  SUBROUTINE DVSTRT REPLACED BY INITIALISATION FROM YINIT IN NOV 2018
C  SR CONTAINS INITIAL LOG-DERIVATIVE MATRIX:
C  COPY IT TO WAVEFUNCTION DERIVATIVE IN YP(IJ,1)
C
      DO 800 IJ=1,NSQ
        YP(IJ,1)=SR(IJ)
        YP(IJ,2)=0.D0
  800   SR(IJ)=0.D0
C
C  AND SET WAVEFUNCTION IN Y(IJ,2) TO UNIT MATRIX:
C  OFF-DIAGONAL ELEMENTS ALREADY ZERO
C
      IJ=1
      DO 900 I=1,N
        Y(IJ,2)=1.D0
        IJ=IJ+NP1
  900 CONTINUE
C
C  ********** START PROPAGATION **********
      NSTAB=MAX(NSTAB,1)
      H2=HH/2.D0
      R(2)=RSTART
C  GET F(,,2) FROM Y(,,2)
      R4=R(2)
C
      IF (IREAD) THEN
        READ(ISCRU) A
        DO IJ=1,NSQ,NP1
          A(IJ)=A(IJ)-ESHIFT
        ENDDO
      ELSE
        CALL WAVMAT(A,N,R4,P,VL,IV,ERED,EINT,CENT,RMLMDA,DIAG,
     1            MXLAM,NPOTL,IPRINT)
        IF (IWRITE) WRITE(ISCRU) A
      ENDIF
C
      CALL DSYMM('L','L',N,N,1.D0,A,N,Y(1,2),N,0.D0,F(1,2),N)
      CALL DAXPY(NSQ,1.D0,F(1,2),1,Y(1,2),1)
      CALL DAXPY(NSQ,-H2,YP(1,1),1,Y(1,1),1)
      CALL DAXPY(NSQ,0.5D0*H2*H2,F(1,2),1,Y(1,1),1)
C  GET F(,,1) FROM THIS Y(,,1).  NEEDS POTENTIAL AT R(1)
      R(1)=R(2)-H2
      R4=R(1)
C
      IF (IREAD) THEN
        READ(ISCRU) A
        DO IJ=1,NSQ,NP1
          A(IJ)=A(IJ)-ESHIFT
        ENDDO
      ELSE
        CALL WAVMAT(A,N,R4,P,VL,IV,ERED,EINT,CENT,RMLMDA,DIAG,
     1            MXLAM,NPOTL,IPRINT)
        IF (IWRITE) WRITE(ISCRU) A
      ENDIF
C
      CALL DSYMM('L','L',N,N,1.D0,A,N,Y(1,1),N,0.D0,F(1,1),N)
C
C  **********      MAIN BODY OF ITERATION  **********
C  PROPAGATE FROM (-1/2) AND (0) TO (1/2) AND (1).
      DO 3000 ISTEP=1,NSTEP
      CALL DAXPY(NSQ,1.D0,Y(1,2),1,Y(1,3),1)
      CALL DAXPY(NSQ,H2,YP(1,1),1,Y(1,3),1)
      CALL DAXPY(NSQ,H2*H2*4.D0/6.D0,F(1,2),1,Y(1,3),1)
      CALL DAXPY(NSQ,-H2*H2/6.D0,F(1,1),1,Y(1,3),1)
      R(3)=R(2)+H2
      R4=R(3)
C
      IF (IREAD) THEN
        READ(ISCRU) A
        DO IJ=1,NSQ,NP1
          A(IJ)=A(IJ)-ESHIFT
        ENDDO
      ELSE
        CALL WAVMAT(A,N,R4,P,VL,IV,ERED,EINT,CENT,RMLMDA,DIAG,
     1            MXLAM,NPOTL,IPRINT)
        IF (IWRITE) WRITE(ISCRU) A
      ENDIF
C
      CALL DSYMM('L','L',N,N,1.D0,A,N,Y(1,3),N,0.D0,F(1,3),N)
      CALL DAXPY(NSQ,1.D0,Y(1,2),1,Y(1,4),1)
      CALL DAXPY(NSQ,HH,YP(1,1),1,Y(1,4),1)
      CALL DAXPY(NSQ,HH*HH/6.D0,F(1,2),1,Y(1,4),1)
      CALL DAXPY(NSQ,HH*HH/3.D0,F(1,3),1,Y(1,4),1)
      R(4)=R(3)+H2
      R4=R(4)
C
      IF (IREAD) THEN
        READ(ISCRU) A
        DO IJ=1,NSQ,NP1
          A(IJ)=A(IJ)-ESHIFT
        ENDDO
      ELSE
        CALL WAVMAT(A,N,R4,P,VL,IV,ERED,EINT,CENT,RMLMDA,DIAG,
     1            MXLAM,NPOTL,IPRINT)
        IF (IWRITE) WRITE(ISCRU) A
      ENDIF
C
      CALL DSYMM('L','L',N,N,1.D0,A,N,Y(1,4),N,0.D0,F(1,4),N)
      CALL DAXPY(NSQ,1.D0,YP(1,1),1,YP(1,2),1)
      CALL DAXPY(NSQ,HH/6.D0,F(1,2),1,YP(1,2),1)
      CALL DAXPY(NSQ,HH/6.D0,F(1,4),1,YP(1,2),1)
      CALL DAXPY(NSQ,HH*4.D0/6.D0,F(1,3),1,YP(1,2),1)
C
C  **********      THIS ENDS DE VOGELAERE CYCLE    **********
C
      IF (ISTEP.EQ.NSTEP) GOTO 3000
C
C  ********** STABILIZATION EVERY NSTAB STEPS     **********
      IF (ISTEP-NSTAB*(ISTEP/NSTAB).EQ.0) THEN
        IF (IPRINT.GE.13) WRITE(6,673) R(4)
  673   FORMAT('  STABILIZATION DONE AT R =',E12.4)
C  FIRST 2 COLS OF Y AND F AND ALSO A USED AS SCRATCH IN STABIL.
        CALL STABIL(N,NB,Y(1,4),YP(1,2),F(1,3),F(1,4),
     &              A,Y(1,1),Y(1,2),F(1,1),F(1,2))
      ENDIF
C
C  **********   RE-INITIALIZE FOR NEXT CYCLE OF PROPAGATION *********
      R(1)=R(3)
      R(2)=R(4)
      CALL DCOPY(NSQ,YP(1,2),1,YP(1,1),1)
      CALL DCOPY(NSQ,Y(1,3),1,Y(1,1),1)
      CALL DCOPY(NSQ,Y(1,4),1,Y(1,2),1)
      CALL DCOPY(NSQ,F(1,3),1,F(1,1),1)
      CALL DCOPY(NSQ,F(1,4),1,F(1,2),1)
      DO 5200 IJ=1,NSQ
        YP(IJ,2)=0.D0
        Y(IJ,3)=0.D0
 5200   Y(IJ,4)=0.D0
C
 3000 CONTINUE
C
C  ********** ASYMPTOTIC REGION **********
C
C  Y(,4)  CONTAINS WAVEFUNCTION AT R4
C  YP(,2) CONTAINS WAVEFUNCTION DERIVATIVE AT R4
C  FORM LOG-DERIVATIVE Y IN SR
C    Y = PSI' PSI^-1 SO Y PSI = PSI' SO PSI^T Y^T = PSI'^T
C  TRANSPOSE PSI AND PSI'
      CALL DCOPY(NSQ,YP(1,2),1,SR,1)
      CALL TRNSP(SR,N)
      CALL TRNSP(Y(1,4),N)
      CALL DGESV(N,N,Y(1,4),N,Y,SR,N,IER)
      IF (IER.NE.0) THEN
        WRITE(6,689) IER
  689   FORMAT(' * * * ERROR. IER =',I2,' FROM DGESV IN DVPROP')
        STOP
      ENDIF
C
      IF (IWRITE) WRITE(ISCRU) IWRITE
      RETURN
      END
