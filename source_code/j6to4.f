      SUBROUTINE J6TO4(NSTATE,JSTATE,ATAU,JLNW,NAVAIL,ELEVNW,JLEVNW)
C  Copyright (C) 2019 J. M. Hutson & C. R. Le Sueur
C  Distributed under the GNU General Public License, version 3
      USE sizes, ONLY: MXELVL, MXJLVL
      USE basis_data
C
C  THIS SUBROUTINE EXPANDS ITYPE=6 (ATOM-ASYMMETRIC TOP) FORMAT BASIS TO
C  ITYPE=4 (LINEAR ROTOR-ASYMMETRIC TOP) BASIS
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION JSTATE(1),ATAU(1),JLNW(NAVAIL),
     1          ELEVNW(MXELVL),JLEVNW(MXJLVL)
C
C  WE MUST BE ABLE TO GET J2 FROM J2MIN,J2MAX,J2STEP
C  AND CALCULATE LINEAR ROTOR ENERGY FROM BE(2)
      WRITE(6,641) J2MIN,J2MAX,J2STEP
  641 FORMAT(/'  COMBINING ASYMMETRIC ROTOR AND LINEAR ROTOR.'//
     1        '  LINEAR ROTOR QUANTUM NUMBERS FROM J2MIN =',I3,
     2        ', J2MAX =',I3,', J2STEP =',I2)
      J2MIN=MAX(J2MIN,0)
      J2MAX=MAX(J2MAX,J2MIN)
      J2STEP=MAX(J2STEP,1)
      IF (BE(2).LE.0.D0) THEN
        IF (J2MAX.EQ.0) THEN
C  SET ARBITRARY BE(2) SINCE ENERGY WILL ALWAYS BE ZERO
          BE(2)=1.D0
        ELSE
          WRITE(6,*) ' *** SET4/J6TO4.  CANNOT OBTAIN LINEAR ROTOR',
     1               ' ENERGY FROM BE(2)'
          STOP
        ENDIF
      ENDIF
      WRITE(6,644) BE(2)
  644 FORMAT(/'  LINEAR ROTOR ENERGY LEVELS OBTAINED FROM B(E) =',F12.6)
      IF (ALPHAE(2).NE.0.D0) WRITE(6,645) ALPHAE(2)
  645 FORMAT(28X,'CORRECTED FOR ALPHA(E) = ',F12.8)
      IF (DE(2).NE.0.D0) WRITE(6,646) DE(2)
  646 FORMAT(28X,'CORRECTED FOR D(E) = ',F12.8)
      IF (EMAX.GT.0.D0) WRITE(6,648) EMAX
  648 FORMAT(/'  ENERGY CAP ON BASIS FUNCTIONS IS EMAX =',F14.4)
C
C  NLNW COUNTS NEW 'NLEVEL'; INEW COUNTS NEW 'NSTATE'
      MINA=9999999
      MAXA=0
      INEW=0
      NLNW=0
      ITOP=0
      NKVAL=0
      MXNEW=NAVAIL/8
C  LOOP OVER ITYPE=6 FORMAT IN JSTATE(NSTATE,6)
      JMIN=9999999
      JMAX=0
      DO 1000 IOLD=1,NSTATE
        J1  =JSTATE(         IOLD)
        ITAU=JSTATE(  NSTATE+IOLD)
        IPAR=JSTATE(2*NSTATE+IOLD)
        ISTA=JSTATE(3*NSTATE+IOLD)
        NK  =JSTATE(4*NSTATE+IOLD)
        MINA=MIN(MINA,ISTA+1)
        MAXA=MAX(MAXA,ISTA+NK)
        NKVAL=NKVAL+NK
        INDX=JSTATE(5*NSTATE+IOLD)
        IF (INDX.NE.IOLD) WRITE(6,690) INDX,IOLD
  690   FORMAT(' *** J6TO4. PROBABLY ERROR. INDX.NE.I',2I6)
C  EXPAND ON J2
        DO 2000 J2=J2MIN,J2MAX,J2STEP
          FJ=DBLE(J2)
          FJ=FJ*(FJ+1.D0)
          E2=(BE(2)-ALPHAE(2)*0.5D0)*FJ - DE(2)*FJ*FJ
          EN=ELEVEL(INDX) + E2
          IF (EMAX.GT.0.D0 .AND. EN.GT.EMAX) GOTO 2000
          NLNW=NLNW+1
          IF (NLNW.GT.MXELVL) THEN
            WRITE(6,*) ' *** J6TO4. NUMBER LEVELS EXCEEDS MXELVL',MXELVL
            STOP
          ENDIF
          ELEVNW(NLNW)=EN
          JLEVNW(3*NLNW-2)=J1
          JLEVNW(3*NLNW-1)=ITAU
          JLEVNW(3*NLNW)=J2
          IF (JLEVEL(2*INDX-1).NE.J1 .OR. JLEVEL(2*INDX).NE.ITAU) THEN
            WRITE(6,*) ' *** J6TO4. INCOMPATIBLE JLEVEL(), JSTATE() FOR'
            WRITE(6,*) '            LEVEL',INDX
          ENDIF
C  EXPAND J1+J2 TO J12; NEED TO SET JMIN,JMAX TO MIN/MAX OF J12
C  FOR USE IN PICKING ORBITAL MOMENTA FOR A GIVEN JTOT
          DO 3000 J12=ABS(J1-J2),J1+J2
            INEW=INEW+1
            IF (INEW.GT.MXNEW) THEN
              WRITE(6,*) ' *** J6TO4.  SCRATCH SPACE EXCEEDED FOR ',
     1                   'BASIS NO.',INEW
              STOP
            ENDIF
            JLNW(ITOP+1)=J12
            JLNW(ITOP+2)=J2
            JLNW(ITOP+3)=J1
            JLNW(ITOP+4)=ITAU
            JLNW(ITOP+5)=IPAR
            JLNW(ITOP+6)=ISTA
            JLNW(ITOP+7)=NK
            JLNW(ITOP+8)=NLNW
            JMIN=MIN(JMIN,J12)
            JMAX=MAX(JMAX,J12)
 3000       ITOP=ITOP+8
 2000   CONTINUE
 1000 CONTINUE
C
C  COPY JLEVNW,ELEVNW BACK TO JLEVEL,ELEVEL
      DO 4000 I=1,NLNW
        ELEVEL(I)=ELEVNW(I)
        JLEVEL(3*I-2)=JLEVNW(3*I-2)
        JLEVEL(3*I-1)=JLEVNW(3*I-1)
 4000   JLEVEL(3*I)=JLEVNW(3*I)

C  SHIFT ATAU UP TO REFLECT START AT 6*NSTATE+1 TO 8*INEW+1
      IF (NKVAL.NE.MAXA-MINA+1)
     1  WRITE(6,*) ' POSSIBLE ERROR. MINA,MAXA,NKVAL',MINA,MAXA,NKVAL
      MOVE=8*INEW-6*NSTATE
      DO 4500 I=1,NKVAL
 4500   ATAU(8*INEW+NKVAL+1-I)=ATAU(6*NSTATE+NKVAL+1-I)

C  SHIFT ISTA (JLNW(6,I)) TO REFLECT MOVED ATAU
      IX=6
      DO 4600 I=1,INEW
        JLNW(IX)=JLNW(IX)+MOVE
 4600   IX=IX+8

C  RESET NSTATE; COPY JLNW TO JSTATE, CORRECTING ORDER
      NSTATE=INEW
      ITOP=0
      DO 5000 I=1,NSTATE
        IX=I
        DO 5100 II=1,8
          ITOP=ITOP+1
          JSTATE(IX)=JLNW(ITOP)
 5100     IX=IX+NSTATE
 5000 CONTINUE

      RETURN
      END
