      SUBROUTINE IOSBIN(NVC,ITYPX,ATAU,MX,IASYMU,IPHIFX,IOSNG,IPRINT)
C  Copyright (C) 2019 J. M. Hutson & C. R. Le Sueur
C  Distributed under the GNU General Public License, version 3
      USE sizes, ONLY: MXELVL,MXJLVL
      USE angles
      USE basis_data
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
C
C
C  THIS IS IOS 'BASIS' ROUTINE FOR COMBINED MOLSCAT/IOS APR 86
C  *** MODIFICATIONS MAY 1978 FOR ITYPE=5.
C  *** MODIFICATIONS SEPT 1985 FOR ITYPE=6,
C      INCLUDING ADDITION OF MMAX TO &INPUT.
C  *** MODIFIED FEB 92 TO CHANGE ITYPE=2 TO USE IV() INDEXING
C  *** MODIFIED MAY 92 TO HANDLE ITYPE=103 (SG) ***
C  *** MODIFIED JAN/FEB 92 TO GENERALIZE ITYPE=2 HANDLING
C  *** MODIFIED FEB 88 TO CORRECT 'IHOMO' HANDLING OF ITYPE=5,6 CASES
C      WHERE POTENTIAL IS SYMMETRIC ABOUT THETA=PI/2
C  *** AUG 86  ADD LM,LMAX ARGUMENTS TO IXQLF
C  *** UPDATED APR 86 TO MERGE BASIN-IOSBIN PROCESSING
C
C--ENTRY IOSBIN READS &BASIS AND SETS UP BASIS DATA.
C  PARAMETERS ARE NVC (NO. VIB. CHANNELS), ITYPX RETURNS ROTOR TYPE
C  AND ATAU(MX) WHICH WILL HOLD ROTOR COEFF. FOR ITYPE=6
C
      DIMENSION ATAU(MX)
C
C--ENTRY IOSBGP GETS LAM(MXLAM) INFORMATION FROM &POTL.
C  CAN THEN CHOOSE NGPT, LMAX, MMAX, AND SET UP GAUSS PTS/WTS
C  SPECIFICATIONS FOR ENTRY IOSBGP . . .
      DIMENSION  LAM(MXLAM)
      LOGICAL LODD
C
C--ENTRY IOSB1, CALLED AFTER STORAGE IS ALLOCATED, SETS UP PWGHT, VLI
C  ALSO IXQL AND LM.
C  SPECIFICATIONS . . .
      DIMENSION PWGHT(NGPT,LMAX), VLI(NGPT,MXXXXL)
      DIMENSION IXQL(NIXQL,NQL),LM(3,LMAX)
C  BELOW (TEMPORARY) TO CONTROL FLOW OF ALTERNATE ITYPE=3 CODE
      LOGICAL LNEW
C
C--ENTRY IOSB2 IS CALLED JUST BEFORE PROPAGATOR. SETS UP VL, ETC.
C  SPECIFICATIONS FOR ENTRY IOSB2 . . .
      DIMENSION CENT(NVC),EINT(NVC),WVEC(NVC),VL(2),IVIX(2)
      DIMENSION LORB(NVC),JSINDX(NVC),NB(NVC)
C  COMMON TO PASS ANGLES TO VRTP FOR "UNEXPANDED" (MXLAM=0) POTL CASE
C  N.B. 3RD ANGLE FOR ITYPE=3.  IHOMO,ICNSYM TO SET IH0,IC0 IN VRTP
C  FACTOR IS 1./(VALUE OF LOWEST ANGULAR TERM) - DEPENDS ON ITYPE
C
C  CHANGED TO USE ANGLES MODULE ON 16-08-2018
C     COMMON /ANGLES/ COSANG(MXANG),FACTOR,IHOMO,ICNSYM,IHOMO2,ICNSY2
      LOGICAL LVRTP
C
C--ENTRY IXQLF RETURNS INDEX IN IXQL OF AN INPUT L,M1,M2,ICDE SYM.
C
C
C  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
C  TO CONTROL DEBUGGING OUTPUT OF COUPLING MATRIX
C  LDEBUG=.TRUE. CAN GIVE QUITE A BIT OF OUTPUT !
      LOGICAL LDEBUG
C
C  INTERNAL VERSION OF JLEVEL,ELEVEL IS ALSO USED; CF IOSOUT
      DIMENSION LEVV(MXJLVL),EV(MXELVL)
C
C  COMMON BLOCK TO COMMUNICATE WITH IOSOUT . . .
      COMMON /IOUTCM/ MAXNUM,LEVV
C
C  DYNAMIC STORAGE COMMON BLOCK ...
      COMMON /VLFLAG/ IVLFL
C
C  IOS GAUSS POINT CONTROL
      DIMENSION IOSNGP(3),IOSNG(3)
C
C  ******************************************************************
C  **                   PROGRAM LIMITATION                         **
C  **              DIMENSIONS FOR GAUSS POINTS                     **
C  **                   ------- ----------                         **
C  **  COULD USE /MEMORY/ FOR DYNAMIC STORAGE, BUT BELOW SHOULD    **
C  **    SUFFICE FOR MOST FEASIBLE CALCULATIONS.                   **
C  ******************************************************************
      PARAMETER (MXGPT=400)
      DIMENSION COSA(MXGPT),GWT(MXGPT)
C  FOR ITYPE=3 TO HOLD PLM(LI,M,) AND COS(M*PHI) -- LNEW=.TRUE. CODE
      DIMENSION PL1(MXGPT),PL2(MXGPT),COSM(MXGPT)
C
C  AND EQUIVALENT INTERNAL ARRAYS
      PARAMETER (NVCMX=MXELVL)
      DATA IZ/0/
      DATA LNEW/.TRUE./,LDEBUG/.FALSE./
C
C  STATEMENT FUNCTION USED IN DETERMINING ITYPE=5,6 IHOMO SYMMETRY
      LODD(I,J)=(I-J)-2*((I-J)/2).NE.0
C
C
C  SPECIFICATIONS FOR LEGENDRE STATEMENT FUNCTION . . .
      XLEG(I,TH)=SQRT(2.D0/DBLE(2*I+1))*PLM(I,0,TH)
C  N.B. PLM(L,M,COSTH) RETURNS A **NORMALIZED** ASSOC. LEG. POLY.
C
C  NB. THE FOLLOWING VARIABLES ARE USED AS LIMITS (SOME ITYPE=5 ONLY)
C  MAXNUM=HIGHEST J IN BASIS / MXK=HIGHEST K (SYM. TOP) IN BASIS.
C  LMBDMX=HIGHEST LAMBDA IN POTL / MUMX=HIGHEST MU IN POTL
C  LMMAX=HIGHEST 'L' IN SLLR,SLLI,QLT / MUMAX=HIGHEST 'M'
C
C  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
      MXJL=MXJLVL
      PI=ACOS(-1.D0)
      WRITE(6,666)
  666 FORMAT(/'  PROCESSED BY IOSBIN ROUTINE (FEB 94).')
C
C  SET LOCAL (AND HENCE KEPT) VALUES FROM ARGUMENTS
      DO 1107 I=1,3
 1107   IOSNGP(I)=IOSNG(I)
      IPHIFL=IPHIFX
C  INITIALIZE SIZE OF ATAU TO ZERO.
      MXA=MX
      MX=0
C  SET DEFAULT IHOMO,ICNSYM, IHOMO2, ICNSY2 WHICH MAY BE CHANGED IN VRTP
      IHOMO=0
      ICNSYM=0
      IHOMO2=0
      ICNSY2=0
C
      WRITE(6,620) ITYPX
  620 FORMAT(/'  INPUT  ITYPE =',I4)
C
      ITYP=ITYPX-10*(ITYPX/10)
      ITYPX=100+ITYP
C  SET IVLFL TO ZERO FOR MOST CASES; EXCEPTION IS ITYPE=102  (FEB 94)
      IVLFL=0
      IF (ITYP.EQ.1) GOTO 1000
      IF (ITYP.EQ.2) GOTO 2000
      IF (ITYP.EQ.3) GOTO 3000
      IF (ITYP.EQ.5) GOTO 5000
      IF (ITYP.EQ.6) GOTO 6000
      WRITE(6,699) ITYP
  699 FORMAT(/'  * * * ERROR.  MOD(ITYPE,10) =',I3,'  NOT SUPPORTED.')
      STOP
C
 1000 NVC=1
      IGOTP=6100
      EV(1)=0.D0
      LEVV(1)=0
      ILOFF=1
      IF (NLEVEL.GT.0) GOTO 1200

      WRITE(6,601) JMIN,JMAX,JSTEP
  601 FORMAT(/'  JLEVEL, NLEVEL CREATED FROM JMIN, JMAX, JSTEP =',3I5)
      JMIN=MAX(JMIN,0)
      JMAX=MAX(JMIN,JMAX)
      JSTEP=MAX(JSTEP,1)
      MAXNUM=0
      NLEVEL=0
      DO 1100 I=JMIN,JMAX,JSTEP
        IF (NLEVEL.GE.MXJL) GOTO 1109

        NLEVEL=NLEVEL+1
        JLEVEL(NLEVEL)=I
 1100   MAXNUM=MAX(MAXNUM,I)
      GOTO 9000

 1109 WRITE(6,698)
  698 FORMAT(/'  * * * WARNING. OUT OF SPACE IN JLEVEL. ',
     1       'BASIS TRUNCATED.')
      NLEVEL=MXJL
      GOTO 9000

 1200 WRITE(6,602) NLEVEL,(JLEVEL(I),I=1,NLEVEL)
  602 FORMAT(/'  BASIS TAKEN FROM NLEVEL, JLEVEL INPUT.  NO. OF ',
     &       'LEVELS (NLEVEL) =',I4/(' ',20I5) )
      MAXNUM=0
      DO 1300 I=1,NLEVEL
        IF (I.GT.MXJL) GOTO 1109
 1300   MAXNUM=MAX(MAXNUM,JLEVEL(I))
      GOTO 9000
C
C>>SG --------- CODE REWORKED FEB 92 (ANTICIPATING H2-H CALCULATIONS)
 2000 ILOFF=3
C  MODS FEB 94 TO USE IV() INDEXING FOR ITYPE=2 REQUIRE IVLFL=1
      IVLFL=1
      IGOTP=6200
C
      IF (NLEVEL.GT.0) GOTO 2100

C  -------- GET 'VIBRATIONAL LEVELS' FROM SPECIAL SUBROUTINE -------
      WRITE(6,697)
  697 FORMAT(/'  IOSBIN (FEB 92).  NLEVEL.LT.0.   AN APPROPRIATE',
     1       ' SUBROUTINE MUST BE PROVIDED:'/
     2       35X,'GET102(MXJL,NLEVEL,JLEVEL,ELEVEL)'/)
      CALL GET102(MXJL,NLEVEL,JLEVEL,ELEVEL)
      NVC=NLEVEL
      MAXNUM=0
      DO 2190 I=1,NVC
        EV(I)=ELEVEL(I)
        LEVV(I)=JLEVEL(2*I)
 2190   MAXNUM=MAX(MAXNUM,JLEVEL(2*I-1))
C  SKIP '2009' PRINT OUT OF LEVEL INFO/  DO IT IN GET102 IF DESIRED
      GOTO 9000
C
C  ----- GET 'VIBRATIONAL LEVELS' FROM JLEVEL -----
C  CURRENT CODE DOES NOT ALLOW DUPLICATE VIB LEVELS.
 2100 NVC=1
      ITOP=2*NLEVEL
      WRITE(6,602) NLEVEL,(JLEVEL(I),I=1,ITOP)
      LEVV(1)=JLEVEL(2)
      MAXNUM=JLEVEL(1)
      I=2
 2102 IF (I.GT.NLEVEL) GOTO 2110

      DO 2103 II=1,NVC
        IF (LEVV(II).NE.JLEVEL(2*I)) GOTO 2103
        WRITE(6,693) I,JLEVEL(2*I-1),JLEVEL(2*I)
  693   FORMAT('  IOSBIN (FEB 92).  LEVEL',I4,'  V,J =',2I4,
     1         '  DUPLICATES AN EARLIER VIB LEVEL.'/
     2         20X,'VIBRATIONAL VALUE IGNORED, HIGHER J-VALUE KEPT.')
        JXX=MAX(JLEVEL(2*II-1),JLEVEL(2*I-1))
        JLEVEL(2*II-1)=JXX
        MAXNUM=MAX(MAXNUM,JXX)
        IF (I.LT.NLEVEL) GOTO 2120

C  I.EQ.NLEVEL ==> REDUCE NLEVEL AND GET OUT
        NLEVEL=NLEVEL-1
        GOTO 2110

C  PULL DOWN LIST/ DECREASE NLEVEL/ GO BACK FOR NEW I-TH LEVEL
 2120   DO 2121 J=I+1,NLEVEL
          ELEVEL(J-1)=ELEVEL(J)
          JLEVEL(2*J-3)=JLEVEL(2*J-1)
 2121     JLEVEL(2*J-2)=JLEVEL(2*J)
        NLEVEL=NLEVEL-1
        GOTO 2102

 2103 CONTINUE
C  DUPLICATE VIB LEVEL NOT FOUND/ ADD THIS VIBRATIONAL LEVEL
      IF (NVC.LT.NVCMX) GOTO 2104

      WRITE(6,694) NVCMX
  694 FORMAT(/'  ISOBIN -- ERROR.  VIBRATIONAL LEVELS IN NLEVEL/JLEVEL',
     1       ' EXCEED NVCMX =',I4)
      STOP

 2104 NVC=NVC+1
      LEVV(NVC)=JLEVEL(2*I)
      MAXNUM=MAX(MAXNUM,JLEVEL(2*I-1))
      I=I+1
      GOTO 2102
C
 2110 WRITE(6,692) NVC
  692 FORMAT(/'  IOSBIN (FEB 92).  NUMBER OF VIB. CHANNELS (NVC) =',I4)
C
C  ----- GET ENERGY LEVELS -----
      DO 2111 I=1,NVC
        IF (ELEVEL(I).EQ.0.D0) GOTO 2111
C  IF ELEVEL() VALUES ARE SET (NON-ZERO), USE THEM
        GOTO 2290

 2111 CONTINUE
C  IF WE REACH HERE, ALL ELEVEL ARE ZERO.
C  IF THERE IS ONLY ONE LEVEL, AND ENERGY()=0, WE ARE STILL OKAY
      IF (NVC.GT.1) GOTO 2280

C  SET EV() FROM ELEVEL() AND WE ARE DONE.
 2290 WRITE(6,691)
  691 FORMAT(/'  IOSBIN (FEB 92).  VIBRATIONAL ENERGIES ',
     1       'TAKEN FROM ELEVEL INPUT.')
      DO 2291 I=1,NVC
 2291   EV(I)=ELEVEL(I)
      GOTO 2009

C  OTHERWISE, SEE IF WE CAN CALCULATE ENERGIES FROM WE, WEXE
 2280 IF (WE(1).GT.0.D0) GOTO 2200

      WRITE(6,696) NVC,WE(1)
  696 FORMAT(/'  IOSBIN (FEB 92) CANNOT GET ENERGIES FROM ELEVEL ',
     &      'OR WE.  NVC, WE =',I6,E14.4)
      STOP

 2200 WRITE(6,603) WE(1)
  603 FORMAT(/'  VIBRATIONAL ENERGIES (WITH V = 0 AT ZERO ENERGY)',
     1       ' CALCULATED FROM WE =',F10.4)
      IF (WEXE(1).NE.0.D0) WRITE(6,604) WEXE(1)
  604 FORMAT(67X,'CORRECTED FOR WEXE =',F10.6)
      DO 2201 I=1,NVC
        FV=LEVV(I)
        EV(I)=WE(1)*FV-WEXE(1)*FV*(FV+1.D0)
C  STORE BACK IN JLEVEL,ELEVEL FOR ISAVEU OUTPUT PURPOSES.
C>>SG JLEVEL(I)=LEVV(I) -->> THIS WAS USED FOR ISAVEU CAPABILITY IN
C>>SG                   -->> IOSDRV AND WILL NO LONGER WORK THERE
C  ELEVEL() IS NEEDED IN IOSB2 TO GET EINT, ETC.
 2201   ELEVEL(I)=EV(I)
      NLEVEL=NVC
C  ------  OUTPUT LEVV, EV  ------
 2009 DO 2019 I=1,NVC
 2019   WRITE(6,613) I,LEVV(I),EV(I)
  613   FORMAT('  LEVEL',I4,'   LEVV =',I4,'  EV =',F12.4)
      GOTO 9000

C<<SG  ------------------------------<< END OF MODIFICATIONS (2/4/91)
C
C>>SG     -----  ITYPE=3 CODE ADDED 5/6/92 (SG)
 3000 ILOFF=3
      IGOTP=6300
      NVC=1
      LEVV(1)=0
      EV(1)=0.
      IF (NLEVEL.GT.0) GOTO 3901

      WRITE(6,632) JMIN,JMAX,JSTEP,J2MIN,J2MAX,J2STEP
  632 FORMAT(/'  ROTATIONAL LEVELS FROM JMIN JMAX JSTEP'/
     1       '          ROTOR 1  --  ',3I5/'          ROTOR 2  --  ',
     2       3I5)
      GOTO 3903

 3901 ITOP=2*NLEVEL
      WRITE(6,633) NLEVEL,(JLEVEL(I),I=1,ITOP)
  633 FORMAT(/'  ROTATIONAL LEVELS FROM NLEVEL =',I4,'  -- JLEVEL ='/
     1       (25I4))
      DO 3902 I=1,NLEVEL
        JMIN=MIN(JMIN,JLEVEL(2*I-1))
        JMAX=MAX(JMAX,JLEVEL(2*I-1))
        J2MIN=MIN(J2MIN,JLEVEL(2*I))
 3902   J2MAX=MAX(J2MAX,JLEVEL(2*I))
 3903 MAXNUM=MAX(JMAX,J2MAX)
      IF (IDENT.GT.0) WRITE(6,634) IDENT
  634 FORMAT(/'  IDENTICAL PARTICLES SPECIFIED BY IDENT =',I3)
      GOTO 9000

C<<SG     ----- END OF ITYPE=3 CODE ADDED 5/6/92 (SG)
C
 5000 ILOFF=2
      IGOTP=6500
      NVC=1
      EV(1)=0.D0
      LEVV(1)=0
      IF (NLEVEL.GT.0) GOTO 5001

      WRITE(6,687) ITYPX
  687 FORMAT(/'  * * * WARNING.  CURRENT ITYPE =',I3,' REQUIRES ',
     1       'NLEVEL/JLEVEL INPUT.  CROSS SECTIONS NOT CALCULATED.')
      GOTO 9000

 5001 ITOP=3*NLEVEL
      WRITE(6,652) NLEVEL,(JLEVEL(I),I=1,ITOP)
  652 FORMAT(/'  BASIS IS TAKEN FROM NLEVEL =',I4,'  AND JLEVEL INPUT'/
     1       /'  J   K  PRTY'/ (' ',I3,2I4))
      MAXNUM=0
      MXK=0
C  BELOW IS A LESS-THAN-PERFECT CHECK ON DIMENSIONS FOR JLEVEL
      NLEVEL=MIN(NLEVEL,MXJL)
      DO 5002 I=1,NLEVEL
        MAXNUM=MAX(MAXNUM,JLEVEL(3*I-2))
 5002   MXK=MAX(MXK,ABS(JLEVEL(3*I-1)))
      GOTO 9000
C
 6000 ILOFF=2
      IGOTP=6500
      NVC=1
      EV(1)=0.D0
      LEVV(1)=0
      CALL SET6I(JLEVEL,MXJL,NLEVEL,ATAU,MXA,IASYMU,IPRINT)
      MX=MXA
C ***
C *** N.B JLEVEL(,1) = J, JLEVEL(,2) = TAU, JLEVEL(,3) = PARITY
C ***     JLEVEL(,4)+1 =  STARTING ADDRESS IN ATAU OF COEFFS (NK=2*J+1)
C ***
      MAXNUM=0
      IF (NLEVEL.LE.0) GOTO 9000

      DO 6001 I=1,NLEVEL
 6001   MAXNUM=MAX(MAXNUM,JLEVEL(4*I-3))
      MXK=MAXNUM
      GOTO 9000
C
C     COMMON RETURN POINT
 9000 RETURN
C ==================================================== END OF IOSBIN
      ENTRY IOSBGP(MXLAM,LAM,MXXXXL,NGPT,LMAX,MMAX,NQL,NIXQL)
C
C  FIND HIGHEST LAMBDA VALUE AND CHECK FOR HOMONUCLEAR SYMMETRY.
C  IHOMO =1( ALL LEGENDRE SYMMETRIES) OR 2 ( ONLY EVEN LEGENDRE SYMS)
C  N.B. THIS WILL HAVE TO BE RESET FOR ITYPE=5,6, BUT WE NEED TO
C  DETERMINE MXXXXL FOR VRTP; N.B. MXLAM=1 HAS BEEN SET BY POTENL.
      MXXXXL=0
C
C
C  SEPARATE CODE FOR ITYPE=3
      IF (ITYP.EQ.3) GOTO 3330
C
C  BELOW IS UNIFIED ITYPE=1,2,5,6 -- THEN SPLITS OFF FOR 5,6
      IH0=2
      IL=1
      DO 3001 I=1,MXLAM
        L=LAM(IL)
        IF (L.GE.0) GOTO 3002

        WRITE(6,695) I,L
  695   FORMAT(/'  * * * WARNING.  LAM(I) NEGATIVE',2I5)
        L=ABS(L)
        LAM(IL)=L
 3002   MXXXXL=MAX(L,MXXXXL)
        IF (L-2*(L/2).EQ.1) IH0=1
 3001   IL=IL+ILOFF
C  CHECK FOR 'MXSYM=0' CASE, I.E. UNEXPANDED POTENTIAL.
C  N.B. IH0=1,2 ONLY SHOULD BE ALLOWED, NOT CHECKED BELOW.
C>>SG IN CASE ONLY LAMBDA=0 TERMS APPEAR IN THE POTENTIAL (E.G., IN
C  A BREATHING SPHERE TYPE VIBRATIONAL CALC) THE CODE BELOW WILL
C  (ERRONEOUSLY) SET LVRTP=.TRUE.  HOWEVER, SINCE THE POTENTIAL
C  IS THEN SPHERICALLY SYMMETRIC, THIS OUGHT TO STILL WORK.  ONE
C  MIGHT, WORRY, HOWEVER, ABOUT IH0 SETTING, AND DOUBLE CHECK
C  BEFORE RUNNING SUCH A CASE
C<<SG
      LVRTP=MXXXXL.LE.0
      IF (.NOT.LVRTP) GOTO 3003

      IH0=1
      IF (IHOMO.EQ.0) GOTO 3003

      IH0=IHOMO
      WRITE(6,617) IH0
  617 FORMAT(/'  * * * NOTE.  IHOMO TAKEN FROM VRTP ROUTINE =',I4)
C
 3003 IF (ITYP.EQ.5 .OR. ITYP.EQ.6) GOTO 3500

C *** BELOW FOR ITYPE=1,2 // SET MXXXXL, DETERMINE NGPT AND LMAX=NQL
      THLO=-1.D0
      THHI=1.D0
      SFACT=1.D0
      IF (IH0.EQ.1) GOTO 3200

      THLO=0.D0
      SFACT=SFACT*2.D0
      WRITE(6,608)
  608 FORMAT(/'  * * * NOTE.'/'  * * * NOTE.  USE WILL BE MADE OF ',
     &       'FACT THAT POTENTIAL HAS ONLY EVEN LEGENDRE TERMS.')
C
 3200 MXXXXL=MXXXXL/IH0+1
      IF (IOSNGP(1).LE.0) GOTO 3101

      NGL=IOSNGP(1)
      WRITE(6,655) NGL,IOSNGP(1)
      GOTO 3102

 3101 I=MXXXXL*IH0
      NGL=2*(MAXNUM+I)
      WRITE(6,656) NGL,MAXNUM,I
 3102 NGPT=NGL
      IF (NGPT.LE.MXGPT) GOTO 3103

      WRITE(6,607) NGPT,MXGPT
  607 FORMAT(/'  * * * WARNING.'/'  NUMBER OF GAUSS POINTS (NGPT)=',I5,
     1        ' WAS .GT. MXGPT=',I5,'  --  REDUCED.')
      NGPT=MXGPT
C  SET UP FOR LINEAR MOLECULES   /   POINTS AND WEIGHTS.
 3103 CALL GAUSSP(THLO,THHI,NGPT,COSA,GWT)
      DO 3201 I=1,NGPT
 3201   GWT(I)=GWT(I)*SFACT
      WRITE(6,609) NGPT,(COSA(I),GWT(I),I=1,NGPT)
  609 FORMAT(/'  THETA INTEGRATION DONE BY ',I3,'-POINT GAUSSIAN ',
     &       'QUADRATURE. POINTS/WEIGHTS ARE'/(4(10X,2F10.6)))
C  CHOOSE LMAX.
      IF (LMAX.LE.0) GOTO 3301

      WRITE(6,610) LMAX
  610 FORMAT(/'  LMAX TAKEN FROM &INPUT LMAX =',I5)
      IF (LMAX.GT.NGPT*IH0) WRITE(6,611)
  611 FORMAT(/'  * * * WARNING.'/'  LMAX TOO LARGE FOR NUMBER OF ',
     1        'QUADRATURE POINTS.  ERRORS IN HIGHER Q(L) WILL RESULT.')
      GOTO 3300

 3301 LMAX=NGPT*IH0
      WRITE(6,612) LMAX
  612 FORMAT(/'  * * * WARNING.'/'  INPUT LMAX.LE.0 (DEFAULT), ',
     1        'HIGHEST VALUE CONSISTENT WITH NUMBER OF QUADRATURE ',
     2        'POINTS WILL BE USED.  LMAX =',I4)
 3300 NQL=LMAX
      NIXQL=2
C>>SG CHECK THAT MXXXXL IS GE TO 1 FOR FUTURE INDEXING PURPOSES
      IF (MXXXXL.GE.1) RETURN

      WRITE(6,990) MXXXXL
  990 FORMAT(/'  IOSBIN (FEB 92 CODE). MXXXXL RESET FROM',I4/
     1       '  ****** WARNING.  THIS IS PROBABLY AN ERROR CONDITION.')
      MXXXXL=1
      RETURN
C
C *** BELOW FOR ITYPE=5 AND 6 // SET MXXXXL, NGPT, LMAX, NQL
C  FEB 88 CODE BELOW TO SET IHOMO FOR ITYPE=5,6.
C  N.B V(PI-THETA)=V(PI) REQUIRES YLM EXIST ONLY FOR L-M EVEN
C  WHICH DIFFERS FROM THE L EVEN FOR ITYPE=1,2 USED PREVIOUSLY
C>>SG 5/11/92
C>>SG 5/11/92 N.B. THIS SHOULD BE REDONE TO TAKE ADVANTAGE OF NEW GAUSSP
C>>SG 5/11/92
 3500 IF (.NOT.LVRTP) GOTO 3540

      IH0=1
      IF (IHOMO.EQ.0) GOTO 3543

      IH0=IHOMO
      GOTO 3543

C  ABOVE ALLOWS SETTING IN VRTP ROUTINE/ BELOW CHECKS INPUT L,M SYMS.
 3540 IH0=2
      DO 3542 L=1,MXLAM
        IF (LODD(LAM(2*L),LAM(2*L-1))) IH0=1
 3542 CONTINUE
 3543 THLO=-1.D0
      THHI=1.D0
      SFACT=1.D0
      IF (IH0.EQ.1) GOTO 3541

      WRITE(6,618)
  618 FORMAT(/'  * * * NOTE.'/'  * * * NOTE.  USE WILL BE MADE OF ',
     &       'FACT THAT POTENTIAL IS SYMMETRIC ABOUT THETA=PI/2'/
     &       '  * * * NOTE.')
      THLO=0.D0
      SFACT=2.D0
C  NEXT GET IC0 (OLD CODE SHOULD ALWAYS STILL WORK OKAY)
 3541 LMBDMX=MXXXXL
      MUMX=0
      DO 3501 L=1,MXLAM
 3501   MUMX=MAX(MUMX,ABS(LAM(2*L)))
C  FIND ICNSYM WHICH IS PHI EQUIVALENT OF IHOMO
      IF (MUMX.GT.1) GOTO 3502

C  ALLOW SETTING OF ICNSYM FOR 'MXSYM=0' (UNEXPANDED POTL) CASE
      IC0=1
      IF (.NOT.LVRTP .OR. ICNSYM.EQ.0) GOTO 3503

      IC0=ICNSYM
      WRITE(6,654) IC0
  654 FORMAT(/'  * * * NOTE.  ICNSYM TAKEN FROM VRTP ROUTINE =',I4)
      GOTO 3503

 3502 IC0=MUMX
 3506 DO 3504 L=1,MXLAM
        M=ABS(LAM(2*L))
        IF (M-(M/IC0)*IC0.NE.0) GOTO 3505

 3504 CONTINUE
      GOTO 3503

 3505 IC0=IC0-1
      IF (IC0.GT.1) GOTO 3506

 3503 PHILO=0.D0
      PHIHI=PI/DBLE(IC0)
      SFACT=SFACT*DBLE(IC0)*2.D0
C  N.B. WE USE HERE FACT THAT POTENTIAL IS EVEN IN PHI SO INTEGRAL
C  IS TWICE THAT FROM 0 TO PI.  THIS IS REFLECTED IN HAVING ONLY
C  COS (M*PHI) AND NOT SIN (M*PHI) IN PWGHT, ETC.
      IF (IC0.GT.1) WRITE(6,658) IC0
  658 FORMAT(/'  * * * NOTE.'/'  * * * NOTE.  USE WILL BE MADE OF',I4,
     &       '-FOLD SYMMETRY ABOUT Z-AXIS.'/'  * * * NOTE.')
C  DETERMINE NO. OF LAMBDA, MU SYMMETRIES (MXXXXL)
      MXXXXL=0
      DO 3507 L=IZ,LMBDMX
        MTOP=MIN(MUMX,L)
      DO 3507 M=IZ,MTOP,IC0
        IF (IH0.EQ.2 .AND. LODD(L,M)) GOTO 3507

        MXXXXL=MXXXXL+1
 3507 CONTINUE
C  DETERMINE NO. OF GAUSS POINTS FOR THETA(NGL) AND PHI (NGM)
C  ** N.B. SOME MANEUVERING IS NECESSARY SINCE GAUSSP MAY REDUCE NPT.
      WRITE(6,645) IPHIFL
  645 FORMAT(/'  * * * NOTE.  IPHIFL (PHI INTEGRATION FLAG) =',I4)
      IPASS=0
      IF (IOSNGP(1).GT.0) GOTO 3510
      NGL=2*(MAXNUM+LMBDMX)
      WRITE(6,656) NGL,MAXNUM,LMBDMX
  656 FORMAT(/'  * * * NOTE. INPUT IOSNGP(1) .LE. 0 (DEFAULT). '/
     1        '  NUMBER OF GAUSS POINTS FOR THETA (NGL) =',I4,
     2        '  OBTAINED FROM MAXNUM, LMBDMX =',2I4)
      GOTO 3531

 3510 NGL=IOSNGP(1)
      WRITE(6,655) IOSNGP(1)
  655 FORMAT(/'  * * * NOTE.'/
     1        '  NUMBER OF GAUSS POINTS FOR THETA (NGL) SET FROM ',
     2        '&BASIS IOSNGP(1) =',I4)
 3531 IF (IOSNGP(2).GT.0) GOTO 3532

      NGM=MAX(1,2*(MUMX+MXK))
      WRITE(6,647) NGM,MXK,MUMX
  647 FORMAT(/'  * * * NOTE. INPUT IOSNGP(2) .LE. 0 (DEFAULT).'/
     1        '  NUMBER OF GAUSS POINTS FOR PHI (NGM) =',I4,
     2        '  OBTAINED FROM MXK, MUMX =',2I4)
      GOTO 3511

 3532 WRITE(6,646) IOSNGP(2)
  646 FORMAT(/'  * * * NOTE.'/
     1        '  NUMBER OF GAUSS POINTS FOR PHI (NGM) SET FROM &BASIS ',
     2        'IOSNGP(2) =',I4)
      NGM=MAX(1,IOSNGP(2))
 3511 CALL GAUSSP(THLO,THHI,NGL,COSA,GWT)
      IF (MUMX.GT.0 .OR. IPASS.GT.0 .OR. LVRTP) GOTO 3512

      NGM=1
      WRITE(6,650)
  650 FORMAT(/'  * * * NOTE.'/'  * * * NOTE.  POTENTIAL HAS NO PHI ',
     &       'DEPENDENCE.  INTEGRAL DONE ANALYTICALLY.')
 3512 IF (IPHIFL.NE.0)
     &  CALL GAUSSP(PHILO,PHIHI,NGM,COSA,GWT)
      NGPT=NGM+NGL
      IF (NGPT.LE.MXGPT) GOTO 3513

      WRITE(6,607) NGPT,MXGPT
      NGL=(DBLE(MXGPT)/DBLE(NGPT))*NGL
      NGM=(DBLE(MXGPT)/DBLE(NGPT))*NGM
      NGM=MAX(NGM,1)
      IPASS=1
      GOTO 3511

 3513 CALL GAUSSP(THLO,THHI,NGL,COSA,GWT)
      WRITE(6,609) NGL,(COSA(I),GWT(I),I=1,NGL)
      IF (IPHIFL.EQ.0) GOTO 3515
      CALL GAUSSP(PHILO,PHIHI,NGM,COSA(NGL+1),GWT(NGL+1))
      WRITE(6,644) NGM,(COSA(NGL+I),GWT(NGL+I),I=1,NGM)
  644 FORMAT(/'  PHI  INTEGRATION DONE BY ',I3,'-POINT GAUSSIAN ',
     &       'QUADRATURE. POINTS/WEIGHTS ARE'/(4(10X,2F10.6)))
      GOTO 3516

 3515 IX=NGL
      FACTL=(PHIHI-PHILO)/DBLE(NGM)
      TH=-FACTL/2.D0
      DO 3514 I=1,NGM
        IX=IX+1
        TH=TH+FACTL
        GWT(IX)=FACTL
 3514   COSA(IX)=TH
      WRITE(6,651) NGM,(COSA(NGL+I),GWT(NGL+I),I=1,NGM)
  651 FORMAT(/'  PHI  INTEGRATION DONE BY ',I3,'-POINT EQUALLY SPACED ',
     &       '(GAUSS-CHEBYSCHEV) QUADRATURE.  POINTS/WEIGHTS ARE'/
     &       (4(10X,2F10.6)))
 3516 WRITE(6,653) SFACT
  653 FORMAT(/'  ABOVE WEIGHTS MULTIPLIED BY SYMMETRY FACTOR =',1PE16.8)
      NGPT=NGL*NGM
C  NEXT CHOOSE LMAX (LMMAX,MUMAX)
      IF (LMAX.LE.0) GOTO 3520

      WRITE(6,610) LMAX
      LMMAX=LMAX
      GOTO 3523

 3520 LMMAX=MIN(NGL*IH0,2*MAXNUM)
      WRITE(6,612) LMMAX
C  INPUT CAPABILITY ON MMAX ADDED IN VERSION 6.
 3523 IF (MMAX.LE.0) GOTO 3525

      MUMAX=MMAX
      WRITE(6,630) MMAX
  630 FORMAT(/'  MMAX TAKEN FROM &INPUT MMAX =',I5)
      GOTO 3524

 3525 MUMAX=MIN(NGM*IC0,2*MXK,LMMAX)
      WRITE(6,631) MUMAX
  631 FORMAT(/'  * * * WARNING.  MMAX=0 (DEFAULT).  WILL USE HIGHEST',
     &       ' VALUE CONSISTENT WITH IOSNGP(2), MMAX =',I4)
C  RESET LMAX TO REFLECT *NUMBER* OF LAMBDA,MU VALUES.
C  AND COUNT NQL (NUMBER OF QLT VALUES)
 3524 LMAX=0
      NQL=0
      DO 3521 L=IZ,LMMAX
        MTOP=MIN(MUMAX,L)
      DO 3521 M=IZ,MTOP,IC0
        IF (IH0.EQ.2 .AND. LODD(L,M)) GOTO 3521

        LMAX=LMAX+1
        DO 3522 I=IZ,M,IC0
          IF (IH0.EQ.2 .AND. LODD(L,I)) GOTO 3522

          IX=2
          IF (I.EQ.M) IX=1
          NQL=NQL+IX
 3522   CONTINUE
 3521 CONTINUE
      NIXQL=3
      RETURN
C
C  ITYPE=3 CODE ADDED 5/6/92 (SG)
C  GET POTENL SYMS. (ITYPE=3 USES IHOMO,ICNSYM FOR IHOMO1,IHOMO2)
 3330 L1MAX=0
      L2MAX=0
      LLMAX=0
      IL=0
      DO 3331 I=1,MXLAM
        L1MAX=MAX(L1MAX,LAM(IL+1))
        L2MAX=MAX(L2MAX,LAM(IL+2))
        LLMAX=MAX(LLMAX,LAM(IL+3))
 3331   IL=IL+ILOFF
      MXXXXL=MAX(MXXXXL,L1MAX,L2MAX,LLMAX)
      LVRTP=MXXXXL.LE.0
      IF (.NOT.LVRTP) GOTO 3332

      IH0=1
      IC0=1
      IF (IHOMO.EQ.0) GOTO 3333

      IH0=IHOMO
      WRITE(6,637) IH0
  637 FORMAT(/'  * * * NOTE. IH0 (MOL 1) TAKEN FROM VRTP ROUTINE =',
     1       I4)
 3333 IF (ICNSYM.EQ.0) GOTO 3334

      IC0=ICNSYM
      WRITE(6,638) IC0
  638 FORMAT(/'  * * * NOTE. IH0 (MOL 2) TAKEN FROM VRTP ROUTINE =',
     1       I4)
      GOTO 3334

C  FOR EXPANDED POTENTIAL (.NOT.LVRTP) GET IHOMO1,IHOMO2 FROM LAM
 3332 IH0=2
      IC0=2
      DO 3335 I=1,MXLAM
        IF (LODD(LAM(3*I-2),0)) IH0=1
 3335   IF (LODD(LAM(3*I-1),0)) IC0=1
 3334 IM=1
      IF (IH0.EQ.2) WRITE(6,639) IM
  639 FORMAT(/'  * * * NOTE.'/'  * * * NOTE.  USE WILL BE MADE OF FACT',
     &       ' THAT POTENTIAL IS SYMMETRIC ABOUT PI/2 FOR MOLECULE',I3)
      IM=2
      IF (IC0.EQ.2) WRITE(6,639) IM
C>>SG (5/18/92) STORE IH0,IC0 BACK IN IHOMO,ICNSYM FOR USE IN IOSOUT
      IHOMO=IH0
      ICNSYM=IC0
C  COUNT L1,L2,LL SYMMETRIES (MXXXXL)
C  FOR IDENT PARTICLES, L1,L2<->L2,L1 MUST BOTH BE IN POTL SYMS
      MXXXXL=0
      DO 3336 L1=IZ,L1MAX,IH0
        L2TOP=L2MAX
        IF (IDENT.GT.0) L2TOP=L1MAX
      DO 3336 L2=IZ,L2TOP,IC0
        LLO=ABS(L1-L2)
        LHI=L1+L2
      DO 3336 LL=LLO,LHI
        IF (LODD(L1+L2,LL)) GOTO 3336
        MXXXXL=MXXXXL+1
 3336 CONTINUE
C  SET INTEGRATION LIMITS AND GET GAUSS POINTS
C  CURRENT GAUSSP (5/6/92) DOES *ARBITRARY* NO PTS;
C  IF REQUEST EXCEEDS DIMENSIONS (MXGPT) TERMINATE.
      SFACT=1.D0
      IF (IOSNGP(1)*IOSNGP(2)*IOSNGP(3).GT.0 .AND.
     1    IOSNGP(1)+IOSNGP(2)+IOSNGP(3).LE.MXGPT) GOTO 3337

      WRITE(6,636) IOSNGP,MXGPT
  636 FORMAT(/'  IOSBGP.  ERROR.  IOSNGP INPUT, ',3I5,' ILLEGAL OR ',
     1       'EXCEEDS STORAGE (MXGPT) =',I5)
      STOP

 3337 NGP1=IOSNGP(1)
      THLO=-1.D0
      THHI=1.D0
      IF (IH0.EQ.2) THEN
        THLO=0.D0
        SFACT=SFACT*2.D0
      ENDIF
      CALL GAUSSP(THLO,THHI,NGP1,COSA(1),GWT(1))
      WRITE(6,609) NGP1,(COSA(I),GWT(I),I=1,NGP1)
      NGP2=IOSNGP(2)
      IST2=NGP1
      THLO=-1.D0
      IF (IC0.EQ.2) THEN
        THLO=0.D0
        SFACT=SFACT*2.D0
      ENDIF
      CALL GAUSSP(THLO,THHI,NGP2,COSA(IST2+1),GWT(IST2+1))
      WRITE(6,609) NGP2,(COSA(IST2+I),GWT(IST2+I),I=1,NGP2)
      WRITE(6,645) IPHIFL
      PHILO=0.D0
C  CAN ALWAYS USE SYMMETRY V(-PHI)=V(PHI) TO REDUCE INTEGRAL
C  FROM (0,2*PI) TO (0,PI) -- CORRECT SFACT ACCORDINGLY
      PHIHI=PI
      SFACT=SFACT*2.D0
      IST3=IST2+NGP2
      NGM=IOSNGP(3)
      IF (IPHIFL.EQ.0) GOTO 3338

      CALL GAUSSP(PHILO,PHIHI,NGM,COSA(IST3+1),GWT(IST3+1))
      WRITE(6,644) NGM,(COSA(IST3+I),GWT(IST3+I),I=1,NGM)
      GOTO 3339

 3338 IX=IST3
      FACTL=(PHIHI-PHILO)/DBLE(NGM)
      TH=-FACTL/2.D0
      DO 3342 I=1,NGM
        IX=IX+1
        TH=TH+FACTL
        GWT(IX)=FACTL
 3342   COSA(IX)=TH
      WRITE(6,651) NGM,(COSA(IST3+I),GWT(IST3+I),I=1,NGM)
C  SET NGPT AS PRODUCT OF THETA-1, THETA-2, PHI GRIDS
 3339 NGPT=NGP1*NGP2*NGM
      WRITE(6,653) SFACT
C  RESET LMAX AND NQL=LMAX TO REFLECT NUMBER OF L1,L2,LL VALUES
C  USE ITYP=5,6 VARIABLES: LMMAX FOR L1, MUMAX FOR L2
      IF (LMAX.GT.0) GOTO 3340

      LMMAX=(NGP1-1)*IH0
      WRITE(6,640) LMAX,LMMAX,NGP1,IH0
  640 FORMAT(/'  &INPUT LMAX =',I4,' -- L1MAX =',I4,'  CALCULATED FROM',
     1       ' NGP1 AND (SYMMETRY) IH0 =',2I4)
      GOTO 3344

 3340 LMMAX=LMAX
      WRITE(6,641) LMAX
  641 FORMAT('  L1MAX TAKEN FROM &INPUT LMAX =',I4)
 3344 IF (MMAX.GT.0) GOTO 3343

      MUMAX=(NGP2-1)*IC0
      WRITE(6,642) MMAX,MUMAX,NGP2,IC0
  642 FORMAT(/'  &INPUT MMAX =',I4,' -- L2MAX =',I4,'  CALCULATED FROM',
     1       ' NGP2 AND (SYMMETRY) ICNSYM=',2I4)
      GOTO 3345

 3343 MUMAX=MMAX
      WRITE(6,643) MMAX
  643 FORMAT('  L2MAX TAKEN FROM &INPUT MMAX =',I4)

 3345 LMAX=0
      DO 3341 L1=IZ,LMMAX,IH0
        L2TOP=MUMAX
C  IDENTICAL PARTICLES KEEP ONLY L1.GE.L2 IN LM(,)
        IF (IDENT.GT.0) L2TOP=L1
      DO 3341 L2=IZ,L2TOP,IC0
        LLO=ABS(L1-L2)
        LHI=L1+L2
      DO 3341 LL=LLO,LHI
        IF (LODD(L1+L2,LL)) GOTO 3341
        LMAX=LMAX+1
 3341 CONTINUE
      NQL=LMAX
      NIXQL=2
      RETURN
C============================================================= END OF IOSBGP
      ENTRY IOSB1(PWGHT,VLI,IXQL,LM,NGPT,LMAX,MXXXXL,
     1            NIXQL,NQL)
C
      IF (ITYP.EQ.3) GOTO 4300

      IF (ITYP.EQ.5 .OR. ITYP.EQ.6) GOTO 4500
C
C  N.B. FOR ITYPE=1,2 LMAX=NQL
C  PWGHT MULTIPLY SL(COS(THETA)) TO GET LEGENDRE COEFFICIENTS
      FACTL=-.5D0
      DO 4100 L=1,LMAX
        IXQL(1,L)=L
        IXQL(2,L)=0
        LM1=L-1
        LM(1,L)=LM1
        FACTL=FACTL+1.D0
        DO 4101 NX=1,NGPT
C  N.B. WE KEEP EVEN AND ODD L FOR HOMONUCLEARS, BUT SET TO 0. IF NEC
          PWGHT(NX,L)=0.D0
          IF (IH0.EQ.2 .AND. L-2*(L/2).EQ.0) GOTO 4101
          PWGHT(NX,L)=FACTL*GWT(NX)*XLEG(L-1,COSA(NX))
 4101   CONTINUE
 4100 CONTINUE

C  NEXT COMPUTE VLI
      DO 4200 NX=1,NGPT
        L=0
        DO 4201 IL=1,MXXXXL
          VLI(NX,IL)=XLEG(L,COSA(NX))
 4201     L=L+IH0
 4200 CONTINUE
      RETURN
C
C  ITYPE=3 -- SETUP VLI
 4300 I=0
      IF (LNEW) GOTO 4993

C>>SG 5/21/92 BELOW IS OLD CODE - BYPASSED FOR LNEW=.TRUE.
      DO 4301 IX1=1,NGP1
      DO 4301 IX2=1,NGP2
      DO 4301 IX3=1,NGM
C  I COUNTS GAUSS POINTS TO NGPT.
        I=I+1
        IL=0
      DO 4301 L1=IZ,L1MAX,IH0
        L2TOP=L2MAX
        IF (IDENT.GT.0) L2TOP=L1MAX
      DO 4301 L2=IZ,L2TOP,IC0
        LLO=ABS(L1-L2)
        LHI=L1+L2
      DO 4301 LL=LLO,LHI
        IF (LODD(L1+L2,LL)) GOTO 4301
C  IL COUNTS SYMMETRIES IN POTENTIAL TO L1MAX,L2MAX
        IL=IL+1
        VLI(I,IL)=YRR(L1,L2,LL,COSA(IX1),COSA(IST2+IX2),COSA(IST3+IX3))
 4301 CONTINUE
      PIFACT=2.D0*PI*SFACT
      IL=0
      DO 4302 L1=IZ,LMMAX,IH0
        L2TOP=MUMAX
        IF (IDENT.GT.0) L2TOP=L1
      DO 4302 L2=IZ,L2TOP,IC0
        LLO=ABS(L1-L2)
        LHI=L1+L2
      DO 4302 LL=LLO,LHI
        IF (LODD(L1+L2,LL)) GOTO 4302
        XLFACT=1.D0/(2.D0*LL+1.D0)
        IL=IL+1
        IXQL(1,IL)=IL
        IXQL(2,IL)=0
        LM(1,IL)=L1
        LM(2,IL)=L2
        LM(3,IL)=LL
        I=0
        DO 4303 IX1=1,NGP1
        DO 4303 IX2=1,NGP2
        DO 4303 IX3=1,NGM
          I=I+1
 4303     PWGHT(I,IL)=GWT(IX1)*GWT(IST2+IX2)*GWT(IST3+IX3)*
     1             YRR(L1,L2,LL,COSA(IX1),COSA(IST2+IX2),COSA(IST3+IX3))
     2              *PIFACT*XLFACT
 4302 CONTINUE
      GOTO 4998

C>>SG 5/21/92   -------  END OF OLD CODE
C
C  NEW CODE 5/21/92 MUCH MORE EFFICIENT.  YRR() ASSEMBLED AS NEEDED
C   AVOIDING RECALCULATION OF THRJ, PLM, ETC.
 4993 DEN=SQRT(4.D0*PI)*2.D0*PI
      DO 4310 IL=1,MXXXXL
      DO 4310 IX=1,NGPT
 4310   VLI(IX,IL)=0.D0
      MTOP=MIN(L1MAX,L2MAX)
      DO 4311 M=IZ,MTOP
        PTM=PARSGN(M)
        XM=M
        DO 4312 IX=1,NGM
          COSM(IX)=COS(XM*COSA(IST3+IX))/DEN
          IF (M.EQ.0) GOTO 4312

          COSM(IX)=COSM(IX)*(2.D0*PTM)
 4312   CONTINUE
        IL=0
        DO 4313 L1=IZ,L1MAX,IH0
          IF (L1.LT.M) GOTO 4317

          XL1=L1
          PTL1=PARSGN(L1)
          DO 4314 IX=1,NGP1
 4314       PL1(IX)=PLM(L1,M,COSA(IX))*PTL1
 4317     L2TOP=L2MAX
          IF (IDENT.NE.0) L2TOP=L1MAX
        DO 4313 L2=IZ,L2TOP,IC0
          IF (L2.LT.M) GOTO 4318

          XL2=L2
          PTL2=PARSGN(L2)
          DO 4315 IX=1,NGP2
 4315       PL2(IX)=PLM(L2,M,COSA(IST2+IX))*PTL2
 4318     LLO=ABS(L1-L2)
          LHI=L1+L2
        DO 4313 LL=LLO,LHI
          IF (LODD(L1+L2,LL)) GOTO 4313
          IL=IL+1
          IF (L1.LT.M .OR. L2.LT.M) GOTO 4313
          XL=LL
          TJ=THRJ(XL1,XL2,XL,XM,-XM,0.D0)*(2.D0*XL+1.D0)
          I=0
          DO 4316 IX1=1,NGP1
          DO 4316 IX2=1,NGP2
          DO 4316 IX3=1,NGM
            I=I+1
 4316       VLI(I,IL)=VLI(I,IL)+PL1(IX1)*PL2(IX2)*COSM(IX3)*TJ
 4313   CONTINUE
 4311 CONTINUE
C
C  NOW SET UP IXQL, LM, AND PWGHT
C  N.B. PIFACT IS CONSISTENT WITH AGG & CLARY MP 73,317 (1991), EQS. (19)-(20)
C     AND W/ GOLDFLAM & KOURI JCP 70,5076 (1979), EQS. (68), (69), (89), (121).
C  I.E. T(ANGLES)=(4*PI)*SUM(L1,L2,L) T(L1,L2,L)*YRR(L1,L2,L/ANGLES)
C  NEW CODE 5/21/92 MUCH MORE EFFICIENT; CALC YRR() LOCALLY
      PIFACT=2.D0*PI*SFACT
      DO 4320 IL=1,LMAX
      DO 4320 IX=1,NGPT
 4320   PWGHT(IX,IL)=0.D0
      MTOP=MIN(LMMAX,MUMAX)
      IF (IDENT.GT.0) MTOP=LMMAX
      DO 4321 M=0,MTOP
        PTM=PARSGN(M)
        XM=M
        DO 4322 IX=1,NGM
          COSM(IX)=COS(XM*COSA(IST3+IX))/DEN
          IF (M.EQ.0) GOTO 4322
          COSM(IX)=COSM(IX)*(2.D0*PTM)
 4322   CONTINUE
        IL=0
        DO 4323 L1=IZ,LMMAX,IH0
          IF (L1.LT.M) GOTO 4324

          XL1=L1
          PTL1=PARSGN(L1)
          DO 4325 IX=1,NGP1
 4325       PL1(IX)=PLM(L1,M,COSA(IX))*PTL1
 4324     L2TOP=MUMAX
          IF (IDENT.GT.0) L2TOP=L1
        DO 4323 L2=IZ,L2TOP,IC0
          IF (L2.LT.M) GOTO 4326

          XL2=L2
          PTL2=PARSGN(L2)
          DO 4327 IX=1,NGP2
 4327       PL2(IX)=PLM(L2,M,COSA(IST2+IX))*PTL2
 4326     LLO=ABS(L1-L2)
          LHI=L1+L2
        DO 4323 LL=LLO,LHI
          IF (LODD(L1+L2,LL)) GOTO 4323
          IL=IL+1
C  STORE IXQL, LM ONLY FOR M=0 PASS ONLY.
          IF (M.GT.0) GOTO 4328

          IXQL(1,IL)=IL
          IXQL(2,IL)=0
          LM(1,IL)=L1
          LM(2,IL)=L2
          LM(3,IL)=LL
 4328     IF (L1.LT.M .OR. L2.LT.M) GOTO 4323
          XL=LL
          TJ=THRJ(XL1,XL2,XL,XM,-XM,0.D0)*PIFACT
          I=0
          DO 4329 IX1=1,NGP1
          DO 4329 IX2=1,NGP2
          DO 4329 IX3=1,NGM
            I=I+1
 4329       PWGHT(I,IL)=PWGHT(I,IL)+PL1(IX1)*PL2(IX2)*COSM(IX3)*TJ
 4323   CONTINUE
 4321 CONTINUE
C  END OF M-LOOP - PWGHT NOW CONTAINS YRR; NEED TO MULT BY GAUSS WTS

      I=0
      DO 4330 IX1=1,NGP1
      DO 4330 IX2=1,NGP2
      DO 4330 IX3=1,NGM
        I=I+1
        WTFACT=GWT(IX1)*GWT(IST2+IX2)*GWT(IST3+IX3)
      DO 4330 IL=1,LMAX
 4330   PWGHT(I,IL)=PWGHT(I,IL)*WTFACT
C
 4998 WRITE(6,659) (I,LM(1,I),LM(2,I),LM(3,I),I=1,LMAX)
  659 FORMAT(/'  BI-SPHERICAL HARMONICS FOR EXPANDING S-MATRIX ARE ',
     1       'AS FOLLOWS'//'  INDX  L1  L2  LL'/('  ',4I4))
      RETURN
C
C  ITYPE=5,6  --  COMPUTE VLI
 4500 I=0
      DO 4501 NX=1,NGL
      DO 4501 IX=1,NGM
        I=I+1
        IL=0
      DO 4501 L=IZ,LMBDMX
        MTOP=MIN(MUMX,L)
      DO 4501 M=IZ,MTOP,IC0
        IF (IH0.EQ.2 .AND. LODD(L,M)) GOTO 4501
        IL=IL+1
        VLI(I,IL)=PLM(L,M,COSA(NX))/SQRT(2.D0*PI)
        IF (M.NE.0) VLI(I,IL)=VLI(I,IL)*2.D0*COS(DBLE(M)*COSA(NGL+IX))
 4501 CONTINUE

C  SETUP PWGHT
      FACTL=1.D0/SQRT(2.D0*PI)
      IL=0
      DO 4502 L=IZ,LMMAX
        MTOP=MIN(L,MUMAX)
      DO 4502 M=IZ,MTOP,IC0
        IF (IH0.EQ.2 .AND. LODD(L,M)) GOTO 4502

        IL=IL+1
        IV=0
        DO 4503 IX=1,NGL
        DO 4503 NX=1,NGM
          IV=IV+1
 4503     PWGHT(IV,IL)=GWT(IX)*GWT(NGL+NX)*PLM(L,M,COSA(IX))*
     &                 COS(DBLE(M)*COSA(NGL+NX))*(SFACT*FACTL)
 4502 CONTINUE

      I=0
      IX=0
      DO 4505 L=IZ,LMMAX
        MTOP=MIN(MUMAX,L)
      DO 4505 M=IZ,MTOP,IC0
        IF (IH0.EQ.2 .AND. LODD(L,M)) GOTO 4505

        I=I+1
        LM(1,I)=L
        LM(2,I)=M
        DO 4504 IL=1,I
          IF (LM(1,IL).NE.L) GOTO 4504

          IX=IX+1
          IXQL(1,IX)=I
          IXQL(2,IX)=IL
          IF (I.NE.IL) GOTO 4506

          IXQL(3,IX)=0
          GOTO 4504

 4506     IXQL(3,IX)=1
          IX=IX+1
          IXQL(1,IX)=I
          IXQL(2,IX)=IL
          IXQL(3,IX)=2
 4504   CONTINUE
 4505 CONTINUE

      WRITE(6,657) (I,LM(1,I),LM(2,I),I=1,LMAX)
  657 FORMAT(/'  SPHERICAL HARMONIC SYMMETRIES FOR EXPANDING S-MATRIX ',
     1       'ARE AS FOLLOWS'//'  INDX  L  M'/(' ',2I4,I3))
      WRITE(6,649)
  649 FORMAT(/'  BELOW ARE INDICES TO SYMMETRIES IN QLT'/
     &       /'   IN QLT  LM1  L  M   LM2  L  M   CODE')
      DO 4507 I=1,NQL
        IL=IXQL(1,I)
        IX=IXQL(2,I)
 4507   WRITE(6,648) I,IL,LM(1,IL),LM(2,IL),IX,LM(1,IX),LM(2,IX),
     1               IXQL(3,I)
  648   FORMAT(' ',I7,I6,2I3,I6,2I3,I6)

      RETURN
C============================================================= END OF IOSB1
      ENTRY IOSB0(JTOT,LORB,JSINDX,NB,CENT,EINT,CINT,NVC)
C  THIS PART OF IOSB2 SEPARATED OUT SO THAT IT IS NOT WITHIN LOOP OVER
C  GAUSS POINTS
C
      XJ=JTOT
      XJ=XJ*(XJ+1.D0)
      DO 6666 I=1,NVC
        LORB(I)=JTOT
        JSINDX(I)=I
        NB(I)=I
        CENT(I)=XJ
        EINT(I)=CINT*EV(I)
 6666 CONTINUE

      RETURN
C============================================================= END OF IOSB0
      ENTRY IOSB2(WVEC,VL,IVIX,IP,NVC,NPOTL,MXLAM,LAM,VLI,NGPT,MXXXXL)
C
C  CHECK FOR CONSISTENT IVLFL
      IF ((ITYP.EQ.2 .AND. IVLFL.LE.0) .OR.
     1    (ITYP.NE.2 .AND. IVLFL.NE.0)) THEN
        WRITE(6,690) IVLFL,ITYP
  690   FORMAT(/'  IOSBIN (JAN 93).  IVLFL=',I5,
     1          '  INCONSISTENT WITH ITYP=',I5)
        STOP
      ENDIF

      IF (IGOTP.EQ.6100) THEN

        DO 6101 I=1,MXLAM
          IL=LAM(I)/IH0 + 1
 6101     VL(I)=VLI(IP,IL)
C  SET COSANG, FACTOR FOR MXLAM.LE.0 CASE
        COSANG(1)=COSA(IP)
        FACTOR=1.D0
C
C>>SG --------------          NEW CODE      --------------------->>
C>>SG     CHECK FOR NPOTL=1 (LVRTP) OR NPOTL=MXLAM (EXPANDED)
C>>SG     LATTER CASE UNCHANGED FROM VERSION 10 CODE
C>>SG JAN 94: *ALL* ITYPE=2 NOW HAVE IVLFL=1; NPOTL.LE.MXLAM
      ELSEIF (IGOTP.EQ.6200) THEN

C  ZERO IVIX,VL STORAGE
        ITOP=NVC*(NVC+1)*NPOTL/2
        DO 6202 IX=1,ITOP
          IVIX(IX)=0
 6202     VL(IX)=0.D0
        IF (LVRTP) THEN
C
C  UNEXPANDED 'LVRTP' POTENTIAL (BELOW HAS A LOT OF 'DEBUGGING' TEST)
          IF (NPOTL.NE.1) THEN
            WRITE(6,670) NPOTL,MXLAM
  670       FORMAT(/'  IOSB2 (FEB 92) -- ERROR.  LVRTP INCONSISTENT ',
     1             'WITH NPOTL, MXLAM',2I6)
            STOP
          ENDIF
          DO 6203 L=1,MXLAM
            LLL=LAM(3*L-2)
            IL=LLL/IH0+1
C  N.B. WE SHOULD HAVE LLL=0 AND IL=1    *** DEBUGGING ONLY ***
            IF (LLL.NE.0 .OR. IL.NE.1) WRITE(6,672) LLL,IL
  672       FORMAT(/'  IOSB2 (FEB 92) -- ERROR.  LLL.NE.0 .OR IL.NE.1',
     1             2I6)
            IV=LAM(3*L-1)
            IVP=LAM(3*L)
            IVVP=0
            DO 6204 IROW=1,NVC
              NV=LEVV(IROW)
            DO 6204 ICOL=1,IROW
              NVP=LEVV(ICOL)
              IVVP=IVVP+1
              IF (.NOT.((NV.EQ.IV .AND. NVP.EQ.IVP) .OR.
     1                  (NV.EQ.IVP .AND. NVP.EQ.IV))) GOTO 6204

C  IF WE REACH BELOW, THIS ROW/COL CORRESPONDS TO CURRENT 'SYMMETRY'
              IX=(IVVP-1)*NPOTL+LLL+1
C  SINCE NPOTL=1 AND LLL=0, SHOULD HAVE IX=IVVP  *** DEBUGGING ***
              IF (IX.NE.IVVP) WRITE(6,673) IX,IVVP
  673         FORMAT(/'  IOSB2 (FEB 92) -- ERROR.  IX.NE.IVVP FOR ',
     1               'VL,IVIX',2I6)
              IVIX(IX)=L
              VL(IX)=VLI(IP,IL)
 6204       CONTINUE
 6203     CONTINUE

C  SET COSANG, FACTOR FOR VRTP CASE, AND RETURN
          COSANG(1)=COSA(IP)
          FACTOR=1.D0
        ELSE
C
C  CODE BELOW FOR POTENTIAL EXPANDED IN LEGENDRE POLY'S
C  MODIFIED TO USE IV() INDEXING
C
          IF (MXXXXL.GT.NPOTL) THEN
            WRITE(6,*) '  IOSB2. MXXXXL.GT.NPOTL NOT ALLOWED',
     1                 MXXXXL,NPOTL
            STOP
          ENDIF
          DO 6251 L=1,MXLAM
            IL=LAM(3*L-2)/IH0 + 1
C  DEBUGGING ...
            IF (IL.GT.MXXXXL) WRITE(6,*) '  IOSB2. IL.GT.MXXXXL '//
     1                                   'SHOULD NOT OCCUR',IL,MXXXXL
            LV1=LAM(3*L-1)
            LV2=LAM(3*L)
            IVVP=0
            DO 6252 IV=1,NVC
            DO 6252 IVP=1,IV
              IVVP=IVVP+1
              IF ((LEVV(IV).EQ.LV1 .AND. LEVV(IVP).EQ.LV2) .OR.
     1            (LEVV(IV).EQ.LV2 .AND. LEVV(IVP).EQ.LV1)) THEN
                IX=(IVVP-1)*NPOTL+IL
                IVIX(IX)=L
                VL(IX)=VLI(IP,IL)
              ENDIF
 6252       CONTINUE
 6251     CONTINUE
        ENDIF
C
      ELSEIF (IGOTP.EQ.6300) THEN

        IL=0
        DO 6301 L1=IZ,L1MAX,IH0
          L2TOP=L2MAX
          IF (IDENT.GT.0) L2TOP=L1MAX
        DO 6301 L2=IZ,L2TOP,IC0
          LLO=ABS(L1-L2)
          LHI=L1+L2
        DO 6301 LL=LLO,LHI
          IF (LODD(L1+L2,LL)) GOTO 6301
          IL=IL+1
          DO 6302 I=1,MXLAM
            IF ((L1.EQ.LAM(3*I-2)) .AND. (L2.EQ.LAM(3*I-1)) .AND.
     1          (LL.EQ.LAM(3*I  ))) THEN
              VL(I)=VLI(IP,IL)
              IF (LDEBUG) WRITE(6,635) I,L1,L2,LL,IL
  635         FORMAT('  IOSB2.  DEBUG.  I,L1,L2,LL,IL',5I5)
            ENDIF
 6302     CONTINUE
 6301   CONTINUE

C  FOR 'VRTP' CASE NEED TO SET COSANG(), FACTOR =(4*PI)**(3/2)
        FACTOR=(4.D0*PI)*SQRT(4.D0*PI)
C  CALCULATE IX1,IX2,IX3 FROM IP (# OF GAUSS POINT)
        IX3=IP
        IX1=(IX3-1)/(NGP2*NGM)+1
        IX3=IX3-(IX1-1)*(NGP2*NGM)
        IX2=(IX3-1)/NGM+1
        IX3=IX3-(IX2-1)*NGM
        COSANG(1)=COSA(IX1)
        COSANG(2)=COSA(IST2+IX2)
        COSANG(3)=COSA(IST3+IX3)

C<<SG ---------------------------------------    END OF MODIFICATIONS
C
      ELSEIF (IGOTP.EQ.6500) THEN

        IL=0
        DO 6501 L=IZ,LMBDMX
          MTOP=MIN(MUMX,L)
        DO 6501 M=IZ,MTOP,IC0
          IF (IH0.EQ.2 .AND. LODD(L,M)) GOTO 6501
          IL=IL+1
          DO 6502 I=1,MXLAM
            IF (L.EQ.LAM(2*I-1) .AND. M.EQ.LAM(2*I)) VL(I)=VLI(IP,IL)
 6502     CONTINUE
 6501   CONTINUE

C  FOR MXLAM.LE.0 CASE, SET COSANG, FACTOR (SQRT(4*PI) FOR ITYPE=5,6)
        IL=(IP-1)/NGM
        IJ=IP-NGM*IL
        IL=IL+1
        COSANG(1)=COSA(IL)
        COSANG(2)=COSA(NGL+IJ)
        FACTOR=SQRT(4.D0*PI)
      ENDIF
C
C  COMMON RETURN PT -- ALLOW FOR (DEBUGGING) OUTPUT OF COUPLING MATRIX
      IF (LDEBUG) CALL CPLOUT(IVIX,VL,NVC,NPOTL)
      RETURN
C
C========================================================= END OF IOSB2
      ENTRY IXQLF(LM,LMAX,LX,M1,M2,ICDE,INDX,IXQL,NIXQL,NQL)
C
C  N.B. M1.GE.M2 AND M1,M2.GE.0 ARE **ASSUMED** HERE
C  IT IS POSSIBLE TO IMPLEMENT A MORE GENERAL CODE
C  N.B. THIS SHOULD ONLY BE CALLED FOR ITYPE=5,6 / NOT CHECKED HERE
C  RETURN INDX=-1 IF L, M1, OR M2 ARE SYMMETRY FORBIDDEN.
      IF (M1-IC0*(M1/IC0).NE.0) GOTO 7002
      IF (M2-IC0*(M2/IC0).NE.0) GOTO 7002
      IF (IH0.EQ.2 .AND. LODD(LX,M1)) GOTO 7002
      IF (IH0.EQ.2 .AND. LODD(LX,M2)) GOTO 7002

      ICODE=ICDE
      IF (M1.EQ.M2) ICODE=0
      INDX=0
      DO 7001 I=1,NQL
        IF (LX.NE.LM(1,IXQL(1,I))) GOTO 7001
        IF (M1.NE.LM(2,IXQL(1,I))) GOTO 7001
        IF (M2.NE.LM(2,IXQL(2,I))) GOTO 7001
        IF (ICODE.NE.IXQL(3,I)) GOTO 7001
        INDX=I
        RETURN

 7001 CONTINUE
      RETURN

 7002 INDX=-1
      RETURN
C
      END
C=========================================================== END OF IXQLF
