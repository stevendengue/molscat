      SUBROUTINE MDPROP(N,MXLAM,NPOTL,
     1                  Y,U,VL,IV,EINT,CENT,P,
     2                  Y14,Y23,DIAG,W,W2,W3,
     3                  RSTART,RSTOP,NSTEP,DR,NODES,IREC,WAVE,
     4                  ERED,RMLMDA,IPRINT)
C  Copyright (C) 2019 J. M. Hutson & C. R. Le Sueur
C  Distributed under the GNU General Public License, version 3
C
C  ROUTINE ORIGINALLY BY DE Manolopoulos, 1986.
C  ADAPTED TO USE WAVMAT IN THE STANDARD WAY FOR COMPATIBILITY
C  WITH NEW VERSION 16 CAPABILITIES BY JM Hutson AND ML Gonzalez-Martinez,
C  NOV 2006
C
C  COMMENTS ADDED BASED ON DOCUMENT BY ML Gonzalez-Martinez/CR Le Sueur
C
C  11-2016 CR Le Sueur:
C  INCORPORATES CHANGES MADE BY GC McBane (IN HIS ROUTINE DWPROPLT,
C  WRITTEN 24-04-13) IN ORDER TO PROPAGATE SCATTERING WAVEFUNCTIONS.
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C  ROUTINE TO SOLVE THE COUPLED EQUATIONS USING THE
C  IMPROVED LOG DERIVATIVE ALGORITHM OF D. E. MANOLOPOULOS,
C  J CHEM PHYS 85, 6425 (1986). THE DIAGONAL OF THE
C  COUPLING MATRIX EVALUATED AT THE MIDPOINT OF EACH SECTOR
C  IS USED AS A REFERENCE POTENTIAL FOR THE SECTOR.
C
C  THIS SUBROUTINE EXACTLY REPLICATES DAPROP (INCLUDING THE COMMENTS
C  THEREIN), WITH A FEW ADDITIONS THAT ARE REQUIRED TO PROPAGATE THE
C  WAVEFUNCTION IN THE MANNER DESCRIBED IN THORNLEY AND HUTSON,
C  J CHEM PHYS 101 (1994) 5578.  EQUATION 10 OF THAT PAPER IS APPLIED
C  TWICE, ONCE ON EACH HALF SECTOR, TO OBTAIN
C  \PSI(A)=[Y(A)+{\CAL Y}_1(A,C)]^{-1}{\CAL Y}_2(A,C)
C          *[Y(C)+{\CAL Y}_1(C,B)]^{-1}{\CAL Y}_2(C,B)\PSI(B)
C
C  W IS USED TO STORE 1/H[Y(A)+{\CAL Y}_1(A,C)]^{-1} AND
C  W2 IS USED TO STORE
C     H{\CAL Y}_3(C,B)[Y(C)+{\CAL Y}_1(C,B)]^{-1}{\CAL Y}_2(C,B)
C  BUT {\CAL Y}_{2 AND 3} ARE THE SAME AS EACH OTHER AND THE SAME FOR
C  EACH HALF SECTOR, SO W*W2 IS EXACTLY THE EXPRESSION NEEDED.
C
      LOGICAL WAVE
      DIMENSION U(N,N),Y(N,N),Y14(N),Y23(N),DIAG(N)
      DIMENSION P(MXLAM),VL(2),IV(2),EINT(N),CENT(N)
      DIMENSION W(N,N),W2(N,N),W3(N,N)
C  COMMON BLOCK TO DESCRIBE WHICH DRIVER IS USED
      CHARACTER(1) CDRIVE
      COMMON /CNTROL/ CDRIVE

C  COMMON BLOCK FOR INPUT/OUTPUT CHANNEL NUMBERS
      LOGICAL PSIFMT
      COMMON /IOCHAN/ IPSISC,IWAVSC,IPSI,NWCOL,PSIFMT
C
C  COMMON BLOCK FOR CONTROL OF USE OF PROPAGATION SCRATCH FILE
      LOGICAL IREAD,IWRITE
      COMMON /PRPSCR/ ESHIFT,ISCRU,IREAD,IWRITE
C
      NODES=0
C
C  THIS VERSION USES A CONSTANT STEP SIZE THROUGHOUT THE
C  PROPAGATION RANGE, WITH NSTEP STEPS BETWEEN RSTART AND RSTOP.
C
      H=DR/2.D0
      D1=H*H/3.D0
      D2=2.D0*D1
      D4=-D1/16.D0
      HALF=0.5D0*H
      R=RSTART
C
      NSAVE=0
C
C  INITIALISATION OF Y USES WHOLE POTENTIAL, NOT JUST RESIDUAL.
C  CORRECTION FOR THIS WILL BE ADDED LATER
C
C  26-12-18 ADDED THIS CODE BECAUSE U NO LONGER PRESERVED BY YINIT
      IF (IREAD) THEN
        READ(ISCRU) U
        DO 130 I=1,N
  130     U(I,I)=U(I,I)-ESHIFT
      ELSE
        CALL WAVMAT(U,N,R,P,VL,IV,ERED,EINT,CENT,RMLMDA,DIAG,
     1              MXLAM,NPOTL,IPRINT)
        IF (IWRITE) WRITE(ISCRU) U
      ENDIF

      DO 160 J=1,N
      DO 160 I=J,N
        Y(I,J)=H*Y(I,J)+D1*U(I,J)
  160 CONTINUE
C  NOW Y CONTAINS H{\HAT Y}(R_{BEGIN})+H^2/3(U(R_{BEGIN})+W_{REF})
C
C  MAIN LOOP OVER STEPS
C  LINES UP TO LABEL 320 ACCUMULATE
C  HY(C) + Y14 + HQ(C) = 2Y14 + 2HQ(C) - Y23 [HY(A)+Y14+HQ(A)]^-1 Y23
C  WHICH IS NEEDED TO INITIALIZE SECOND HALF-SECTOR
C
      DO 500 KSTEP=1,NSTEP
        IF (IREAD) THEN
          READ(ISCRU) DIAG,U
          DO 180 I=1,N
            DIAG(I)=DIAG(I)-ESHIFT
 180      CONTINUE
        ELSE
C
C  CALCULATE 2HQ(C) = [0.125 I - (1/16) (H^2/3) U(C)]^-1 - 8 I
C  NOTE THAT THE DIAGONAL ELEMENTS OF THE POTENTIAL MATRIX ARE
C  HANDLED IN THE REFERENCE POTENTIAL AND DO NOT APPEAR IN 2HQ(C)
C
          R=R+H
          CALL WAVMAT(U,N,R,P,VL,IV,ERED,EINT,CENT,RMLMDA,DIAG,
     1                MXLAM,NPOTL,IPRINT)
C  U HERE IS U(C)+W_{REF}
          DO 200 J=1,N
          DO 200 I=J,N
            U(I,J)=D4*U(I,J)
 200      CONTINUE
C  NOW U IS -H^2/(3*16)(U(C)+W_{REF})
          DO 220 I=1,N
            U(I,I)=0.125D0
 220      CONTINUE
C  NOW U IS I/8-H^2/(3*16)(U(C))
          CALL SYMINV(U,N,N,KOUNT)
          IF (KOUNT.GT.N) GOTO 900
          NSAVE=NSAVE+KOUNT
          DO 240 I=1,N
            U(I,I)=U(I,I)-8.D0
 240      CONTINUE
C  NOW U IS 8[I-H^2/6*U(C)]^{-1}-8I = 2HQ(C) (SEE EQN 12 OF MANOLOPOULOS
C  PAPER)
          IF (IWRITE) WRITE(ISCRU) DIAG,U
        ENDIF
C
        DO 300 I=1,N
          WREF=DIAG(I)
C  HALF ANGLE FORMULAE ARE USED TO PRODUCE COT/COSEC OR COTH/COSECH
          ARG=HALF*SQRT(ABS(WREF))
          IF (WREF.LT.0.D0) THEN
            TN=TAN(ARG)
            Y14(I)=ARG/TN-ARG*TN
            Y23(I)=ARG/TN+ARG*TN
          ELSE
            TH=TANH(ARG)
            Y14(I)=ARG/TH+ARG*TH
            Y23(I)=ARG/TH-ARG*TH
          ENDIF
          U(I,I)=U(I,I)+2.D0*Y14(I)
C  NOW U CONTAINS 2H{\CAL Y}_4(A,C)
C  BUT NOTE THAT {\CAL Y}_4(A,C)={\CAL Y}_1(C,B)
C
C  NEXT LINE CORRECTS FOR USING THE COMPLETE POTENTIAL MATRIX
C  IN INITIALISATION OF Y AND CALL TO WAVMAT BELOW
          Y14(I)=Y14(I)-D1*DIAG(I)
          Y(I,I)=Y(I,I)+Y14(I)
 300    CONTINUE
C  NOW Y14 CONTAINS (HY1(A,C) = HY4(A,C))-H^2/3*W_REF
C  AND Y CONTAINS H({\HAT Y}(A)+{\CAL Y}_1(A,C))
C
        CALL SYMINV(Y,N,N,KOUNT)
        IF (KOUNT.GT.N) GOTO 900
        NODES=NODES+KOUNT
C
        IF (WAVE) THEN
          DO 310 J=1,N
          DO 310 I=J,N
            W(I,J)=Y(I,J)
 310      CONTINUE
C  W NOW CONTAINS 1/H[Y(A)+{\CAL Y}_1(A,C)]^{-1}
        ENDIF
C
        DO 320 J=1,N
        DO 320 I=J,N
          Y(I,J)=U(I,J)-Y23(I)*Y(I,J)*Y23(J)
 320    CONTINUE
C  NOW Y CONTAINS H{\CAL Y}_1(C,B)+
C     H[{\CAL Y}_4(A,C)
C          -{\CAL Y}_3(A,C)[{\HAT Y}(A)+{\CAL Y}_1(A,C)]^{-1}{\CAL Y}_2(A,C)]
C     =H[{\CAL Y}_1(C,B)+{\HAT Y}(C)]
C
        CALL SYMINV(Y,N,N,KOUNT)
        IF (KOUNT.GT.N) GOTO 900
        NODES=NODES+KOUNT
C
C  CONSTRUCTION OF SCATTERING WAVEFUNCTION IS SLIGHLY DIFFERENT...
        IF (KSTEP.EQ.NSTEP .OR. (WAVE .AND. CDRIVE.EQ.'M')) D2=D1
        IF (IREAD) THEN
          READ(ISCRU) U
          DO 360 I=1,N
            U(I,I)=U(I,I)-D2*ESHIFT
 360      CONTINUE
        ELSE
          R=R+H
          CALL WAVMAT(U,N,R,P,VL,IV,ERED,EINT,CENT,RMLMDA,DIAG,
     1                MXLAM,NPOTL,IPRINT)
          DO 380 J=1,N
          DO 380 I=J,N
            U(I,J)=D2*U(I,J)
 380      CONTINUE
C  NOW U CONTAINS 2H^2/3(U(B)+W_{REF}(C,B))
C  BUT NOTE THAT U(B)+W_{REF}(C,B)=U(A_{NEXT})+W_{REF}(NEXT)
          IF (IWRITE) WRITE(ISCRU) U
        ENDIF
C
        DO 400 J=1,N
        DO 400 I=J,N
          WAV=Y23(I)*Y(I,J)*Y23(J)
          IF (WAVE) W2(I,J)=WAV
C  W2 CONTAINS  H{\CAL Y}_3(C,B)[Y(C)+{\CAL Y}_1(C,B)]^{-1}{\CAL Y}_2(C,B)
C  WHICH EQUALS H{\CAL Y}_2(A,C)[Y(C)+{\CAL Y}_1(C,B)]^{-1}{\CAL Y}_2(C,B)
          Y(I,J)=U(I,J)-WAV
 400    CONTINUE
C  NOW Y CONTAINS
C     H^2/3[U(A_{NEXT}+W_{REF}(NEXT)+U(B)+W_{REF}(C,B)]
C      -H{\CAL Y}_3(C,B)[{\HAT Y}(C)+{\CAL Y}_1(C,B)]^{-1}{\CAL Y}_2(C,B)]
        DO 420 I=1,N
          Y(I,I)=Y(I,I)+Y14(I)
 420    CONTINUE
C  AND NOW Y CONTAINS
C  H^2/3[U(B)+U(A_{NEXT})+W_{REF}(NEXT)]
C  +H[Y_4(C,B)-{\CAL Y}_3(A,C)[{\HAT Y}(A)+{\CAL Y}_1(A,C)]^{-1}{\CAL Y}_2(A,C)]
C  = H[{\HAT Y}(A_{NEXT})+H/3(U(A_{NEXT})+W_{REF}(NEXT))]
C
        IF (WAVE) THEN
          DO 440 J=1,N
          DO 440 I=J,N
            W(J,I)=W(I,J)
            W2(J,I)=W2(I,J)
 440      CONTINUE
          CALL DGEMUL(W,N,'N',W2,N,'N',W3,N,N,N,N)
C  W3 NOW CONTAINS THE MATRIX WHICH WILL PROPAGATE THE WAVEFUNCTION BACK
C  FROM B TO A AS GIVEN BY EQN 10 OF THE THORNLEY PAPER
C
          WRITE(IWAVSC,REC=IREC,IOSTAT=IERR,ERR=910) R-2D0*H,W3
          IREC=IREC+1
        ENDIF
C  CONSTRUCTION OF SCATTERING WAVEFUNCTION IS SLIGHLY DIFFERENT...
        IF (KSTEP.NE.NSTEP .AND. (WAVE .AND. CDRIVE.EQ.'M')) THEN
          DO J = 1, N
            DO I = J, N
              Y(I,J) = Y(I,J) + U(I,J)
            ENDDO
          ENDDO
        ENDIF
C  IN THE LAST ROUND OF THE PROPAGATION LOOP U=H^2/3(U(B)+W_{REF}), SO
C  Y=H{\HAT Y}(R_{END})
C
 500  CONTINUE
C
C  END OF LOOP OVER STEPS
C
      HI=1.D0/H
      DO 600 J=1,N
      DO 600 I=J,N
        Y(I,J)=HI*Y(I,J)
        Y(J,I)=Y(I,J)
 600  CONTINUE
C
      IF (IWRITE) WRITE(ISCRU) NSAVE
      IF (IREAD)  READ (ISCRU) NSAVE
      NODES=NODES-NSAVE
      RETURN
C
 900  WRITE(6,1000) KSTEP
      STOP
 910  WRITE(6,1010) IREC,IERR
      STOP
1000  FORMAT(/' ***** MDPROP: MATRIX INVERSION ERROR AT STEP K = ',I6,
     &       '.  RUN HALTED.')
1010  FORMAT(/' ***** MDPROP: ERROR WRITING TO WAVEFUNCTION FILE',2I6)
      END
