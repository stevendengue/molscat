      SUBROUTINE ASROT(J,EVEC,H,EVAL,NH)
C  Copyright (C) 2019 J. M. Hutson & C. R. Le Sueur
C  Distributed under the GNU General Public License, version 3
      USE basis_data
C  THIS SUBROUTINE SETS UP THE ASYMMETRIC ROTOR FUNCTIONS:
C  H_{J,K;J,K}=ALPHA*J*(J+1)+BETA*K**2
C              -DJ*J**2*(J+1)**2-DJK*J*(J+1)*K**2-DK*K**4
C  AND
C  H_{J,K;J,K+/-2}=GAMMA*SQRT[(J*(J+1)-(K+2)*(K+1))*(J*(J+1)-K*(K+1))]
C
C  ALSO SOME EXTRA TERMS IF THE ROTOR IS SPHERICAL.
C
C  H IS THEN DIAGONALISED TO FIND EIGENVALUES AND EIGENVECTORS
C
C  ON INPUT: J IS THE PRINCIPAL ORBITAL QUANTUM NUMBER
C            NH IS THE DIMENSION OF THE MATRICES
C  DURING:   H CONTAINS THE HAMILTONIAN MATRIX
C  ON EXIT:  EVEC CONTAINS THE EIGENVECTORS
C            EVAL CONTAINS THE EIGENVALUES
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL TD,EVLIST
      DIMENSION EVEC(NH,NH),H(NH,NH),EVAL(NH)
      DATA EVLIST/.FALSE./
C
C  DO THE ACTUAL CALCULATION FOR A GIVEN J
C
      ALPHA=0.5D0*(A(1)+B(1))
      BETA=C(1)-ALPHA
      GAMMA1=0.25D0*(A(1)-B(1))
      TD = A(1).EQ.B(1) .AND. B(1).EQ.C(1)
C
      JJ=J*(J+1)
      NK=J+J+1
      DO 100 IR=1,NK
        KR=IR-J-1
      DO 100 IC=1,IR
        KC=IC-J-1
        TERM=0.D0
        IF (KR.EQ.KC) THEN
          TERM=ALPHA*DBLE(JJ)+BETA*DBLE(KC*KC)
     1           -DJ*DBLE(JJ*JJ)-DJK*DBLE(JJ*KC*KC)-DK*KC**4
          IF (TD) TERM=TERM+0.5D0*DT*DBLE(-3*JJ*(JJ-2)+30*(JJ-2)*KC*KC
     1                                    -35*KC*KC*(KC*KC-1))
        ELSEIF (KR-KC.EQ.2) THEN
          KMID=(KR+KC)/2
          TERM=GAMMA1*SQRT(DBLE((JJ-KR*KMID)*(JJ-KC*KMID)))
        ELSEIF (KR-KC.EQ.4 .AND. TD) THEN
          TERM=1.25D0*DT*SQRT(DBLE((JJ-KC*(KC+1))*(JJ-(KC+1)*(KC+2)))
     1                       *DBLE((JJ-(KC+2)*(KC+3))*
     2                             (JJ-(KC+3)*(KC+4))))
        ENDIF
        H(IR,IC)=TERM
  100 CONTINUE

      IFAIL=0
      CALL DIAGVC(H,NH,NK,EVAL,EVEC)
C
      WRITE(6,603) J,(EVAL(IC),IC=1,NK)
  603 FORMAT(/'  CALCULATED ROTATIONAL LEVELS FOR J =',I3,' ARE'
     1       /(8X,9F12.5))
C
C  IF THE RAW EIGENVECTORS ARE DEGENERATE, THEY MAY NOT HAVE
C  PROPER SYMMETRY. SEEK DEGENERATE SETS AND FORCE SYMMETRY ON THEM.
C  ALSO PRINT SPHERICAL TOP SYMMETRY LABELS IF ANY DEGENERATE SETS
C  ARE PRESENT.
C  A, B AND C ARE PASSED ONLY TO CORRECT ORDER OF NEAR-DEGEN LEVELS
C
      CALL DMSYM(J,NK,EVAL,EVEC,H,A(1),B(1),C(1))
C
      IF (EVLIST) THEN
        WRITE(6,604)
  604   FORMAT(/'  EIGENVECTOR COEFFICIENTS:')
        DO 200 IR=1,NK
          KR=IR-J-1
          WRITE(6,605) J,KR,(EVEC(IR,IC),IC=1,NK)
  605     FORMAT(2I4,9F12.8/(8X,9F12.8))
  200   CONTINUE
      ENDIF
      RETURN
      END
