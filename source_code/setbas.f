      SUBROUTINE SETBAS
C  Copyright (C) 2019 J. M. Hutson & C. R. Le Sueur
C  Distributed under the GNU General Public License, version 3
      USE basis_data
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
C
C  SUBROUTINE TO GENERATE LEVEL LISTS AND MONOMER ENERGIES
C  FOR ITYPE = 1, 2, 3, 5
C
C  CHANGED JUN 2008 TO HANDLE NH3 SYMMETRY AND INVERSION SPLITTINGS:
C        ISYM(4) = 0 FOR BOSONS, 1 FOR FERMIONS
C        ISYM(3) = 1 TO RESTRICT K TO 1, 2, 4, 5, 7...
C        ISYM(3) = 3 TO RESTRICT K TO 0, 3, 6, 9, 12...
C        TERM FOR INVERSION SYMMETRY ADDED TO MONOMER ENERGIES
C        WITH ROTI(11) USED FOR TUNNELLING SPLITTING
C        NOTE THAT JSTATE(2*NSTATE+1)=1 IS
C                      |+> TUNNELLING STATE FOR NH3
C                      |-> TUNNELLING STATE FOR ND3
C
      LOGICAL LEVIN,EIN
      INTEGER NSTATE,JSTATE(1)
C --------------------------------------------------------- SETBAS ABOVE
      ENTRY SET1(LEVIN,EIN,NSTATE,JSTATE,IPRINT)

      IF (LEVIN) GOTO 1902

      IF (IPRINT.GE.1) WRITE(6,601) JMIN,JMAX,JSTEP
  601 FORMAT(/'  MOLECULAR QUANTUM NUMBERS OBTAINED FROM JMIN =',
     1       I3,',  JMAX =',I3,',  AND JSTEP =',I2)
      JMIN=MAX(0,JMIN)
      JMAX=MAX(JMIN,JMAX)
      NLEVEL=0
      DO 1012 I=JMIN,JMAX,JSTEP
        NLEVEL=NLEVEL+1
 1012   JLEVEL(NLEVEL)=I
      GOTO 1802

 1902 IF (IPRINT.GE.1) WRITE(6,632) NLEVEL
  632 FORMAT(/'  MOLECULAR QUANTUM NUMBERS TAKEN FROM JLEVEL ',
     1       'INPUT.  NLEVEL =',I3)

 1802 JMIN=JLEVEL(1)
      JMAX=JMIN
      NSTATE=NLEVEL
      DO 1912 I=1,NLEVEL
        JI=JLEVEL(I)
        IF (JI.LT.JMIN) JMIN=JI
        IF (JI.GT.JMAX) JMAX=JI
        JSTATE(NSTATE+I)=I
 1912   JSTATE(     I)=JI
      IF (EIN) GOTO 7002

      IF (IPRINT.GE.1) THEN
        WRITE(6,633) BE(1)
  633   FORMAT(/'  ENERGY LEVELS OBTAINED FROM B(E) =',F12.6)
        IF (ALPHAE(1).NE.0.D0) WRITE(6,634) ALPHAE(1)
  634   FORMAT('  WITH B(V) CALCULATED FROM B(E) AND ALPHA(E) =',F10.6)
        IF (DE(1).NE.0.D0) WRITE(6,635) DE(1)
  635   FORMAT('  ENERGY LEVELS CORRECTED FOR D(E) =',F12.8)
      ENDIF

      DO 1702 I=1,NSTATE
        JI=JSTATE(I)
        FJ=JI*(JI+1)
 1702   ELEVEL(I)=(BE(1)-ALPHAE(1)/2.D0)*FJ - DE(1)*FJ*FJ
      RETURN

 7002 IF (IPRINT.GE.1) WRITE(6,631)
  631 FORMAT(/'  ENERGY LEVELS TAKEN FROM ELEVEL INPUT')
      RETURN
C  * * * * * * * * * * * * * * * * * * * * * * * END OF SET1 AND SETBAS
C
      ENTRY SET2(LEVIN,EIN,NSTATE,JSTATE,IPRINT)

      IF (LEVIN) GOTO 2902

      WRITE(6,201)
  201 FORMAT(/'  * * * ERROR.  FOR ITYPE=2 &BASIS MUST SPECIFY NLEVEL ',
     1       'AND J, V PAIRS')
      STOP

 2902 IF (IPRINT.GE.1) WRITE(6,632) NLEVEL
      JMIN=JLEVEL(1)
      JMAX=JMIN
      NSTATE=NLEVEL
      DO 2912 I=1,NLEVEL
        JI=JLEVEL(2*I-1)
        JVI=JLEVEL(2*I)
        JMIN=MIN(JMIN,JI)
        JMAX=MAX(JMAX,JI)
        JSTATE(2*NSTATE+I)=I
        JSTATE(  NSTATE+I)=JVI
 2912   JSTATE(       I)=JI
      IF (EIN) GOTO 2002

      IF (IPRINT.GE.1) THEN
        WRITE(6,202) WE(1),BE(1)
  202   FORMAT(/'  ENERGY LEVELS OBTAINED FROM W(E) =',F10.4,
     1         ',   B(E) =',F10.4/9X,'WITH ZERO ENERGY AT V=0, J=0')
        IF (WEXE(1).NE.0.D0) WRITE(6,636) WEXE(1)
  636   FORMAT('  CORRECTED FOR W(E)X(E) =',F10.4)
        IF (ALPHAE(1).NE.0.D0) WRITE(6,634) ALPHAE(1)
        IF (DE(1).NE.0.D0) WRITE(6,635) DE(1)
      ENDIF

      DO 2702 I=1,NSTATE
        JI =JSTATE(     I)
        JVI=JSTATE(NSTATE+I)
        FJ=JI*(JI+1)
        FV=JVI
 2702   ELEVEL(I)=WE(1)*FV-WEXE(1)*FV*(FV+1.D0)+(BE(1)-ALPHAE(1)
     1             *(FV+0.5D0))*FJ - DE(1)*FJ*FJ
      RETURN

 2002 IF (IPRINT.GE.1) WRITE(6,631)
      RETURN
C     * * * * * * * * * * * * * * * * * * * * * * * * * * * END OF SET2
C
      ENTRY SET3(LEVIN,EIN,NSTATE,JSTATE,IPRINT)

      IF (IDENT.EQ.0) GOTO 1993

      J2MIN=J1MIN
      J2MAX=J1MAX
      J2STEP=J1STEP
      IF (BE(2).EQ.0.D0) BE(2)=BE(1)
      IF (ALPHAE(2).EQ.0.D0) ALPHAE(2)=ALPHAE(1)
      IF (DE(2).EQ.0.D0) DE(2)=DE(1)

 1993 IF (LEVIN) GOTO 5303

      IF (IPRINT.GE.1)
     1  WRITE(6,310) J1MIN,J1MAX,J1STEP,J2MIN,J2MAX,J2STEP
  310 FORMAT(/'  QUANTUM NUMBERS OF ROTOR 1 OBTAINED FROM J1MIN =',I3,
     1       ', J1MAX =',I3,', J1STEP =',I2//
     2       '  QUANTUM NUMBERS OF ROTOR 2 OBTAINED FROM J2MIN =',I3,
     3       ', J2MAX =',I3,', J2STEP =',I2)
      J1MIN=MAX(J1MIN,0)
      J1MAX=MAX(J1MIN,J1MAX)
      J1STEP=MAX(J1STEP,1)
      J2MIN=MAX(J2MIN,0)
      J2MAX=MAX(J2MAX,J2MIN)
      J2STEP=MAX(J2STEP,1)
      NLEVEL=0
      I=1
      DO 1013 JJ1=J1MIN,J1MAX,J1STEP
      DO 1013 JJ2=J2MIN,J2MAX,J2STEP
        IF (IDENT.NE.0 .AND. JJ1.GT.JJ2) GOTO 1013
        JLEVEL(I)=JJ1
        JLEVEL(I+1)=JJ2
        I=I+2
        NLEVEL=NLEVEL+1
 1013 CONTINUE
      GOTO 1023

 5303 IF (IPRINT.GE.1) WRITE(6,333) NLEVEL
  333 FORMAT(/'  PAIR LEVEL QUANTUM NUMBERS TAKEN FROM ',
     1       'JLEVEL INPUT.  NLEVEL =',I3)

C  PROCESS JLEVEL TO JSTATE FORMAT.  JMIN(JMAX) ARE LOW(HIGH) OF J12.
 1023 JMIN=ABS(JLEVEL(1)-JLEVEL(2))
      JMAX=JMIN
C  EXPAND J1, J2  TO  J1, J2, J12
      NSTATE=0
      DO 1033 I=1,NLEVEL
        JJ1=JLEVEL(2*I-1)
        JJ2=JLEVEL(2*I)
        JK=ABS(JJ1-JJ2)
        JTOP=JJ1+JJ2
      DO 1033 J12=JK,JTOP
        JSTATE(4*NSTATE+1)=JJ1
        JSTATE(4*NSTATE+2)=JJ2
        JSTATE(4*NSTATE+3)=J12
        JSTATE(4*NSTATE+4)=I
        NSTATE=NSTATE+1
        JMIN=MIN(JMIN,J12)
        JMAX=MAX(JMAX,J12)
 1033 CONTINUE

C  REARRANGE TO PROPER ORDER IN HIGHER JSTATE STORAGE
      JK=4*NSTATE
      DO 1043 I=1,NSTATE
        JSTATE(JK       +I)=JSTATE(4*I-3)
        JSTATE(JK+  NSTATE+I)=JSTATE(4*I-2)
        JSTATE(JK+2*NSTATE+I)=JSTATE(4*I-1)
 1043   JSTATE(JK+3*NSTATE+I)=JSTATE(4*I)

C  COPY BACK . . .
      DO 1053 I=1,JK
 1053   JSTATE(I)=JSTATE(JK+I)

C  SET ELEVEL VALUES
      IF (EIN) GOTO 1073

      IF (IPRINT.GE.1) THEN
        WRITE(6,313) 1,BE(1)
        IF (ALPHAE(1).NE.0.D0) WRITE(6,634) ALPHAE(1)
        IF (DE(1).NE.0.D0) WRITE(6,635) DE(1)
        WRITE(6,313) 2,BE(2)
  313   FORMAT(/'  ENERGY LEVELS OF ROTOR',I2,' OBTAINED FROM B(E) =',
     1          F12.6)
        IF (ALPHAE(2).NE.0.D0) WRITE(6,634) ALPHAE(2)
        IF (DE(2).NE.0.D0) WRITE(6,635) DE(2)
      ENDIF

      DO 1063 I=1,NLEVEL
        FJ=DBLE(JLEVEL(2*I-1))
        GJ=DBLE(JLEVEL(2*I))
        FJ=FJ*(FJ+1.D0)
        GJ=GJ*(GJ+1.D0)
 1063   ELEVEL(I)=(BE(1)-ALPHAE(1)*0.5D0)*FJ - DE(1)*FJ*FJ
     1         +  (BE(2)-ALPHAE(2)*0.5D0)*GJ - DE(2)*GJ*GJ
      RETURN

 1073 IF (IPRINT.GE.1) WRITE(6,312)
  312 FORMAT(/'  PAIR LEVEL ENERGIES TAKEN FROM ELEVEL INPUT')
      RETURN
C  * * * * * * * * * * * * * * * * * * * * * * * * * * * END OF SET3
C
      ENTRY SET5(LEVIN,EIN,NSTATE,JSTATE,IPRINT)
C
C  N.B. WE USE D(L,K,M) WITH EDMONDS CONVENTIONS OF PHASE FOR THE
C  BASIS FUNCTIONS.  THIS IS SAME AS THADDEUS IN H2CO PAPER.
C
      IF (LEVIN) GOTO 5305

      NLEVEL=0
      I=0
      IF (IPRINT.GE.1) THEN
        WRITE(6,601) JMIN,JMAX,JSTEP
        IF (KMAX.LT.0) WRITE(6,602) -KMAX
  602   FORMAT(10X,'  ABS(K) FOR ALL LEVELS SET TO',I4)
        IF (KMAX.GE.0 .AND. KMAX.LT.JMAX) WRITE(6,603) KMAX
  603   FORMAT(10X,'  ONLY LEVELS WITH K <=',I3,' INCLUDED IN BASIS')
      ENDIF
      JMIN=MAX(JMIN,0)
      JMAX=MAX(JMIN,JMAX)

      DO 5315 JJ=JMIN,JMAX
      DO 5315 KK=0,JJ
        IF (KMAX.LT.0 .AND. KK+KMAX.NE.0) GOTO 5315
        IF (KMAX.GE.0 .AND. KK.GT.KMAX)   GOTO 5315
        IF (ISYM(3).EQ.1 .AND. MOD(KK,3).EQ.0) GOTO 5315
        IF (ISYM(3).EQ.3 .AND. MOD(KK,3).NE.0) GOTO 5315
        IF (JSTEP.GT.1 .AND. MOD(JJ+KK,JSTEP).NE.MOD(JMIN,JSTEP))
     1      GOTO 5314

        JLEVEL(I+1)=JJ
        JLEVEL(I+2)=KK
        JLEVEL(I+3)=2
        I=I+3
        NLEVEL=NLEVEL+1
 5314   IF (KK.EQ.0) GOTO 5315
        IF (JSTEP.GT.1 .AND. MOD(JJ+KK+1,JSTEP).NE.JMIN) GOTO 5315
        JLEVEL(I+1)=JJ
        JLEVEL(I+2)=KK
        JLEVEL(I+3)=1
        I=I+3
        NLEVEL=NLEVEL+1
 5315 CONTINUE
      GOTO 5355

 5305 IF (IPRINT.GE.1) WRITE(6,632) NLEVEL
 5355 JMIN=JLEVEL(1)
      JMAX=JMIN
      NSTATE=NLEVEL
      DO 5325 I=1,NLEVEL
        JSTATE(         I)=JLEVEL(3*I-2)
        JSTATE(  NSTATE+I)=JLEVEL(3*I-1)
        JSTATE(2*NSTATE+I)=JLEVEL(3*I)
        JSTATE(3*NSTATE+I)=I
        JJ=JSTATE(I)
        IF (JJ.LT.JMIN) JMIN=JJ
        IF (JJ.GT.JMAX) JMAX=JJ
 5325 CONTINUE
      IF (EIN) GOTO 5335

      IF (IPRINT.GE.1) THEN
        WRITE(6,604) A(1),B(1),C(1)
  604   FORMAT(/'  ENERGY LEVELS OBTAINED FROM ZEROTH-ORDER ',
     1         'NEAR-SYMMETRIC TOP FORMULA'/
     2         10X,'ROTATIONAL CONSTANTS ARE A, B, C (CM-1) =',3F12.4/
     3         10X,'N.B. THESE MOMENTS MUST CORRESPOND RESPECTIVELY ',
     4         'TO X, Y, Z COORDINATES USED TO DEFINE INTERACTION ',
     5         'POTENTIAL')
        IF (ROTI(10).NE.0.D0)
     1    WRITE(6,605) ROTI(10),ROTI(11),ROTI(12),(-1)**ISYM(4)
  605   FORMAT(/'  TUNNELLING SPLITTING                   =',F12.7,
     1         /'  WITH CENTRIFUGAL TERMS FOR J(J+1)-K**2 =',F12.7,
     2         /'  AND                    FOR K**2        =',F12.7,
     3         /'  WITH K=0 STATE ALLOWED FOR STATE OF |',I2,
     4          '> SYMMETRY')
        IF (ISYM(3).EQ.1) THEN
          WRITE(6,606)
  606     FORMAT('  3-FOLD SYMMETRY: ONLY E STATES INCLUDED')
        ELSEIF (ISYM(3).EQ.3) THEN
          WRITE(6,607)
  607     FORMAT('  3-FOLD SYMMETRY: ONLY A STATES INCLUDED')
        ENDIF
      ENDIF

      DO 5345 I=1,NSTATE
        JJ=JSTATE(I)
        KK=ABS(JSTATE(I+NSTATE))
        SS=(-1.D0)**JSTATE(I+2*NSTATE)
        HKK=(A(1)+B(1))*DBLE(JJ*(JJ+1)-KK*KK)/2.D0+ C(1)*DBLE(KK*KK)
        IF (MOD(JSTATE(I)+JSTATE(I+2*NSTATE),2).NE.0)
     1    HKK=HKK+(-1.D0)**ISYM(4)*
     1              (ROTI(10)-ROTI(11)*(JJ*(JJ+1)-KK*KK)-ROTI(12)*KK*KK)
C  OFF-DIAGONAL CONTRIBUTION ONLY FROM K=1/K=-1 CASE. . .
        IF (KK.EQ.1) HKK=HKK+ SS * (A(1)-B(1)) *
     1                        SQRT(DBLE((JJ*(JJ+1)-KK*(KK-1))*
     1                                  (JJ*(JJ+1)-(KK-1)*(KK-2))))/4.D0
 5345   ELEVEL(I)=HKK
      RETURN

 5335 IF (IPRINT.GE.1) WRITE(6,631)
      RETURN
      END
C  * * * * * * * * * * * * * * * * * * * * * * * * * * * END OF SET5
