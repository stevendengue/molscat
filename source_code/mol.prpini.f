      SUBROUTINE PRPINI(RMIN,RMAX,DR,RVFAC,IRMSET,IRXSET,
     1                  EPS,EPL,DRSEG,EPSEG,IPRSEG,STPSEG,TOLSEG,
     2                  POWSEG,DIRNAM,POWRX,TOLHI)
C  Copyright (C) 2019 J. M. Hutson & C. R. Le Sueur
C  Distributed under the GNU General Public License, version 3

C  CR Le Sueur Dec 2018
      IMPLICIT NONE

C  THIS ROUTINE SETS UP THE NUMBER OF SEGMENTS FOR A SCATTERING
C  CALCULATION AND ALSO INITIAL (OR INDICATIVE) VALUES IN IPROPS,
C  IPROPL, DRS, DRL, STEPS, STEPL, TOLHIS, TOLHIL, AS WELL AS RMIN,
C  RMAX, AND RMID

      INTEGER, PARAMETER              :: MXSEG=2

      DOUBLE PRECISION, INTENT(IN)    :: RMIN,RMAX,DR,RVFAC,EPS,EPL,
     1                                   POWRX,TOLHI
      INTEGER,          INTENT(IN)    :: IRMSET,IRXSET
      DOUBLE PRECISION, INTENT(OUT)   :: DRSEG(MXSEG),EPSEG(MXSEG),
     1                                   STPSEG(MXSEG),TOLSEG(MXSEG),
     2                                   POWSEG(MXSEG)
      INTEGER,          INTENT(OUT)   :: IPRSEG(MXSEG)
      CHARACTER(3),     INTENT(OUT)   :: DIRNAM(MXSEG)
C
C  COMMON BLOCK FOR CONTROL OF PROPAGATION SEGMENTS
      COMMON /RADIAL/ RMNINT,RMXINT,RMID,RMATCH,DRS,DRL,STEPS,STEPL,
     1                POWRS,POWRL,TOLHIS,TOLHIL,CAYS,CAYL,UNSET,
     2                IPROPS,IPROPL,NSEG
      DOUBLE PRECISION RMNINT,RMXINT,RMID,RMATCH,
     1                 STEPS,STEPL,TOLHIS,TOLHIL,DRS,DRL,CAYS,CAYL,
     1                 POWRS,POWRL,UNSET
      INTEGER          IPROPS,IPROPL,NSEG

C  EXTRA COMMON BLOCK FOR VIVS
      COMMON /LDVVCM/ XSQMAX,ALPHA1,ALPHA2,IALPHA,IALFP,IV,IVP,IVPP,
     1                ISHIFT,IDIAG,IPERT,ISYM
      DOUBLE PRECISION XSQMAX,ALPHA1,ALPHA2
      INTEGER IALPHA
      LOGICAL IALFP,IV,IVP,IVPP,ISHIFT,IDIAG,IPERT,ISYM

C  SET UP NUMBER OF SEGMENTS
      NSEG=1
      IF (RVFAC.GT.0.D0) NSEG=2
      IF (RMIN.LT.RMID .AND. RMID.LT.RMAX) NSEG=2
      IF (RMIN.LT.RMID .AND. IRXSET.GT.0) NSEG=2
      IF (IRMSET.GT.0 .AND. RMID.LT.RMAX .AND. RMID.NE.UNSET) NSEG=2
      IF (IPROPL.NE.0 .AND. RMID.NE.UNSET) NSEG=2

      IF (NSEG.EQ.1) IPROPL=0

C  SET DEFAULTS (IF NEITHER SET: SR=6, LR=9)
      IF (NSEG.EQ.2 .AND. IPROPS.EQ.0 .AND. IPROPL.EQ.0) IPROPL=9
      IF (IPROPS.EQ.0) IPROPS=6
C  IF 2 SEGMENTS AND LR NOT SET: LR=SR
      IF (NSEG.EQ.2 .AND. IPROPL.EQ.0) IPROPL=IPROPS

      IF (IPROPS.LT.-1 .OR. IPROPS.EQ.0 .OR. IPROPS.EQ.1 .OR.
     1    IPROPS.GT.9) THEN
        WRITE(6,101) 'IPROPS',IPROPS
  101   FORMAT(/'  *** ERROR: ',A6,' = ',I2,' IS NOT A KNOWN VALUE')
        STOP
      ENDIF

C  LONG RANGE PROPAGATOR MUST BE ONE OF -1 OR 2-9 OR 0 (I.E. UNSET)
      IF (NSEG.EQ.2 .AND. (IPROPL.LT.-1 .OR. IPROPL.EQ.1 .OR.
     1                     IPROPL.GT.9)) THEN
        WRITE(6,102) IPROPL
  102   FORMAT(/'  *** WARNING: IPROPL = ',I2,' IS NOT A KNOWN VALUE'/
     1          '               SETTING IPROPL = IPROPS')
        IPROPL=IPROPS
      ENDIF


C  SET UP DEFAULTS FOR VIVS
      IF (IPROPL.EQ.4) THEN
        IF (IDIAG) THEN
          IV=.TRUE.
          IVP=.TRUE.
          IVPP=.TRUE.
          ISHIFT=.TRUE.
          IPERT=.TRUE.
        ENDIF
      ENDIF

C  SET UP TOLHI
      IF (TOLHIS.EQ.UNSET) TOLHIS=TOLHI
      IF (TOLHIL.EQ.UNSET) TOLHIL=TOLHIS

C  ONLY VIVS AND AIRY CAN MAKE USE OF TOLHI AT THE MOMENT
C  (AND WKB USES IT FOR A DIFFERENT PURPOSE)
      IF (IPROPS.EQ.9) THEN
        IF (TOLHIS.LT.0.D0 .OR. TOLHIS.GE.1.D0) THEN
          WRITE(6,*) ' *** THIS VALUE FOR TOLHIS IS INVALID: ',TOLHIS
          STOP
        ENDIF
      ENDIF
      IF (IPROPS.NE.4 .AND. IPROPS.NE.9 .AND. IPROPS.NE.-1) TOLHIS=0.D0

      IF (IPROPL.EQ.9) THEN
        IF (TOLHIL.LT.0.D0 .OR. TOLHIL.GE.1.D0) THEN
          WRITE(6,*) ' *** THIS VALUE FOR TOLHIL IS INVALID: ',TOLHIL
          STOP
        ENDIF
      ENDIF
      IF (IPROPL.NE.4 .AND. IPROPL.NE.9) TOLHIL=0.D0

C  SET UP POWR
      IF (IPROPL.EQ.9) THEN
        IF (TOLHIL.EQ.0.D0) THEN
          IF (POWRL.EQ.UNSET) POWRL=4.D0/3.D0
        ELSE
          IF (POWRL.EQ.UNSET) POWRL=POWRX
        ENDIF
      ELSEIF (IPROPL.EQ.3) THEN
        IF (POWRL.EQ.UNSET) POWRL=4.D0/3.D0
      ELSE
        POWRL=0.D0
      ENDIF

      IF (IPROPS.EQ.9 .AND. TOLHIS.EQ.0.D0) THEN
        IF (POWRS.EQ.UNSET) POWRS=0.D0
      ELSE
        POWRS=0.D0
      ENDIF

C  SET UP STEP/DR
      IF (STEPS.LE.0.D0 .AND. DRS.EQ.UNSET) THEN
        DRS=DR
        STEPS=-10.D0
      ELSEIF (STEPS.LE.0.D0) THEN
        STEPS=-10.D0
      ELSEIF (STEPS.GT.0.D0 .AND. DRS.NE.UNSET) THEN
        STEPS=-10.D0
      ENDIF

      IF (STEPL.EQ.UNSET .AND. DRL.EQ.UNSET) THEN
        STEPL=STEPS
C  LEAVE DRL UNSET SO THAT IT INHERITS SHORT-RANGE VALUE
      ELSEIF (STEPL.NE.UNSET .AND. DRL.NE.UNSET) THEN
        STEPL=-10.D0
      ENDIF

      DIRNAM(1)='OUT'
      DIRNAM(2)='OUT'
      DRSEG(1)=DRS
      DRSEG(2)=DRL
      EPSEG(1)=EPS
      EPSEG(2)=EPL
      IPRSEG(1)=IPROPS
      IPRSEG(2)=IPROPL
      STPSEG(1)=STEPS
      STPSEG(2)=STEPL
      TOLSEG(1)=TOLHIS
      TOLSEG(2)=TOLHIL
      POWSEG(1)=POWRS
      POWSEG(2)=POWRL

      RETURN
      END
