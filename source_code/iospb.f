      SUBROUTINE IOSPB(ENERGY,QL,QLOLD,NL,LINE,
     1                 LTYPE,ITYPE,NVC,LM,IXQL,
     2                 LMAX,NIXQL,NQL)
C  Copyright (C) 2019 J. M. Hutson & C. R. Le Sueur
C  Distributed under the GNU General Public License, version 3
      USE basis_data, ONLY: JLEVEL, NLEVEL
C
C  MODIFIED DEC 86 FOR COMPATBILITY WITH OFF-DIAGONAL PRBR CODE
C
C  N.B. DIMENSIONS ON QL,QLOLD SHOULD HAVE NVC REMOVED.
C  ALSO, LM APPEARS NOT TO BE USED IN THIS ROUTINE
C  AUG 86 IXQLF ADD LM,LMAX ARGUMENTS
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      LOGICAL EXISTS
C  TO CONTROL PRINTING OF 'OPTIONAL' OUTPUT
      LOGICAL LPRT
C  FOR UPWARD COMPATIBILITY WITH OLD (DIAG ONLY) INPUT
      LOGICAL LDIAG
C  ALTERED TO USE ARRAY SIZES FROM MODULE sizes ON 23-06-17 BY CRLS
C
C  DEC 86 LINE() CHANGED TO 1-DIMENSIONAL ARRAY CONTROLED BY NPL
      DIMENSION QL(NVC,NVC,NQL),QLOLD(NVC,NVC),LINE(2*NL),LTYPE(NL)
      DIMENSION LM(3,LMAX),IXQL(NIXQL,NQL)
C  QLOLD IS QL(0) IN THE NOTATION OF IOS PAPER 1.
C
      DATA IZERO/0/, IONE/1/, TOL/1.D-5/
      DATA LPRT/.FALSE./
      DATA LDIAG/.FALSE./
C
C  STATEMENT FUNCTION DEFINITIONS. . .
      XNORM(EPSA)=1.D0/(1.D0+ABS(EPSA))
      FUNC(JA)=DBLE(2*JA+1)
      EXISTS(I)= I.GT.0 .AND. I.LE.NLEVEL
C
      IF (NL.LE.0) RETURN

C  NPL IS NO. OF INDICES IN LINE PER CROSS SECTION
      NPL=4
      IF (LDIAG) NPL=2
      WRITE(6,600) NL,ENERGY
  600 FORMAT(///' PRESSURE BROADENING CROSS SECTIONS REQUESTED FOR',
     &       I4,'  SPECTRAL LINES.'//' ENERGY =',F12.4,' CM-1.')
      IF (ITYPE.EQ.1 .AND. NVC.EQ.1) GOTO 1111

      IF (ITYPE.EQ.5 .AND. NVC.EQ.1) GOTO 5000

      WRITE(6,695) ITYPE,NVC
  695 FORMAT(/' * * * NOTE.  IOSPB NOT SUPPORTED FOR ITYPE, NVC =',2I6)
      NL=0
      RETURN

 1111 QTOT=0.0D0
      IF (LMAX.LT.2) GOTO 1001

      DO 1000 IL=2,LMAX
 1000   QTOT=QTOT+QL(1,1,IL)
 1001 LM1=LMAX-1
      WRITE(6,651) LM1,QTOT,QLOLD(1,1)
  651 FORMAT(/' SUM OVER Q(L), L = 1,',I3,'  =',F12.4,'   QLOLD(0) =',
     &       F12.4)
C
C  SAVE QL(1,1,1) AND REPLACE WITH QLOLD(1,1)
      Q0SAVE=QL(1,1,1)
      QL(1,1,1)=QLOLD(1,1)
C  LOOP OVER LINES
      DO 2000 LN=1,NL
        LVA=LINE((LN-1)*NPL+1)
        LVB=LINE((LN-1)*NPL+2)
        IF (.NOT.LDIAG) GOTO 1091

        LVA1=LVA
        LVB1=LVB
        GOTO 1092

 1091   LVA1=LINE((LN-1)*NPL+3)
        LVB1=LINE((LN-1)*NPL+4)
 1092   IF (EXISTS(LVA) .AND. EXISTS(LVB) .AND.
     1      EXISTS(LVA1) .AND. EXISTS(LVB1)) GOTO  2001

        WRITE(6,691) LN,LVA,LVB,LVA1,LVB1
  691   FORMAT(/' * * * ERROR.  FOR LINE',I3,
     1         '  LEVEL A OR B .GT. NLEVEL - CANNOT PROCESS',4I6)
        GOTO 2000

 2001   JA=JLEVEL(LVA)
        JB=JLEVEL(LVB)
        JA1=JLEVEL(LVA1)
        JB1=JLEVEL(LVB1)
        K=LTYPE(LN)
        IF (K.LE.0) K=ABS(JA-JB)
        WRITE(6,601) LN,JA,JB,JA1,JB1,K
  601   FORMAT(/' LINE',I3,'  FOR JA, JB; JA1, JB1 =  ',2I4,4X,2I4,
     &         '  PROCESSED FOR',I4,'-POLE RADIATION.')
        LTOP=MIN(JA+JA1,JB+JB1)
        IF (LTOP.LE.LM1) GOTO 2002

        WRITE(6,692) LTOP,LM1
  692   FORMAT(/' * * * WARNING.  POSSIBLE ERROR LTOP.GT.LMAX',2I6)
        LTOP=LM1
 2002   LMIN=MAX(ABS(JA-JA1),ABS(JB-JB1))
        QTOT2=0.
        DO 2100 L=LMIN,LTOP
          FC=PARSGN(K)*FUNC(JA1)*DSQRT(FUNC(JB1)*FUNC(JB))*
     1       THREEJ(JA,JA1,L)*THREEJ(JB,JB1,L)*SIXJ(JA,JB,JA1,JB1,K,L)
          TERM=FC*QL(1,1,L+1)
 2100     QTOT2=QTOT2-TERM
        WRITE(6,602) QTOT2
  602   FORMAT(11X,'***** PRESSURE BROADENING CROSS SECTION  =',F12.4,
     &         '  ANG**2   *****')
 2000 CONTINUE

C  RESTORE QL(1,1,1)
      QL(1,1,1)=Q0SAVE
      RETURN

C     *****      ITYPE = 5     *****
C  Q(L,MA,MB) ACCESSED VIA IXQLF WHICH RETURNS INDEX IN QL.
C  -1 RETURNED IF MISSING BY SYMMETRY RESTRICTION / 0 IF NOT FOUND
C  FOLLOWING ASSUMED ABOUT TABLE.
C  MA.GE.MB IN TABLE / TO REVERSE ORDER TAKE COMPLEX CONJUGATE
C  IMAGINARY PART FOR L,MA,MB ASSUMED TO FOLLOW REAL PART IN TABLE.
C  IF KA (KB) .NE. 0 THEN TERMS 2 (3) AND 4 WILL NOT BE PROCESSED.
C
 5000 IF (LDIAG) GOTO 5901
      WRITE(6,699)
  699 FORMAT(/' *** NEW IOSPB NOT SUPPORTED FOR ITYPE=5 AND .NOT.LDIAG'
     1       ,' --- REQUEST CANCELED.')
      RETURN

 5901 DO 5001 LN=1,NL
        LVA=LINE((LN-1)*NPL+1)
        LVB=LINE((LN-1)*NPL+2)
        IF (EXISTS(LVA) .AND. EXISTS(LVB)) GOTO 5002

        WRITE(6,691) LN,LVA,LVB
        GOTO 5001

 5002   JA=JLEVEL(3*LVA-2)
        KA=JLEVEL(3*LVA-1)
        EPSA=PARSGN(JLEVEL(3*LVA))
        IF (KA.EQ.0) EPSA=0.D0
        XJA=JA
        XKA=KA
        KA2=2*KA
        JB=JLEVEL(3*LVB-2)
        KB=JLEVEL(3*LVB-1)
        EPSB=PARSGN(JLEVEL(3*LVB))
        IF (KB.EQ.0) EPSB=0.D0
        XJB=JB
        XKB=KB
        KB2=2*KB
        K=LTYPE(LN)
        IF (K.LE.0) K=ABS(JA-JB)
        WRITE(6,652) LN,LVA,LVB,JA,KA,EPSA,JB,KB,EPSB,K
  652   FORMAT(/' LINE',I3,' BETWEEN LEVEL',2I4,5X,'(J, K, EPS =',
     1         2I4,F5.1,'  TO',2I4,F5.1,')   PROCESSED FOR',
     2         I4,'-POLE RADIATION.')
        LTOP=2*MIN(JA,JB)
        QTOT2=0.D0
        QTOTI=0.D0
        FACT=-XNORM(EPSA)*XNORM(EPSB)*PARSGN(K+KA+KB)*FUNC(JA)*FUNC(JB)
        DO 5100 L=IZERO,LTOP,2
          SFACT=SIXJ(JA,JB,JA,JB,K,L)
          IF (ABS(SFACT).LT.TOL) GOTO 5100

          XL=L
C  TERM 1 . . .
          PF=(1.D0+EPSA*EPSA)*(1.D0+EPSB*EPSB)
          TF=THRJ(XJA,XL,XJA,XKA,0.0D0,-XKA)*
     1       THRJ(XJB,XL,XJB,XKB,0.0D0,-XKB)
C  HANDLE Q(0,0,0)  -- I.E. QLOLD  -- SEPARATELY.
          IF (L.EQ.0) GOTO 5101
          CALL IXQLF(LM,LMAX,L,IZERO,IZERO,IZERO,IX,IXQL,NIXQL,NQL)
          IF (IX.EQ.0) WRITE(6,659) L,IZERO,IZERO,IZERO
  659     FORMAT('  REQUESTED MISSING Q.  L, MA, MB, CODE =',4I4)
          IF (IX.LE.0) GOTO 5200
          XXX=FACT*SFACT*PF*TF
          ADDR=XXX*QL(1,1,IX)
          QTOT2=QTOT2+ADDR
          ADDI=0.D0
          IF (LPRT) WRITE(6,657) L,IZERO,IZERO,XXX,ADDR,ADDI,QTOT2,QTOTI
  657     FORMAT('  L, MA, MB =',3I3,' *', F12.5 ,'  ADD(R/I) =',2F12.5,
     &           '  =  ',2F12.5)
          GOTO 5200

 5101     ADDI=0.D0
          XXX=FACT*SFACT*PF*TF
          ADDR=XXX*QLOLD(1,1)
          QTOT2=QTOT2+ADDR
          IF (LPRT) WRITE(6,657) L,IZERO,IZERO,XXX,ADDR,ADDI,QTOT2,QTOTI
 5200     IF (EPSA.EQ.0.D0 .OR. KA2.GT.L) GOTO 5300

C  TERM 2 . . .
          PF=2.D0*EPSA*(1.D0+EPSB*EPSB)
          TF=THRJ(XJA,XL,XJA,-XKA,2.D0*XKA,-XKA)*
     &        THRJ(XJB,XL,XJB,XKB,0.0D0,-XKB)
          CALL IXQLF(LM,LMAX,L,KA2,IZERO,IONE,IX,IXQL,NIXQL,NQL)
          IF (IX.EQ.0) WRITE(6,659) L,KA2,IZERO,IONE
          IF (IX.LE.0) GOTO 5300

          XXX=FACT*SFACT*PF*TF
          ADDR=XXX*QL(1,1,IX)
          ADDI=XXX*QL(1,1,IX+1)
          QTOT2=QTOT2+ADDR
          QTOTI=QTOTI+ADDI
          IF (LPRT) WRITE(6,657) L,KA2,IZERO,XXX,ADDR,ADDI,QTOT2,QTOTI
 5300     IF (EPSB.EQ.0.D0 .OR. KB2.GT.L) GOTO 5400

C  TERM 3 . . .
          PF=2.D0*EPSB*(1.D0+EPSA*EPSA)
          TF=THRJ(XJA,XL,XJA,XKA,0.0D0,-XKA)*
     &       THRJ(XJB,XL,XJB,-XKB,2.D0*XKB,-XKB)
          CALL IXQLF(LM,LMAX,L,KB2,IZERO,IONE,IX,IXQL,NIXQL,NQL)
          IF (IX.EQ.0) WRITE(6,659) L,IZERO,KB2,IONE
          IF (IX.LE.0) GOTO 5400
          XXX=FACT*SFACT*PF*TF
          ADDR=XXX*QL(1,1,IX)
          ADDI=-XXX*QL(1,1,IX+1)
          QTOT2=QTOT2+ADDR
          QTOTI=QTOTI+ADDI
          IF (LPRT) WRITE(6,657) L,IZERO,KB2,XXX,ADDR,ADDI,QTOT2,QTOTI
 5400     IF (EPSA*EPSB.EQ.0.D0 .OR. KA2.GT.L .OR. KB2.GT.L) GOTO 5100

C  TERM 4 . . .
          PF=4.D0*EPSA*EPSB
          TF=THRJ(XJA,XL,XJA,-XKA,2.D0*XKA,-XKA)*
     &        THRJ(XJB,XL,XJB,-XKB,2.D0*XKB,-XKB)
          IF (KA2-KB2) 5401,5402,5403

 5401     CALL IXQLF(LM,LMAX,L,KA2,KB2,IONE,IX,IXQL,NIXQL,NQL)
          IF (IX.EQ.0) WRITE(6,659) L,KA2,KB2,IONE
          IF (IX.LE.0) GOTO 5100

          XXX=FACT*SFACT*PF*TF
          ADDR=XXX*QL(1,1,IX)
          ADDI=XXX*QL(1,1,IX+1)
          QTOT2=QTOT2+ADDR
          QTOTI=QTOTI+ADDI
          IF (LPRT) WRITE(6,657) L,KA2,KB2,XXX,ADDR,ADDI,QTOT2,QTOTI
          GOTO 5100

 5402     CALL IXQLF(LM,LMAX,L,KA2,KB2,IZERO,IX,IXQL,NIXQL,NQL)
          IF (IX.EQ.0) WRITE(6,659) L,KA2,KB2,IZERO
          IF (IX.LE.0) GOTO 5100

          XXX=FACT*SFACT*PF*TF
          ADDR=XXX*QL(1,1,IX)
          QTOT2=QTOT2+ADDR
          ADDI=0.D0
          IF (LPRT) WRITE(6,657) L,KA2,KB2,XXX,ADDR,ADDI,QTOT2,QTOTI
          GOTO 5100

 5403     CALL IXQLF(LM,LMAX,L,KB2,KA2,IONE,IX,IXQL,NIXQL,NQL)
          IF (IX.EQ.0) WRITE(6,659) L,KB2,KA2,IONE
          IF (IX.LE.0) GOTO 5100

          XXX=FACT*SFACT*PF*TF
          ADDR=XXX*QL(1,1,IX)
          ADDI=-XXX*QL(1,1,IX+1)
          QTOT2=QTOT2+ADDR
          QTOTI=QTOTI+ADDI
          IF (LPRT) WRITE(6,657) L,KA2,KB2,XXX,ADDR,ADDI,QTOT2,QTOTI
 5100   CONTINUE

        WRITE(6,658) QTOT2,QTOTI
  658   FORMAT(11X,'***** CROSS SECTION (A**2),  REAL PART =',F12.4,5X,
     &        'IMAG. PART =',F12.4)

 5001 CONTINUE
C
      RETURN
      END
